
# -------- resources for "Recharge Database" --------
# -------- Provide connection_type=datasource to use data source connection ----- 
#--------- sample database.url= jdbc:db2://localhost:50001/recharge:currentSchema=recharge;retrieveMessagesFromServerOnGetMessage=true;
connection_type=datasource
#datasource_name=jdbc/DPDTH_UAT
datasource_name=jdbc/DPDTH
##datasource_name=jdbc/DPDTH_DEV
datasource_name_RDB=jdbc/DTHRDB
##datasource_name_RDB=jdbc/DTHRDB_DEV
datasource_snd=jdbc/snd
oradatasource_name=jdbc/DP
datasource_name_snd=jdbc/snd
#report_datasource_name=jdbc/DPDTH_UAT
report_datasource_name=jdbc/DPDTH
datasource_name_scm=jdbc/DPSCM
datasource_name_cpe=jdbc/DPCPE
datasource_name_hrms=jdbc/DPHRMS
DOWNLOAD_PATH =C:\\WASLOGS\\DPDTH\\file\\
SPECIAL_CHARS=\#!@$%^*()'\\
#1 for oracle ,2 for DB2
database.type=2
database.driver=com.ibm.db2.jcc.DB2Driver
database.url= jdbc:db2://10.24.60.142:50000/DP_DEV
database.username=db2admin
database.password=db2admin
#database.type=1
#database.driver=oracle.jdbc.driver.OracleDriver
#database.url=jdbc:oracle:thin:@10.0.50.78:1521:XE
#database.username=RECHARGE
#database.password=RECHARGE

database.pool.maxActive=50
database.pool.maxIdle=20
database.pool.maxWait.millisec=1000
database.pool.minIdle=5
database.pool.validationQuery=select 1 from sysibm.sysdummy1
database.pool.testWhileIdle=false
database.pool.testOnBorrow=true
database.pool.timeBetweenEvictionRuns.minutes=15
database.pool.numTestsPerEvictionRun=20
database.pool.minEvictableIdleTime.minutes=30


#-----Cache Refresh Time-------
cache.refreshtime.minutes=60
transaction.timeout.minutes=2
#-----Set the date format-------
DatePattern.dateMonthYear=M/dd/yyyy
DateTimePattern.dateMonthYearTime=yyyyMMdd HH:mm:ss
in.validity.datePattern=yyyyMMdd
sms.validity.datePattern=dd/MM/yyyy
DatePattern.DAYMONTHYEAR=dd/MM/yyyy
sendSms.india=91
Amount.currencyFormat=############0.00


#----- Maximum count of Password History for a User -----
password.history.maxCount=3
password.invalid.Count=3
password.history.noRepeat.count=4

# no of records to be shown on each page
pagination.records.perpage=10

# no of links to be shown on each page
pagination.links.perpage=10

#----- Time To Refresh the transaction id cache from the master table (in minutes) -------
trans_cache.refreshtime.minutes=2
#----- Time To Check Blackout Transaction (in minutes) -------
trans.blackouttime.minutes=5
mpassword.vendor.recharge.poc=82a48f6564d67822ff562b045c02085b127bf1c8


############## SMS INFO START ########################
SendSmsName.smsSender=RechargePOC
SendSms.ip =10.5.72.122
SendSms.connect.port =55000
SendSms.userid =virtual123
SendSms.pass =virtual123
#SendSms.systype =bank
#SendSms.addrange =40*

sendSms=true
sendSms.india=91
sendMail=false

################SMS INFO END ########################

################EMAIL INFO START ########################
email.sender.name=XYZ
email.sender=bhanu.gupta@in.ibm.com
#email.server=10.5.128.146
email.server=9.182.227.151
#email.reset.subject=Reset Password
email.reset.message= Your password has been successfully reset and your new password is


################EMAIL INFO END ########################
dth.settopbox.length=2
################ SSF HEADER NAME ######################## by Rohit
dp.SSF.LoginID=ccountid
#####################Schema for Calling Proc##########
dp.maindb.schema=DPDTH
dp.reportdb.schema=DPRPT
###############################################
upload.file.save.path =C:\\WASLOGS\\DPDTH\\file\\
dp.cpe.user=cpe_USER_1
#dp.cpe.user=CPEUSER
#dp.cpe.user=cpe_USER_1
report_from_time=7
report_to_time=4


####################Alerts###########################

#####################################################
#####################Logger Messages############################################
InterSSD.Stock.Transfer.Critical = CRITICAL ERROR while inserting in tables DP_DIST_STOCK_TRANSFER, DP_DDST_SERIAL_NO
STB.Search.Bulk.Critical = CRITICAL ERROR while STB search in Bulk upload
STB.Bulk.Flush.Out.Critical = CRITICAL ERROR while STB bulk flush out
Shipment.Error.Correction.Critical = CRICTICAL ERROR while Shipment Error Correction
Return.To.FSE.Critical = CRITICAL ERROR while Return to FSE
CPE.Recovery.Critical = CRITICAL ERROR while CPE Recovery
Excess.Stock.Full.Final.Critical = CRITICAL ERROR while Excess Stock/Full N Final Critical
PO.Stock.Acceptance.MissingDC.Critical = CRITICAL ERROR while PO Stock Acceptance Missing DC
PO.Stock.Acceptance.Upload.Critical = CRITICAL ERROR while PO Stock Acceptance upload
PO.FLOW.Critical = CRITICAL ERROR while PO FLOW

######################################################
hrms.validation.flag=N
Password.Expiring.Days = 45
Days.Remain.For.Psswd.Change = 15
#######################################################
#######################################################
### User Random Password Generation Property Keys#########
specialChars=@#%&$_
numericChars=0123456789
upperChars=QWERTYUIOPASDFGHJKLZXCVBNM
lowerChars=qwertyuiopasdfghjklzxcvbnm
lowerCharsConst=anvixkpctgreylqduhobwjzmsf
login.smtp=9.182.227.151
#10.5.128.146
sendFrom.email=DPDTH-Administrator
mail.new.user.password.subject=Distributor Portal DTH :: Account password information
new.user.passwrd.mail.surname=Dear
new.user.passwrd.mail.message=The following is your password for account : 
new.user.passwrd.mail.passwrd.text=Password
new.user.passwrd.mail.footer=/** This is an Auto generated email.Please do not reply to this.**/
new.user.passwrd.mail.space1=\n\n\n\n
new.user.passwrd.mail.space2=\n\n
new.user.passwrd.mail.space3=\n\n\n\n
new.user.passwrd.mail.space4=\n
new.user.passwrd.mail.space5=\n\n\n\n\n
new.user.passwrd.mail.error.critical=CRITICAL ERROR while sending the mail for New User Password
new.user.passwrd.mail.regard=Regards 
new.user.passwrd.mail.regardby=Distributor Portal System Administartor
hrms.olm.id.inactive=OLM Id is InActive in HRMS
hrms.olm.id.not.exists=OLM Id does not exist in HRMS
user.suspended=The User has been suspended. Please contact your Administrator.
hrms.valid.query=SELECT STATUS FROM apps.BTVL_HRMS_L5D_EMP_V where USER_NAME=?
av.upload.count.max=100
churn.dcgeneration.STBsless= STBs Ageing < = 2 years
churn.dcgeneration.STBsmore= STBs Ageing > 2 years
churn.refurbhishment.ageing=730
####### Multiselect users configuration for account detail report ######
Account.Detail.Report.MultiselectUsers=1,2

######### added by pratap for push sms ####
SMS.KEYWORD.STOCK.ELIGIBILITY.REPORT=SE
SMS.ERROR.MSG.STOCK.ELIGIBILITY.REPORT=Invalid format plz send SE <DistId> 
SMS.INVALID.ACCESS.MSG.STOCK.ELIGIBILITY.REPORT=Invalid Access
SMS.WRONG.DIST.ERROR.MSG.STOCK.ELIGIBILITY.REPORT=Distributer not exists
###########################################
UPLOAD.CLOSING.STOCK.1=8,15,16,17
UPLOAD.CLOSING.STOCK.2=9,13,14,15
UPLOAD.CLOSING.STOCK.3=9,13,14,15
UPLOAD.CLOSING.STOCK.4=8,10,11,12
is.scm.flush=Y
CLOSING.DISTFLAG=Y
CLOSING.DISTREMARKS=This is ok
CLOSING.DISTREMARKSN1=Lost
CLOSING.DISTREMARKSN2=Theft
CLOSING.DISTREMARKSN3=Fire/flood loss
CLOSING.DISTREMARKSN4=Other
CLOSING.DISTREMARKSN5=Wrong churn punched
CLOSING.DISTREMARKSN6=NRC case

SQL_SELECT_DP_RECO_OPENING_PENDING_PO_DETAILS_LIST=SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.PO_NO,PPO.DISTRIBUTOR_PURCHASE_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PO_DATE, PPO.DC_NO,PPO.DC_DATE,PPO.DISPATCHED_QTY_PER_PO, CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS FROM RECO_PENDING_PO PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_OPENING_PENDING_DC_DETAILS_LIST=SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.DISPATCHED_QTY_PER_DC,PPO.SERIAL_NO,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS FROM RECO_PENDING_DC PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND  CM.COLLECTION_ID=PPO.COLLECTION_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_OPENING_SERIALIZED_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PM.PRODUCT_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.RETAILER_ID) AS RETAILER_NAME,PPO.RETAILER_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.FSE_ID) AS LOGIN_NAME, PPO.STATUS_DESCRIPTION FROM RECO_SERIALIZED_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE  PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_OPENING_DEFECTIVE_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM RECO_DEFECTIVE_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PPO.DEFECT_ID=DM.DEFECT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_OPENING_UPGRAGE_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM, RECO_UPGRADE_STOCK PPO left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_OPENING_CHURN_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PPO.COLLECTED_ON,PPO.AGEING FROM RECO_CHURN_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID  AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur
SQL_SELECT_DP_RECO_RECEIVED_RCV_WH_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PO_NO,PPO.PO_DATE, CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS,PPO.LAST_PO_ACTION_DATE,sd.STATUS_DESCRIPTION FROM RECO_RECEIVED_WH PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DPDTH.DP_CPE_STATUS_MASTER sd WHERE PPO.PR_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.PR_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID and  PPO.STB_STATUS = sd.STATUS_ID  with ur
SQL_SELECT_DP_RECO_RECEIVED_INTERSSD_OK_STOCK_DETAILS_LIST= SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.TRANSFER_TYPE,PPO.DC_NO,PM.PRODUCT_NAME,PPO.SERIAL_NO,DD.CIRCLE_NAME,PPO.INITIATION_DATE,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE FROM RECO_RECEIVED_INTERSSD_OK PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD WHERE  PPO.TO_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.TO_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID with ur
SQL_SELECT_DP_RECO_RECEIVED_INTERSSD_DEFECTIVE_STOCK_DETAILS_LIST= SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.INV_CHANGE_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,DD.CIRCLE_NAME,PPO.INITIATION_DATE,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,DM.DEFECT_NAME FROM RECO_RECEIVED_INTERSSD_DEFECTIVE PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.TO_DIST_ID=? and PPO.PRODUCT_ID_OLD=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.TO_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_NEW AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND DM.DEFECT_ID=PPO.DEFECT_ID with ur
SQL_SELECT_DP_RECO_RECEIVED_UPGRADE_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.OLD_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.NEW_SR_NO,DM.DEFECT_NAME,PPO.INV_CHANGE_DATE,PPO.COLLECTION_DATE FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,RECO_RECEIVED_UPGRADE PPO left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID  WHERE PPO.NEW_DIST_D=? and PPO.PRODUCT_ID_OLD= ? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.NEW_DIST_D=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_OLD AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur
SQL_SELECT_DP_RECO_RECEIVED_CHURN_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NUMBER,PPO.COLLECTION_DATE,PPO.AGEING FROM RECO_RECEIVED_CHURN PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur
SQL_SELECT_DP_RECO_RETURNED_INTERSSD_OK_DETAILS_LIST= SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) as FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.TRANSFER_TYPE,PPO.DC_NO,PPO.SERIAL_NO,PM.PRODUCT_NAME,DD.CIRCLE_NAME,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE,PPO.INITIATION_DATE FROM RECO_RETURNED_INTERSSD_OK PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD WHERE PPO.FROM_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.FROM_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  with ur
SQL_SELECT_DP_RECO_RETURNED_CHURNED_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NUMBER,PPO.COLLECTION_DATE,PPO.DC_NO,PPO.WH_RECEIVED_DATE FROM RECO_RETURNED_CHURN PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur
SQL_SELECT_DP_RECO_RETURNED_INTERSSD_DEFECTIVE_DETAILS_LIST= SELECT (select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST) as FROM_DIST,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST) AS FROM_DIST_NAME,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST) as TO_DIST,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.SERIAL_NO,PM.PRODUCT_NAME,DD.CIRCLE_NAME,PPO.TRANSFER_DATE,PPO.INITIATION_DATE,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,PPO.INVENTORY_CHANGE_DATE,PPO.SERIAL_NO,DM.DEFECT_NAME FROM RECO_RETURNED_INTERSSD_DEFECTIVE PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST=? and PPO.DEFECTED_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.FROM_DIST  AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PM.PRODUCT_ID=PPO.DEFECTED_PRODUCT_ID AND DM.DEFECT_ID=PPO.DEFECT_ID with ur
SQL_SELECT_DP_RECO_RETURNED_COLLECTION_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.COLLECTED_ON,PPO.DC_NO,PPO.DC_DATE,PPO.WH_RECEIVED_DATE FROM RECO_RETURNED_COLLECTION PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.TO_DISTRIBUTOR=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.TO_DISTRIBUTOR=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID and PPO.COLLECTION_ID=?  with ur
SQL_SELECT_DP_RECO_RETURNED_OK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.DC_NO,PPO.DC_DATE,PPO.WH_RECEIVED_DATE,(case PPO.DC_STATUS when 'DRAFT' then 'Incomplete' when 'CREATED' then 'Ready To Dispatch' when 'INTRANSIT' then 'Ready To Dispatch'  when 'ERROR' then 'Error in Sending to Warehouse' when 'SUCCESS' then 'Sent To Warehouse' when 'AIW' then 'Accepted in Warehouse'  when 'AIWM' then 'Accepted in Warehouse with Modifications' when 'REJECT' then 'REJECT' end)  as DC_STATUS,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS  FROM RECO_RETURNED_OK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID and PPO.COLLECTION_ID=?  with ur
SQL_SELECT_DP_RECO_ACTIVATION_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,(SELECT LOGIN_NAME FROM VR_LOGIN_MASTER WHERE LOGIN_ID=PPO.FSE_ID) AS FSE_NAME,(SELECT LOGIN_NAME FROM VR_LOGIN_MASTER WHERE LOGIN_ID=PPO.RETAILER_ID) AS RETAILER_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PPO.ACCEPT_DATE,PPO.ACTIVATION_DATE FROM RECO_ACTIVATION PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between DATE(RP.FROM_DATE) AND DATE(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  with ur
SQL_SELECT_DP_RECO_ACTIVATED_INVENTORY_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.OLD_SR_NO,PPO.NEW_SR_NO,PM.PRODUCT_NAME,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,PPO.INV_CHANGE_DATE,DM.DEFECT_NAME,PPO.AGEING FROM RECO_RECEIVED_INVENTORY PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.OLD_DIST_ID =? and PPO.PRODUCT_ID_OLD=? AND (PPO.RUNNING_SCHEDULER_DATE) between DATE(RP.FROM_DATE) AND DATE(RP.TO_DATE) AND RP.ID=? AND PPO.OLD_DIST_ID =DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_OLD AND PPO.COLLECTION_ID= CM.COLLECTION_ID AND PPO.DEFECT_ID= DM.DEFECT_ID with ur
SQL_SELECT_DP_RECO_ADJUSTMENT_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_NAME AS DIST_NAME,CM.CIRCLE_NAME,PM.PRODUCT_NAME AS PRODCUT_NAME,PPO.SERIAL_NO AS SR_NO,PPO.PR_NO,PPO.PO_NO,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID= PPO.FSE_ID) AS FSE_NAME, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID= PPO.RETAILER_ID) AS RETAILER_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE,PPO.RETAILER_PURCHASE_DATE,'' AS NEW_SR_NO,'' AS NEW_PRODUCT_NAME,	CAST(NULL AS DATE)AS INV_CHANGE_DATE,CAST(NULL AS DATE)AS COLLECTED_ON,'' AS DEFECT_NAME,'1'  AS flag FROM	RECO_FLUSHED_OK PPO,DP_RECO_PERIOD RP,DP_DIST_DETAILS DD,VR_CIRCLE_MASTER CM,DP_PRODUCT_MASTER PM WHERE	PPO.DISTRIBUTOR_ID =? AND PPO.PRODUCT_ID=? AND	(PPO.RUNNING_SCHEDULER_DATE) BETWEEN DATE(RP.FROM_DATE) AND	DATE(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND CM.CIRCLE_ID=PPO.CIRCLE_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID UNION SELECT DD.DISTRIBUTOR_NAME AS DIST_NAME,CM.CIRCLE_NAME,PM.PRODUCT_NAME AS PRODCUT_NAME,PPPO.DEFECTIVE_SR_NO AS SR_NO,''  AS PR_NO,''  AS PO_NO,''  AS FSE_NAME,'' AS RETAILER_NAME ,CAST(NULL AS TIMESTAMP) AS DISTRIBUTOR_PURCHASE_DATE,CAST(NULL AS TIMESTAMP) FSE_PURCHASE_DATE, CAST(NULL AS TIMESTAMP)   AS RETAILER_PURCHASE_DATE,PPPO.NEW_SR_NO,(SELECT PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE PRODUCT_ID=PPPO.NEW_PRODUCT_ID )AS NEW_PRODUCT_NAME,PPPO.INV_CHANGE_DATE,PPPO.COLLECTED_ON,DM.DEFECT_NAME AS DEFECT_NAME,'2' AS flag FROM RECO_FLUSHED_DEF PPPO,DP_RECO_PERIOD RRP,DP_DIST_DETAILS DD,VR_CIRCLE_MASTER CM,DP_PRODUCT_MASTER PM,DP_REV_DEFECT_MST DM WHERE PPPO.FROM_DIST_ID =? AND PPPO.DEFECTIVE_PRODUCT_ID=? AND (PPPO.RUNNING_SCHEDULER_DATE) BETWEEN DATE(RRP.FROM_DATE) AND	DATE(RRP.TO_DATE) AND RRP.ID=? AND PPPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND CM.CIRCLE_ID=PPPO.CIRCLE_ID AND PM.PRODUCT_ID=PPPO.DEFECTIVE_PRODUCT_ID AND DM.DEFECT_ID=PPPO.DEFECT_ID ORDER BY flag WITH ur
SQL_SELECT_DP_RECO_CLOSING_SERIALIZED_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PM.PRODUCT_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE,  (SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.RETAILER_ID) AS RETAILER_ID,PPO.RETAILER_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.FSE_ID) AS LOGIN_NAME,PPO.STATUS_DESCRIPTION FROM RECO_SERIALIZED_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE)AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  AND PPO.RECO_ID= RP.ID with ur
SQL_SELECT_DP_RECO_CLOSING_DEFECTIVE_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM RECO_DEFECTIVE_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE)= date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PPO.DEFECT_ID=DM.DEFECT_ID AND PPO.RECO_ID=RP.ID with ur
SQL_SELECT_DP_RECO_CLOSING_UPGRADE_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME, PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM , RECO_UPGRADE_STOCK PPO  left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID  WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=?  AND (PPO.RUNNING_SCHEDULER_DATE)=  date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID  with ur
SQL_SELECT_DP_RECO_CLOSING_CHURN_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PPO.COLLECTED_ON,PPO.AGEING FROM RECO_CHURN_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur
SQL_SELECT_DP_RECO_CLOSING_PENDINGPO_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.PO_NO,PPO.DISTRIBUTOR_PURCHASE_DATE,PM.PRODUCT_NAME,PPO.PO_DATE, PPO.DC_NO,PPO.DC_DATE,PPO.DISPATCHED_QTY_PER_PO,PPO.SERIAL_NO,CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS FROM RECO_PENDING_PO PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID with ur
SQL_SELECT_DP_RECO_CLOSING_PENDINGDC_STOCK_DETAILS_LIST= SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.DISPATCHED_QTY_PER_DC,PPO.SERIAL_NO ,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS FROM RECO_PENDING_DC PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur
#Not needed
#prod
#SQL_GET_ELIGIBILITY_20= select HD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SQL_GET_ELIGIBILITY_30=  select PVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME )    union   select PVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur	
#SQL_GET_ELIGIBILITY_40= select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_50= select SDPLUS_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select SDPLUS_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_10= select SD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select SD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_60= select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_70= select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_80= select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#SQL_GET_ELIGIBILITY_90= select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur

SQL_GET_ELIGIBILITY_20= select HD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
SQL_GET_ELIGIBILITY_30=  select PVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME )    union   select PVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur	
SQL_GET_ELIGIBILITY_40= select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_50= select SDPLUS_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select SDPLUS_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_10= select SD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select SD_ELIG as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_80= select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_70= select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_60= select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_90= select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#commercial queries

#prod
#SQL_GET_ELIGIBILITY_2= select HD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#PVR_ELIG
#SQL_GET_ELIGIBILITY_3=  select 0 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select 0 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur	
#HDDVR_ELIG
#SQL_GET_ELIGIBILITY_4= select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SDPLUS_ELIG is SD_ELIG for comm
#SQL_GET_ELIGIBILITY_5= select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#Normal or SD SD_ELIG
#SQL_GET_ELIGIBILITY_1=select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#PROD_ELIG_1 CAM
#SQL_GET_ELIGIBILITY_6= select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SQL_GET_ELIGIBILITY_7= select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SQL_GET_ELIGIBILITY_8= select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SQL_GET_ELIGIBILITY_9=  select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur

# DEV
SQL_GET_ELIGIBILITY_2= select HD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#PVR_ELIG
SQL_GET_ELIGIBILITY_3=  select 0 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select 0 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur	
#HDDVR_ELIG
SQL_GET_ELIGIBILITY_4= select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select HDDVR_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#SDPLUS_ELIG is SD_ELIG for comm
SQL_GET_ELIGIBILITY_5= select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#Normal or SD SD_ELIG
SQL_GET_ELIGIBILITY_1=select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select SD_ELIG as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
#PROD_ELIG_1 CAM
SQL_GET_ELIGIBILITY_8= select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_1 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
SQL_GET_ELIGIBILITY_7= select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_2 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
SQL_GET_ELIGIBILITY_6= select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_3 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
SQL_GET_ELIGIBILITY_9=  select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select PROD_ELIG_4 as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur


# General Query
SQL_ELIGIBILITY_COMM_CONFIG= select field_name_sf as ELIG from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union  select field_name_ssd as ELIG from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME ) with ur
SQL_ELIGIBILITY_SWAP_CONFIG= select field_name_sf as ELIG from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?)  and CREATEDDATE=(  select max(a.CREATEDDATE) from   ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union    select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME )   union   select field_name_ssd as ELIG from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(  select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur
#For Balance
SQL_GET_ELIGIBILITY = select SECURITY_DEPOSIT as BALANCE from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=( select max(a.CREATEDDATE) from  ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_SWAP_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_SWAP_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name ) as a  group by LOGIN_NAME  ) with ur
SQL_GET_ELIGIBILITY_COMM=select SECURITY_BALANCE as BALANCE from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=( select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union   select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) union select SECURITY_BALANCE as BALANCE from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) and CREATEDDATE=(select max(a.CREATEDDATE) from ( select max(CREATEDDATE) as CREATEDDATE,login_name from DP_ELIGIBILITY_COMMERCIAL_SF where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name union  select max(CREATEDDATE) as CREATEDDATE ,login_name from DP_ELIGIBILITY_COMMERCIAL_SSD where LOGIN_NAME= (select login_name from vr_login_master where login_id=?) group by login_name  ) as a  group by LOGIN_NAME  ) with ur