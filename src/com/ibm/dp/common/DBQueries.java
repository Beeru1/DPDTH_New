package com.ibm.dp.common;

import com.ibm.virtualization.recharge.common.Constants;

public final class DBQueries {
//
///* Queries for Account Master by Anju */

	//public static final String SQL_TSM__DIST_VALIDAT="SELECT * FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT=(select ACCOUNT_ID from VR_ACCOUNT_DETAILS where MOBILE_NUMBER=?) and ACCOUNT_ID=?";
	public static final String SQL_TSM__DIST_VALIDAT="SELECT * FROM DP_DISTRIBUTOR_MAPPING WHERE PARENT_ACCOUNT=(select ACCOUNT_ID from VR_ACCOUNT_DETAILS where MOBILE_NUMBER=?) and DP_DIST_ID=?";
	//added by pratap
	public static final String SQL_SELECT_DIST_ACC_LEVEL = "SELECT GROUP_ID FROM VR_LOGIN_MASTER WHERE LOGIN_ID=? with ur";
	// adding end by pratap
	
	
	public static final String SQL_SELECT_LAPU_MOBILE_NO= "select ACCOUNT_ID from VR_ACCOUNT_DETAILS  where ACCOUNT_ID in (Select LOGIN_ID from VR_LOGIN_MASTER where STATUS ='A' and GROUP_ID='9') and LAPU_MOBILE_NO= ?";
	public static final String SQL_GET_SERIAL_SEC_DONE ="Select SERIAL_NO from DP_STOCK_INVENTORY where PRODUCT_ID = ? and DISTRIBUTOR_ID =? and FSE_ID is not null and MARK_DAMAGED='N' with ur";
	
	public static final String SQL_SELECT_ISACTIVE = "SELECT LOGIN.LOGIN_ID FROM VR_LOGIN_MASTER LOGIN,VR_ACCOUNT_DETAILS ACCOUNT WHERE LOGIN.LOGIN_ID=ACCOUNT.ACCOUNT_ID AND ACCOUNT.MOBILE_NUMBER=? with ur";
	public static final String SQL_SELECT_ACCESS_LEVEL = "select a.GROUP_ID,a.GROUP_NAME,a.DESCRIPTION from VR_GROUP_DETAILS  a , VR_GROUP_ACCESS_LEVEL_MAPPING  b where a.GROUP_ID=b.GROUP_ACCESS_LEVEL_ID and b.GROUP_ID=? with ur";
	public static final String SQL_UPDATE_ACCOUNT_SOURCE_BALANCE = "UPDATE VR_ACCOUNT_BALANCE SET AVAILABLE_BALANCE=AVAILABLE_BALANCE + ?,OPERATING_BALANCE=OPERATING_BALANCE + ? WHERE ACCOUNT_ID=? AND OPERATING_BALANCE>=?";
	public static final String SQL_UPDATE_ACCOUNT_DESTINATION_BALANCE = "UPDATE VR_ACCOUNT_BALANCE SET AVAILABLE_BALANCE=AVAILABLE_BALANCE + ?,OPERATING_BALANCE=OPERATING_BALANCE + ? WHERE ACCOUNT_ID=? ";
	public static final String SQL_UPDATE_AVAILABLE_BALANCE = "UPDATE VR_ACCOUNT_BALANCE SET AVAILABLE_BALANCE= AVAILABLE_BALANCE + ? WHERE ACCOUNT_ID= ?";
	public static final String SQL_UPDATE_OPERATING_BALANCE = "UPDATE VR_ACCOUNT_BALANCE SET OPERATING_BALANCE= OPERATING_BALANCE + ? WHERE ACCOUNT_ID= ?  ";
	public static final String SQL_CHECK_UPDATE_OPERATING_BALANCE = "UPDATE VR_ACCOUNT_BALANCE SET OPERATING_BALANCE= OPERATING_BALANCE + ? WHERE ACCOUNT_ID= ? AND OPERATING_BALANCE >= ? ";
	public static final String SQL_SELECT_CHILD_ACCOUNT = "SELECT VR_ACCOUNT_DETAILS.ACCOUNT_NAME,VR_ACCOUNT_DETAILS.ACCOUNT_ID,VR_ACCOUNT_DETAILS.MOBILE_NUMBER,VR_LOGIN_MASTER.LOGIN_NAME FROM VR_ACCOUNT_DETAILS,VR_LOGIN_MASTER WHERE PARENT_ACCOUNT=? AND  VR_LOGIN_MASTER.LOGIN_ID=VR_ACCOUNT_DETAILS.ACCOUNT_ID AND  VR_LOGIN_MASTER.STATUS='"
		+ Constants.ACTIVE_STATUS + "' with ur";
	public static final String SQL_SELECT_ISCHILD = "SELECT ACCOUNT_ID FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=? AND PARENT_ACCOUNT=? with ur";
	public static final String SQL_SELECT_BALANCE = "SELECT OPENING_BALANCE,RATE,THRESHOLD,OPERATING_BALANCE,AVAILABLE_BALANCE FROM VR_ACCOUNT_BALANCE WHERE ACCOUNT_ID=? with ur";
	public static final String SQL_INSERT_DIST_ACCOUNT = "INSERT INTO VR_ACCOUNT_DETAILS (ACCOUNT_ID,MOBILE_NUMBER,SIM_NUMBER, ACCOUNT_NAME,ACCOUNT_ADDRESS, EMAIL,CATEGORY, CIRCLE_ID,OPENING_DT, CREATED_DT,CREATED_BY, UPDATED_DT, UPDATED_BY,ACCOUNT_LEVEL) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String SQL_SELECT_PRODUCTID =  "select count(*) from dp_product_master where PRODUCT_NAME like ? with ur";
	public static final String SQL_INSERT_ACC_DETAIL = "INSERT INTO VR_ACCOUNT_DETAILS (ACCOUNT_ID,MOBILE_NUMBER,SIM_NUMBER,ACCOUNT_NAME,ACCOUNT_ADDRESS,EMAIL,CIRCLE_ID,PARENT_ACCOUNT,ROOT_LEVEL_ID,OPENING_DT,CREATED_DT,CREATED_BY,UPDATED_DT,UPDATED_BY,ACCOUNT_LEVEL,STATE_ID,ZONE_ID,CITY_ID,PIN_NUMBER,address_2,BILLABLE_ACCOUNT,BILLABLE_ACC_ID,LAPU_MOBILE_NO,LAPU_MOBILE_NO_2,FTA_MOBILE_NO,FTA_MOBILE_NO_2,DIST_CHANNEL_ID,CHANNEL_CATEGORY_ID,BEAT_CODE,OUTLET_TYPE,Contact_Name,ACCOUNT_CODE,RETAILER_TYPE,ALT_CHANNEL_TYPE,CHANNEL_TYPE,CATEGORY,OCTROI_CHARGE,TIN_NO,SERVICE_TAX_NO,PAN_NO,CST_NO,CST_DATE,TIN_DATE,DISTRIBUTOR_LOCATOR,IS_REPAIR,TRANSACTION_TYPE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	//Added by Sugandha to insert FSE OR Retailer
	public static final String SQL_INSERT_ACC_DIST_CHILD = "INSERT INTO VR_ACCOUNT_DETAILS (ACCOUNT_ID,MOBILE_NUMBER,SIM_NUMBER,ACCOUNT_NAME,ACCOUNT_ADDRESS,EMAIL,CIRCLE_ID,PARENT_ACCOUNT,ROOT_LEVEL_ID,OPENING_DT,CREATED_DT,CREATED_BY,UPDATED_DT,UPDATED_BY,ACCOUNT_LEVEL,STATE_ID,ZONE_ID,CITY_ID,PIN_NUMBER,address_2,BILLABLE_ACCOUNT,BILLABLE_ACC_ID,LAPU_MOBILE_NO,LAPU_MOBILE_NO_2,FTA_MOBILE_NO,FTA_MOBILE_NO_2,DIST_CHANNEL_ID,CHANNEL_CATEGORY_ID,BEAT_CODE,OUTLET_TYPE,Contact_Name,ACCOUNT_CODE,RETAILER_TYPE,ALT_CHANNEL_TYPE,CHANNEL_TYPE,CATEGORY,OCTROI_CHARGE,TIN_NO,SERVICE_TAX_NO,PAN_NO,CST_NO,CST_DATE,TIN_DATE,DISTRIBUTOR_LOCATOR,IS_REPAIR,TRANSACTION_TYPE,RET_DEMO_IDS,RETAILER_LAPU) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	public static final String SQL_INSERT_WH_DIST_MAP = "INSERT INTO DP_WH_DIST_MAP(WH_CODE, DISTID) VALUES(?, ?)" ;
	public static final String SQL_UPDATE_WAREHOUSE_CODE = "UPDATE DPDTH.DP_WH_DIST_MAP SET WH_CODE= ?  WHERE DISTID= ?";
	public static final String SQL_CHECK_WAREHOUSE_CODE = " select count(*) from DP_WH_DIST_MAP where DISTID = ?";
	public static final String SQL_SELECT_WAREHOUSE_CODE = "select is_active from DP_WH_MASTER where WH_CODE = ?";
	
	
	public static final String SQL_GET_INAC_CHURN= "Select  a.SERIAL_NUMBER AS SERIAL_NO" +
	" from DP_REV_CHURN_INVENTORY a inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID AND a.STATUS in " +
	" ('"+Constants.COLLECTION_STATUS_TYPE_COL+"','"+Constants.COLLECTION_STATUS_TYPE_ERR+"') and a.PRODUCT_ID=? and a.CREATED_BY=? ";

	public static final String SQL_SELECT_PARENT_TRADE = "select dist.CHANNEL_NAME, cat.CATEGORY_NAME, "
		+"details.DIST_CHANNEL_ID, details.CHANNEL_CATEGORY_ID from VR_ACCOUNT_DETAILS details,"
		+" DP_DIST_CHANNEL_MASTER dist, "
		+"DP_CHANNEL_CATEGORY_MASTER CAT where dist.CHANNEL_ID = details.DIST_CHANNEL_ID "
		+"and cat.CATEGORY_ID = details.CHANNEL_CATEGORY_ID "
		+" and details.account_id=? with ur";
	public static final String SQL_INSERT_ACC_BALANCE = " INSERT INTO VR_ACCOUNT_BALANCE (ACCOUNT_ID,OPENING_BALANCE,RATE, THRESHOLD, OPERATING_BALANCE,AVAILABLE_BALANCE) VALUES (?,?,?,?,?,?)";
//	public static final String SQL_SELECT_MOBILENO = "SELECT AD.MOBILE_NUMBER,AD.ACCOUNT_LEVEL FROM VR_ACCOUNT_DETAILS AD,VR_LOGIN_MASTER LM WHERE AD.ACCOUNT_ID=? and LM.LOGIN_ID=? and LM.STATUS='A'with ur";
	public static final String SQL_SELECT_MOBILENO = "SELECT MOBILE_NUMBER,ACCOUNT_LEVEL FROM VR_ACCOUNT_DETAILS WHERE VR_ACCOUNT_DETAILS.ACCOUNT_ID=? with ur";
	//Added by Neetika
	public static final String SQL_SELECT_MOBILENO_DIST = "SELECT MOBILE_NUMBER,ACCOUNT_LEVEL,LAPU_MOBILE_NO,LAPU_MOBILE_NO_2,RETAILER_LAPU FROM VR_ACCOUNT_DETAILS WHERE VR_ACCOUNT_DETAILS.ACCOUNT_ID=? with ur";
	//end by neetika
	public static final String SQL_UPDATE_ACC_DETAIL_DIST = "UPDATE VR_ACCOUNT_DETAILS  SET SIM_NUMBER =?,MOBILE_NUMBER =?,ACCOUNT_NAME = ?,ACCOUNT_ADDRESS = ?,EMAIL = ?,CATEGORY = ?,UPDATED_DT =?, UPDATED_BY = ?,ZONE_ID=?,CITY_ID=?,STATE_ID=?, BILLABLE_ACCOUNT =?, DIST_CHANNEL_ID=?, CHANNEL_CATEGORY_ID=?,LAPU_MOBILE_NO=?, LAPU_MOBILE_NO_2=?, FTA_MOBILE_NO=?,FTA_MOBILE_NO_2=?, BILLABLE_ACC_ID=?, BEAT_CODE=?, OUTLET_TYPE = ?, PIN_NUMBER=?,  ADDRESS_2=?, CONTACT_NAME=? , ACCOUNT_CODE = ?, RETAILER_TYPE = ?, ALT_CHANNEL_TYPE = ?, CHANNEL_TYPE = ?, OCTROI_CHARGE = ?, TIN_NO = ?, SERVICE_TAX_NO = ?, PAN_NO = ?, CST_NO = ?, DISTRIBUTOR_LOCATOR=?, PARENT_ACCOUNT=?, IS_REPAIR=?,TRANSACTION_TYPE=? WHERE ACCOUNT_ID=? ";
	//added by Sugandha to update Retailer or FSE
	public static final String SQL_UPDATE_ACC_DIST_CHILD = "UPDATE VR_ACCOUNT_DETAILS  SET SIM_NUMBER =?,MOBILE_NUMBER =?,RETAILER_LAPU=?,ACCOUNT_NAME = ?,ACCOUNT_ADDRESS = ?,EMAIL = ?,CATEGORY = ?,UPDATED_DT =?, UPDATED_BY = ?,ZONE_ID=?,CITY_ID=?,STATE_ID=?, BILLABLE_ACCOUNT =?, DIST_CHANNEL_ID=?, CHANNEL_CATEGORY_ID=?,LAPU_MOBILE_NO=?, LAPU_MOBILE_NO_2=?, FTA_MOBILE_NO=?,FTA_MOBILE_NO_2=?, BILLABLE_ACC_ID=?, BEAT_CODE=?, OUTLET_TYPE = ?, PIN_NUMBER=?,  ADDRESS_2=?, CONTACT_NAME=? , ACCOUNT_CODE = ?, RETAILER_TYPE = ?, ALT_CHANNEL_TYPE = ?, CHANNEL_TYPE = ?, OCTROI_CHARGE = ?, TIN_NO = ?, SERVICE_TAX_NO = ?, PAN_NO = ?, CST_NO = ?, DISTRIBUTOR_LOCATOR=?, PARENT_ACCOUNT=?, IS_REPAIR=?,TRANSACTION_TYPE=?,RET_DEMO_IDS=? WHERE ACCOUNT_ID=? ";
	
	public static final String SQL_UPDATE_ACC_DETAIL = "UPDATE VR_ACCOUNT_DETAILS  SET  DIST_TYPE=?, SIM_NUMBER =?,MOBILE_NUMBER =?,ACCOUNT_NAME = ?,ACCOUNT_ADDRESS = ?,EMAIL = ?,CATEGORY = ?,UPDATED_DT =?, UPDATED_BY = ?,ZONE_ID=?,CITY_ID=?,STATE_ID=?, BILLABLE_ACCOUNT =?, DIST_CHANNEL_ID=?, CHANNEL_CATEGORY_ID=?,LAPU_MOBILE_NO=?, LAPU_MOBILE_NO_2=?, FTA_MOBILE_NO=?,FTA_MOBILE_NO_2=?, BILLABLE_ACC_ID=?, BEAT_CODE=?, OUTLET_TYPE = ?, PIN_NUMBER=?,  ADDRESS_2=?, CONTACT_NAME=? , ACCOUNT_CODE = ?, RETAILER_TYPE = ?, ALT_CHANNEL_TYPE = ?, CHANNEL_TYPE = ?, OCTROI_CHARGE = ?, TIN_NO = ?, SERVICE_TAX_NO = ?, PAN_NO = ?, CST_NO = ?, DISTRIBUTOR_LOCATOR=?, IS_REPAIR=?, PARENT_ACCOUNT=? , APPROVAL_1 = ? , APPROVAL_2 = ? , SR_NUMBER = ? ,CST_DATE = ? ,TIN_DATE = ?,REMARKS=?, TRANSACTION_TYPE=? WHERE ACCOUNT_ID=? ";
	public static final String SQL_UPDATE_ACC_BALANCE = " UPDATE  VR_ACCOUNT_BALANCE SET RATE =?,THRESHOLD=? WHERE ACCOUNT_ID=? ";
	public static final String SQL_SELECT_ACCOUNT_ID = " SELECT  LOGIN.LOGIN_ID FROM VR_LOGIN_MASTER LOGIN,VR_ACCOUNT_DETAILS DETAILS WHERE  LOGIN.LOGIN_ID=DETAILS.ACCOUNT_ID AND LOGIN.LOGIN_NAME=? AND STATUS='"
														+ Constants.ACTIVE_STATUS + "' with ur";
	
	public static final String SQL_SELECT_ACCOUNT_ID_ALL = " SELECT  LOGIN.LOGIN_ID , STATUS FROM VR_LOGIN_MASTER LOGIN,VR_ACCOUNT_DETAILS DETAILS WHERE  LOGIN.LOGIN_ID=DETAILS.ACCOUNT_ID AND LOGIN.LOGIN_NAME=? with ur";
	
	
	public static final String SQL_SELECT_ACCOUNT_ID_SAME_CIRCLE = " SELECT  LOGIN_ID FROM VR_LOGIN_MASTER , VR_ACCOUNT_DETAILS WHERE  LOGIN_NAME = ? AND STATUS='"
		+ Constants.ACTIVE_STATUS
		+ "' AND LOGIN_ID = ACCOUNT_ID with ur "; //AND CIRCLE_ID = ? with ur";
	public static final String SQL_SELECT_LOGIN_ID_SAME_CIRCLE = "SELECT  LOGIN_ID FROM VR_LOGIN_MASTER , VR_ACCOUNT_DETAILS WHERE  ACCOUNT_NAME = ? AND STATUS='"
		+ Constants.ACTIVE_STATUS
		+ "' AND LOGIN_ID = ACCOUNT_ID AND CIRCLE_ID = ? with ur";
	public static final String SQL_SELECT_ACCOUNT_CODE = " SELECT  DETAILS.ACCOUNT_NAME,login.LOGIN_NAME FROM VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS WHERE LOGIN.LOGIN_ID=? AND LOGIN.LOGIN_ID=DETAILS.ACCOUNT_ID with ur";
	public static final String SQL_SELECT_ACCOUNT_WITH_CIRCLEID = " SELECT ab.RATE,ab.OPERATING_BALANCE,ab.AVAILABLE_BALANCE, ad.ACCOUNT_CODE,  ad.ACCOUNT_NAME,ad.MOBILE_NUMBER,ad.ACCOUNT_ID FROM  VR_ACCOUNT_DETAILS ad INNER  join VR_ACCOUNT_BALANCE ab on ad.ACCOUNT_ID = ab.ACCOUNT_ID  WHERE  ad.CIRCLE_ID=? AND ACCOUNT_LEVEL='D' AND ad.STATUS='"
		+ Constants.ACTIVE_STATUS + "' with ur";
	public static final String SQL_SELECT_ACCOUNT_RATE = " SELECT RATE FROM VR_ACCOUNT_BALANCE,VR_LOGIN_MASTER WHERE ACCOUNT_ID=LOGIN_ID AND STATUS='"
		+ Constants.ACTIVE_STATUS + "' AND ACCOUNT_ID=? with ur";
	public static final String SQL_UPDATE_ACCOUNT_AVAILBALANCE = " UPDATE VR_ACCOUNT_BALANCE SET AVAILABLE_BALANCE=(AVAILABLE_BALANCE+?),OPERATING_BALANCE=(OPERATING_BALANCE+?) WHERE ACCOUNT_ID=? ";

	public static final String SQL_UPDATE_VR_ACCOUNT_DETAILS = " UPDATE VR_ACCOUNT_DETAILS SET UPDATED_BY=?,UPDATED_DT =current timestamp WHERE ACCOUNT_ID=? ";

	public static final String SQL_SELECT_ALL_ACC_WHERE_CLAUSE = " FROM VR_ACCOUNT_DETAILS DETAILS LEFT JOIN VR_ACCOUNT_BALANCE BALANCE ON DETAILS.ACCOUNT_ID = BALANCE.ACCOUNT_ID, VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER LOGIN2,VR_LOGIN_MASTER L1 ,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD, VR_REGION_MASTER REGION, DP_ACCOUNT_CIRCLE_MAP cm WHERE cm.ACCOUNT_ID=DETAILS.ACCOUNT_ID AND LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID AND DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND CIRCLE.REGION_ID = REGION.REGION_ID AND LOGIN2.LOGIN_ID = DETAILS.CREATED_BY  with ur";
	/*public static final String SQL_SELECT_ALL_ACC =" GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS,DETAILS.ACCOUNT_LEVEL,COALESCE(details.DIST_CHANNEL_ID,0)as DIST_CHANNEL_ID ,COALESCE(details.CHANNEL_CATEGORY_ID,0)as CHANNEL_CATEGORY_ID,COALESCE(DETAILS.OUTLET_TYPE,0) as " +
	" OUTLET_TYPE,parent.account_name as acc_parent from VR_ACCOUNT_DETAILS DETAILS , VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1, VR_GROUP_DETAILS group,VR_CIRCLE_MASTER circle,VR_ACCOUNT_DETAILS parent where parent.account_id=details.parent_account and details.account_level = (select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level = (SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE LEVEL_ID=?) AND HIERARCHY_ID =(SELECT HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER WHERE LEVEL_ID=?))  " +
	" and l1.login_id=details.parent_account AND DETAILS.account_id = VLM.login_id and VLM.group_id = group.group_id and details.circle_id = circle.circle_id ";*/
	public static final String SQL_SELECT_ALL_ACC =" GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS,DETAILS.ACCOUNT_LEVEL,COALESCE(details.DIST_CHANNEL_ID,0)as DIST_CHANNEL_ID ,COALESCE(details.CHANNEL_CATEGORY_ID,0)as CHANNEL_CATEGORY_ID,COALESCE(DETAILS.OUTLET_TYPE,0) as " +
	" OUTLET_TYPE,parent.account_name as acc_parent from VR_ACCOUNT_DETAILS DETAILS , VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1, VR_GROUP_DETAILS group,VR_ACCOUNT_DETAILS parent where parent.account_id=details.parent_account and details.account_level = (select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level = (SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE LEVEL_ID=?) AND HIERARCHY_ID =(SELECT HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER WHERE LEVEL_ID=?))  " +
	" and l1.login_id=details.parent_account AND DETAILS.account_id = VLM.login_id and VLM.group_id = group.group_id  ";
	//Added by Neetika
	public static final String SQL_SELECT_ACCOUNT_ID_SAME_CIRCLE_INACTIVE="SELECT  LOGIN_ID FROM VR_LOGIN_MASTER , VR_ACCOUNT_DETAILS WHERE  LOGIN_NAME = ? "
		+ " AND LOGIN_ID = ACCOUNT_ID with ur "; //AND CIRCLE_ID = ? with ur";"
/*		"select GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent,"
			+" DETAILS.PARENT_ACCOUNT PCODE,temp.OPERATING_BALANCE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,"
			+" DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS,"
			+" temp.OPENING_BALANCE,temp.AVAILABLE_BALANCE,DETAILS.ACCOUNT_LEVEL,temp.DIST_CHANNEL_ID,temp.CHANNEL_CATEGORY_ID from VR_ACCOUNT_DETAILS DETAILS "
			+" left join (select account.account_id,account.DIST_CHANNEL_ID,account.CHANNEL_CATEGORY_ID,balance.OPERATING_BALANCE,"
			+" balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE from VR_ACCOUNT_BALANCE balance,VR_ACCOUNT_DETAILS account "
			+" where account.account_id = balance.account_id)temp "
			+" on temp.account_id = details.account_id,VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1, "
			+" VR_GROUP_DETAILS group,VR_CIRCLE_MASTER circle where account_level = (select level_id from VR_ACCOUNT_LEVEL_MASTER "
			+" where acc_level = (SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE LEVEL_ID=?) AND HIERARCHY_ID = "
			+"(SELECT HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER WHERE LEVEL_ID=?))  "
			+" and l1.login_id=details.parent_account AND DETAILS.account_id = VLM.login_id and "
			+" VLM.group_id = group.group_id and details.circle_id = circle.circle_id";
	*/
	public static final String SQL_SELECT_ALL_ACC_H2 ="select GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME, " +
			"DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS " +
			"from VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1, VR_GROUP_DETAILS group,VR_CIRCLE_MASTER circle where account_level in (select level_id from VR_ACCOUNT_LEVEL_MASTER " +
			"where acc_level > (SELECT level2.ACC_LEVEL FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE LEVEL_ID=?) AND HIERARCHY_ID =(SELECT HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER WHERE LEVEL_ID=?)) " +
			"and l1.login_id=VLM.login_id AND DETAILS.account_id = VLM.login_id and VLM.group_id = group.group_id and details.circle_id = circle.circle_id ";

	
	public static final String SQL_SELECT_ALL_ID_HELP_USER ="select DETAILS.CREATED_DT,DETAILS.CREATED_BY,(Select LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID =DETAILS.CREATED_BY ) as CREATEDBYNAME,VLM.LOGIN_ATTEMPTED,VLM.LOGIN_NAME, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID,DETAILS.ACCOUNT_NAME," +
			" DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS" +
			" from VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER VLM where account_level  =13" +
			" AND DETAILS.account_id = VLM.login_id "; 
	
	
	//		" SELECT GROUPD.GROUP_NAME, LOGIN.LOGIN_NAME,LOGIN.LOGIN_ATTEMPTED,L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE, BALANCE.OPERATING_BALANCE,DETAILS.ACCOUNT_ID, CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CREATED_DT, DETAILS.CATEGORY,LOGIN.STATUS, BALANCE.OPENING_BALANCE,BALANCE.AVAILABLE_BALANCE, BALANCE.RATE, BALANCE.THRESHOLD, REGION.REGION_NAME , DETAILS.CREATED_BY , LOGIN2.LOGIN_NAME as CREATEDBYNAME, DETAILS.LAPU_MOBILE_NO "
//		+ SQL_SELECT_ALL_ACC_WHERE_CLAUSE;
	public static final String SQL_SELECT_ALL_ACC_COUNT = "SELECT COUNT(DETAILS.ACCOUNT_ID) "
		+ SQL_SELECT_ALL_ACC_WHERE_CLAUSE;
	public static final String SQL_SELECT_ACC_MOBILE = "SELECT LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,BALANCE.OPERATING_BALANCE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,BALANCE.Threshold,BALANCE.RATE,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,DETAILS.PARENT_ACCOUNT,LOGIN.STATUS,BALANCE.OPENING_BALANCE,BALANCE.AVAILABLE_BALANCE, DETAILS.CIRCLE_ID, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.STATE_ID,DETAILS.CITY_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.BILLABLE_ACC_ID,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,DETAILS.CIRCLE_ID FROM VR_LOGIN_MASTER LOGIN,VR_ACCOUNT_DETAILS DETAILS,VR_ACCOUNT_BALANCE BALANCE,VR_CIRCLE_MASTER CIRCLE WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID	 AND DETAILS.ACCOUNT_ID = BALANCE.ACCOUNT_ID AND	 DETAILS.CIRCLE_ID=CIRCLE.CIRCLE_ID AND DETAILS.MOBILE_NUMBER=?  with ur";
	// CHANGE BY HARBANS
/*	public static final String SQL_SELECT_ACC = "SELECT (SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? ) WHCODE ,(SELECT WH_NAME  FROM  DP_WH_MASTER where WH_CODE = ( SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ?)) WH_NAME , IS_DISABLE,CIRCLE.CIRCLE_CODE as CIRCLE_CODE ,LOGIN.TYPE, LOGIN.PASSWORD,REGION.REGION_NAME,LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,coalesce(DETAILS.CATEGORY,'NA')CATEGORY,DETAILS.PARENT_ACCOUNT,DETAILS.STATE_ID,LOGIN.STATUS, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,LEVEL.LEVEL_NAME,DETAILS.CIRCLE_ID,DETAILS.CREATED_DT,DETAILS.ACCOUNT_ADDRESS,COALESCE (details.IS_REPAIR,'N') AS IS_REPAIR,LEVEL.ACC_LEVEL,LEVEL.HIERARCHY_ID,DETAILS.LAPU_MOBILE_NO,DETAILS.CONTACT_NAME,DETAILS.LAPU_MOBILE_NO_2,DETAILS.FTA_MOBILE_NO,DETAILS.FTA_MOBILE_NO_2,DETAILS.ACCOUNT_CODE,DETAILS.ADDRESS_2,zone.ZONE_NAME,details.ZONE_ID,details.CITY_ID,balance.OPERATING_BALANCE,balance.Threshold,balance.RATE,balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE,city.CITY_NAME,group1.group_name,COALESCE (details.BEAT_CODE,0) beat_code," +
			" COALESCE (beat.BEAT_NAME,'NA') as beat_name,COALESCE (details.RETAILER_TYPE,0) RETAILER_TYPE,COALESCE (retail.RETAILER_CATEGORY_NAME,'NA')RETAILER_CATEGORY_NAME,COALESCE (details.OUTLET_TYPE,0) as OUTLAY_TYPE,COALESCE (outlet.OUTLET_NAME,'NA') as OUTLET_NAME,COALESCE (details.CHANNEL_TYPE,0) as CHANNEL_TYPE,COALESCE (channel.CHANNEL_TYPE_NAME,'NA') as CHANNEL_NAME,COALESCE (details.ALT_CHANNEL_TYPE,0) as ALT_CHANNEL_TYPE,COALESCE (alt.ALT_CHANNEL_NAME,'NA') as ALT_CHANNEL_NAME,details.CST_NO,details.SERVICE_TAX_NO,DETAILS.TIN_NO,DPDTH.TO_CHAR(date(details.TIN_DATE),'mm/dd/yyyy') as TIN_DATE,DPDTH.TO_CHAR(date(details.CST_DATE),'mm/dd/yyyy') as CST_DATE,DETAILS.OCTROI_CHARGE,DETAILS.DISTRIBUTOR_LOCATOR,DETAILS.REPORTING_EMAIL,DETAILS.PAN_NO FROM VR_REGION_MASTER REGION,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS group1,VR_ACCOUNT_LEVEL_MASTER LEVEL,VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS left join VR_ACCOUNT_BALANCE BALANCE on details.ACCOUNT_ID = BALANCE.ACCOUNT_ID left join DP_ZONE_MASTER zone on ZONE.ZONE_ID = details.ZONE_ID left join VR_CITY_MASTER city on city.city_id = details.city_id left join DP_BEAT_MASTER beat on " +
			" beat.beat_code=details.beat_code left join DP_OUTLET_CATEGORY outlet on outlet.OUTLET_ID =details.OUTLET_TYPE left join DP_RETAILER_CATEGORY retail on retail.RETAILER_CATEGORY_ID=details.RETAILER_TYPE left join DP_CHANNEL_TYPE channel on channel.CHANNEL_TYPE_ID = details.CHANNEL_TYPE left join DP_ALTERNATE_CHANNEL alt on alt.ALT_CHANNEL_ID = details.ALT_CHANNEL_TYPE where LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.CIRCLE_ID=CIRCLE.CIRCLE_ID AND LEVEL.LEVEL_ID = DETAILS.ACCOUNT_LEVEL AND CIRCLE.REGION_ID = REGION.REGION_ID and group1.group_id = login.group_id and details.ACCOUNT_ID=? with ur";
	*/
	
	public static final String SQL_SELECT_ACC = "SELECT (SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? ) WHCODE ,(SELECT WH_NAME  FROM  DP_WH_MASTER where WH_CODE = ( SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ?)) WH_NAME , IS_DISABLE,CIRCLE.CIRCLE_CODE as CIRCLE_CODE ,LOGIN.TYPE, LOGIN.PASSWORD,REGION.REGION_NAME,LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,DETAILS.ACCOUNT_ID,DETAILS.RET_DEMO_IDS,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,coalesce(DETAILS.CATEGORY,'NA')CATEGORY,DETAILS.PARENT_ACCOUNT,DETAILS.STATE_ID,LOGIN.STATUS, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,LEVEL.LEVEL_NAME,DETAILS.CIRCLE_ID,DETAILS.CREATED_DT,DETAILS.ACCOUNT_ADDRESS,COALESCE (details.IS_REPAIR,'N') AS IS_REPAIR,LEVEL.ACC_LEVEL,LEVEL.HIERARCHY_ID,DETAILS.LAPU_MOBILE_NO,DETAILS.CONTACT_NAME,DETAILS.LAPU_MOBILE_NO_2,DETAILS.FTA_MOBILE_NO,DETAILS.FTA_MOBILE_NO_2,DETAILS.ACCOUNT_CODE,DETAILS.ADDRESS_2,zone.ZONE_NAME,details.ZONE_ID,details.CITY_ID,balance.OPERATING_BALANCE,balance.Threshold,balance.RATE,balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE,city.CITY_NAME,group1.group_name,COALESCE (details.BEAT_CODE,0) beat_code," +
	" COALESCE (beat.BEAT_NAME,'NA') as beat_name,COALESCE (details.RETAILER_TYPE,0) RETAILER_TYPE,COALESCE (retail.RETAILER_CATEGORY_NAME,'NA')RETAILER_CATEGORY_NAME,COALESCE (details.OUTLET_TYPE,0) as OUTLAY_TYPE,COALESCE (outlet.OUTLET_NAME,'NA') as OUTLET_NAME,COALESCE (details.CHANNEL_TYPE,0) as CHANNEL_TYPE,COALESCE (channel.CHANNEL_TYPE_NAME,'NA') as CHANNEL_NAME,COALESCE (details.ALT_CHANNEL_TYPE,0) as ALT_CHANNEL_TYPE,COALESCE (alt.ALT_CHANNEL_NAME,'NA') as ALT_CHANNEL_NAME,details.CST_NO,details.SERVICE_TAX_NO,DETAILS.TIN_NO,DPDTH.TO_CHAR(date(details.TIN_DATE),'mm/dd/yyyy') as TIN_DATE,DPDTH.TO_CHAR(date(details.CST_DATE),'mm/dd/yyyy') as CST_DATE,DETAILS.OCTROI_CHARGE,DETAILS.DISTRIBUTOR_LOCATOR,DETAILS.REPORTING_EMAIL,DETAILS.PAN_NO,DETAILS.TRANSACTION_TYPE FROM VR_REGION_MASTER REGION,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS group1,VR_ACCOUNT_LEVEL_MASTER LEVEL,VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS left join VR_ACCOUNT_BALANCE BALANCE on details.ACCOUNT_ID = BALANCE.ACCOUNT_ID left join DP_ZONE_MASTER zone on ZONE.ZONE_ID = details.ZONE_ID left join VR_CITY_MASTER city on city.city_id = details.city_id left join DP_BEAT_MASTER beat on " +
	" beat.beat_code=details.beat_code left join DP_OUTLET_CATEGORY outlet on outlet.OUTLET_ID =details.OUTLET_TYPE left join DP_RETAILER_CATEGORY retail on retail.RETAILER_CATEGORY_ID=details.RETAILER_TYPE left join DP_CHANNEL_TYPE channel on channel.CHANNEL_TYPE_ID = details.CHANNEL_TYPE left join DP_ALTERNATE_CHANNEL alt on alt.ALT_CHANNEL_ID = details.ALT_CHANNEL_TYPE where LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.CIRCLE_ID=CIRCLE.CIRCLE_ID AND LEVEL.LEVEL_ID = DETAILS.ACCOUNT_LEVEL AND CIRCLE.REGION_ID = REGION.REGION_ID and group1.group_id = login.group_id and details.ACCOUNT_ID=?  " 
	 +" UNION "
	 +" SELECT (SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? ) WHCODE ,(SELECT WH_NAME  FROM  DP_WH_MASTER where WH_CODE = ( SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? )) WH_NAME , IS_DISABLE,CIRCLE.CIRCLE_CODE as CIRCLE_CODE ,LOGIN.TYPE, LOGIN.PASSWORD,REGION.REGION_NAME,LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,DETAILS.ACCOUNT_ID,DETAILS.RET_DEMO_IDS,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,coalesce(DETAILS.CATEGORY,'NA')CATEGORY,DETAILS.PARENT_ACCOUNT,DETAILS.STATE_ID,LOGIN.STATUS, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,LEVEL.LEVEL_NAME,map.CIRCLE_ID,DETAILS.CREATED_DT,DETAILS.ACCOUNT_ADDRESS,COALESCE (details.IS_REPAIR,'N') AS IS_REPAIR,LEVEL.ACC_LEVEL,LEVEL.HIERARCHY_ID,DETAILS.LAPU_MOBILE_NO,DETAILS.CONTACT_NAME,DETAILS.LAPU_MOBILE_NO_2,DETAILS.FTA_MOBILE_NO,DETAILS.FTA_MOBILE_NO_2,DETAILS.ACCOUNT_CODE,DETAILS.ADDRESS_2,zone.ZONE_NAME,details.ZONE_ID,details.CITY_ID,balance.OPERATING_BALANCE,balance.Threshold,balance.RATE,balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE,city.CITY_NAME,group1.group_name,COALESCE (details.BEAT_CODE,0) beat_code, "
	 +" COALESCE (beat.BEAT_NAME,'NA') as beat_name,COALESCE (details.RETAILER_TYPE,0) RETAILER_TYPE,COALESCE (retail.RETAILER_CATEGORY_NAME,'NA')RETAILER_CATEGORY_NAME,COALESCE (details.OUTLET_TYPE,0) as OUTLAY_TYPE,COALESCE (outlet.OUTLET_NAME,'NA') as OUTLET_NAME,COALESCE (details.CHANNEL_TYPE,0) as CHANNEL_TYPE,COALESCE (channel.CHANNEL_TYPE_NAME,'NA') as CHANNEL_NAME,COALESCE (details.ALT_CHANNEL_TYPE,0) as ALT_CHANNEL_TYPE,COALESCE (alt.ALT_CHANNEL_NAME,'NA') as ALT_CHANNEL_NAME,details.CST_NO,details.SERVICE_TAX_NO,DETAILS.TIN_NO,DPDTH.TO_CHAR(date(details.TIN_DATE),'mm/dd/yyyy') as TIN_DATE,DPDTH.TO_CHAR(date(details.CST_DATE),'mm/dd/yyyy') as CST_DATE,DETAILS.OCTROI_CHARGE,DETAILS.DISTRIBUTOR_LOCATOR,DETAILS.REPORTING_EMAIL,DETAILS.PAN_NO,DETAILS.TRANSACTION_TYPE  "
	 +" FROM VR_REGION_MASTER REGION,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS group1,VR_ACCOUNT_LEVEL_MASTER LEVEL, "
	 +" DP_ACCOUNT_CIRCLE_MAP map , "
	 +" VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS left join VR_ACCOUNT_BALANCE BALANCE " 
	 +" on details.ACCOUNT_ID = BALANCE.ACCOUNT_ID left join DP_ZONE_MASTER zone on ZONE.ZONE_ID = details.ZONE_ID " 
	 +" left join VR_CITY_MASTER city on city.city_id = details.city_id left join DP_BEAT_MASTER beat on  "
	 +" beat.beat_code=details.beat_code left join DP_OUTLET_CATEGORY outlet on outlet.OUTLET_ID =details.OUTLET_TYPE " 
	 +" left join DP_RETAILER_CATEGORY retail on retail.RETAILER_CATEGORY_ID=details.RETAILER_TYPE left  "
	 +" join DP_CHANNEL_TYPE channel on channel.CHANNEL_TYPE_ID = details.CHANNEL_TYPE left join DP_ALTERNATE_CHANNEL alt " 
	 +" on alt.ALT_CHANNEL_ID = details.ALT_CHANNEL_TYPE where LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND  "
	 +" CIRCLE.CIRCLE_ID = map.circle_id and DETAILS.account_id=map.account_id "
	 +" AND LEVEL.LEVEL_ID = DETAILS.ACCOUNT_LEVEL AND CIRCLE.REGION_ID = REGION.REGION_ID " 
	 +" and group1.group_id = login.group_id and details.ACCOUNT_ID=?  with ur ";
// Added by sugandha to get account Details for Retailer or FSE
	
	
	
	public static final String SQL_SELECT_ACC_DIST_CHILD = "SELECT (SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? ) WHCODE ,(SELECT WH_NAME  FROM  DP_WH_MASTER where WH_CODE = ( SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ?)) WH_NAME , IS_DISABLE,CIRCLE.CIRCLE_CODE as CIRCLE_CODE ,LOGIN.TYPE, LOGIN.PASSWORD,REGION.REGION_NAME,LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,DETAILS.ACCOUNT_ID,DETAILS.RET_DEMO_IDS,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.RETAILER_LAPU,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,coalesce(DETAILS.CATEGORY,'NA')CATEGORY,DETAILS.PARENT_ACCOUNT,DETAILS.STATE_ID,LOGIN.STATUS, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,LEVEL.LEVEL_NAME,DETAILS.CIRCLE_ID,DETAILS.CREATED_DT,DETAILS.ACCOUNT_ADDRESS,COALESCE (details.IS_REPAIR,'N') AS IS_REPAIR,LEVEL.ACC_LEVEL,LEVEL.HIERARCHY_ID,DETAILS.LAPU_MOBILE_NO,DETAILS.CONTACT_NAME,DETAILS.LAPU_MOBILE_NO_2,DETAILS.FTA_MOBILE_NO,DETAILS.FTA_MOBILE_NO_2,DETAILS.ACCOUNT_CODE,DETAILS.ADDRESS_2,zone.ZONE_NAME,details.ZONE_ID,details.CITY_ID,balance.OPERATING_BALANCE,balance.Threshold,balance.RATE,balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE,city.CITY_NAME,group1.group_name,COALESCE (details.BEAT_CODE,0) beat_code," +
	" COALESCE (beat.BEAT_NAME,'NA') as beat_name,COALESCE (details.RETAILER_TYPE,0) RETAILER_TYPE,COALESCE (retail.RETAILER_CATEGORY_NAME,'NA')RETAILER_CATEGORY_NAME,COALESCE (details.OUTLET_TYPE,0) as OUTLAY_TYPE,COALESCE (outlet.OUTLET_NAME,'NA') as OUTLET_NAME,COALESCE (details.CHANNEL_TYPE,0) as CHANNEL_TYPE,COALESCE (channel.CHANNEL_TYPE_NAME,'NA') as CHANNEL_NAME,COALESCE (details.ALT_CHANNEL_TYPE,0) as ALT_CHANNEL_TYPE,COALESCE (alt.ALT_CHANNEL_NAME,'NA') as ALT_CHANNEL_NAME,details.CST_NO,details.SERVICE_TAX_NO,DETAILS.TIN_NO,DPDTH.TO_CHAR(date(details.TIN_DATE),'mm/dd/yyyy') as TIN_DATE,DPDTH.TO_CHAR(date(details.CST_DATE),'mm/dd/yyyy') as CST_DATE,DETAILS.OCTROI_CHARGE,DETAILS.DISTRIBUTOR_LOCATOR,DETAILS.REPORTING_EMAIL,DETAILS.PAN_NO,DETAILS.TRANSACTION_TYPE FROM VR_REGION_MASTER REGION,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS group1,VR_ACCOUNT_LEVEL_MASTER LEVEL,VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS left join VR_ACCOUNT_BALANCE BALANCE on details.ACCOUNT_ID = BALANCE.ACCOUNT_ID left join DP_ZONE_MASTER zone on ZONE.ZONE_ID = details.ZONE_ID left join VR_CITY_MASTER city on city.city_id = details.city_id left join DP_BEAT_MASTER beat on " +
	" beat.beat_code=details.beat_code left join DP_OUTLET_CATEGORY outlet on outlet.OUTLET_ID =details.OUTLET_TYPE left join DP_RETAILER_CATEGORY retail on retail.RETAILER_CATEGORY_ID=details.RETAILER_TYPE left join DP_CHANNEL_TYPE channel on channel.CHANNEL_TYPE_ID = details.CHANNEL_TYPE left join DP_ALTERNATE_CHANNEL alt on alt.ALT_CHANNEL_ID = details.ALT_CHANNEL_TYPE where LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.CIRCLE_ID=CIRCLE.CIRCLE_ID AND LEVEL.LEVEL_ID = DETAILS.ACCOUNT_LEVEL AND CIRCLE.REGION_ID = REGION.REGION_ID and group1.group_id = login.group_id and details.ACCOUNT_ID=?  " 
	 +" UNION "
	 +" SELECT (SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? ) WHCODE ,(SELECT WH_NAME  FROM  DP_WH_MASTER where WH_CODE = ( SELECT WH_CODE  FROM DPDTH.DP_WH_DIST_MAP where DISTID = ? )) WH_NAME , IS_DISABLE,CIRCLE.CIRCLE_CODE as CIRCLE_CODE ,LOGIN.TYPE, LOGIN.PASSWORD,REGION.REGION_NAME,LOGIN.LOGIN_NAME,LOGIN.M_PASSWORD,DETAILS.ACCOUNT_ID,DETAILS.RET_DEMO_IDS,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.MOBILE_NUMBER,DETAILS.RETAILER_LAPU,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,coalesce(DETAILS.CATEGORY,'NA')CATEGORY,DETAILS.PARENT_ACCOUNT,DETAILS.STATE_ID,LOGIN.STATUS, LOGIN.GROUP_ID ,DETAILS.BILLABLE_ACC_ID,DETAILS.BILLABLE_ACCOUNT,DETAILS.PIN_NUMBER,DETAILS.ROOT_LEVEL_ID,DETAILS.ACCOUNT_LEVEL,LEVEL.LEVEL_NAME,map.CIRCLE_ID,DETAILS.CREATED_DT,DETAILS.ACCOUNT_ADDRESS,COALESCE (details.IS_REPAIR,'N') AS IS_REPAIR,LEVEL.ACC_LEVEL,LEVEL.HIERARCHY_ID,DETAILS.LAPU_MOBILE_NO,DETAILS.CONTACT_NAME,DETAILS.LAPU_MOBILE_NO_2,DETAILS.FTA_MOBILE_NO,DETAILS.FTA_MOBILE_NO_2,DETAILS.ACCOUNT_CODE,DETAILS.ADDRESS_2,zone.ZONE_NAME,details.ZONE_ID,details.CITY_ID,balance.OPERATING_BALANCE,balance.Threshold,balance.RATE,balance.OPENING_BALANCE,balance.AVAILABLE_BALANCE,city.CITY_NAME,group1.group_name,COALESCE (details.BEAT_CODE,0) beat_code, "
	 +" COALESCE (beat.BEAT_NAME,'NA') as beat_name,COALESCE (details.RETAILER_TYPE,0) RETAILER_TYPE,COALESCE (retail.RETAILER_CATEGORY_NAME,'NA')RETAILER_CATEGORY_NAME,COALESCE (details.OUTLET_TYPE,0) as OUTLAY_TYPE,COALESCE (outlet.OUTLET_NAME,'NA') as OUTLET_NAME,COALESCE (details.CHANNEL_TYPE,0) as CHANNEL_TYPE,COALESCE (channel.CHANNEL_TYPE_NAME,'NA') as CHANNEL_NAME,COALESCE (details.ALT_CHANNEL_TYPE,0) as ALT_CHANNEL_TYPE,COALESCE (alt.ALT_CHANNEL_NAME,'NA') as ALT_CHANNEL_NAME,details.CST_NO,details.SERVICE_TAX_NO,DETAILS.TIN_NO,DPDTH.TO_CHAR(date(details.TIN_DATE),'mm/dd/yyyy') as TIN_DATE,DPDTH.TO_CHAR(date(details.CST_DATE),'mm/dd/yyyy') as CST_DATE,DETAILS.OCTROI_CHARGE,DETAILS.DISTRIBUTOR_LOCATOR,DETAILS.REPORTING_EMAIL,DETAILS.PAN_NO,DETAILS.TRANSACTION_TYPE  "
	 +" FROM VR_REGION_MASTER REGION,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS group1,VR_ACCOUNT_LEVEL_MASTER LEVEL, "
	 +" DP_ACCOUNT_CIRCLE_MAP map , "
	 +" VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS left join VR_ACCOUNT_BALANCE BALANCE " 
	 +" on details.ACCOUNT_ID = BALANCE.ACCOUNT_ID left join DP_ZONE_MASTER zone on ZONE.ZONE_ID = details.ZONE_ID " 
	 +" left join VR_CITY_MASTER city on city.city_id = details.city_id left join DP_BEAT_MASTER beat on  "
	 +" beat.beat_code=details.beat_code left join DP_OUTLET_CATEGORY outlet on outlet.OUTLET_ID =details.OUTLET_TYPE " 
	 +" left join DP_RETAILER_CATEGORY retail on retail.RETAILER_CATEGORY_ID=details.RETAILER_TYPE left  "
	 +" join DP_CHANNEL_TYPE channel on channel.CHANNEL_TYPE_ID = details.CHANNEL_TYPE left join DP_ALTERNATE_CHANNEL alt " 
	 +" on alt.ALT_CHANNEL_ID = details.ALT_CHANNEL_TYPE where LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND  "
	 +" CIRCLE.CIRCLE_ID = map.circle_id and DETAILS.account_id=map.account_id "
	 +" AND LEVEL.LEVEL_ID = DETAILS.ACCOUNT_LEVEL AND CIRCLE.REGION_ID = REGION.REGION_ID " 
	 +" and group1.group_id = login.group_id and details.ACCOUNT_ID=?  with ur ";

	
	
	
	
	public static final String SQL_SELECT_ACC_BY_MOBILE = "SELECT BALANCE.RATE,DETAILS.ACCOUNT_ID,DETAILS.PARENT_ACCOUNT,DETAILS.BILLABLE_ACC_ID,LOGIN.STATUS FROM VR_ACCOUNT_BALANCE BALANCE, VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER LOGIN WHERE DETAILS.ACCOUNT_ID=LOGIN.LOGIN_ID AND BALANCE.ACCOUNT_ID=LOGIN.LOGIN_ID AND DETAILS.MOBILE_NUMBER=? with ur";
	public static final String SQL_UPDATE_ACC_OERATINGBALANCE = " UPDATE VR_ACCOUNT_BALANCE  SET OPERATING_BALANCE=(OPERATING_BALANCE-?),AVAILABLE_BALANCE=(AVAILABLE_BALANCE-?) WHERE (OPERATING_BALANCE-?)>=0 AND ACCOUNT_ID=? ";
	public static final String SQL_CIRCLE_SELECT_WITH_ACCOUNTID = "SELECT CIRCLE_ID FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=? with ur";
	//next query by aman
	public static final String SQL_CIRCLE_SELECT_WITH_ACCOUNTID_FINANCE = "SELECT CIRCLE_ID FROM DP_ACCOUNT_CIRCLE_MAP WHERE ACCOUNT_ID=? with ur";
	public static final String SQL_SELECT_DISTRIBUTOR = " SELECT ab.RATE, ab.OPERATING_BALANCE, ab.AVAILABLE_BALANCE,  lm.LOGIN_NAME, ad.ACCOUNT_NAME,ad.MOBILE_NUMBER,ad.ACCOUNT_ID   FROM  VR_ACCOUNT_DETAILS ad,VR_ACCOUNT_BALANCE ab,VR_LOGIN_MASTER lm    WHERE  ad.CIRCLE_ID=? AND PARENT_ACCOUNT is NULL AND   ad.ACCOUNT_ID = ab.ACCOUNT_ID AND ad.ACCOUNT_ID=lm.LOGIN_ID   AND lm.STATUS='"
		+ Constants.ACTIVE_STATUS + "' with ur";
	public static final String SQL_SELECT_COMMISSION_ID = "SELECT COMMISSIONING_ID FROM VR_COMMISS_GRP_MAPPING WHERE ACCOUNT_ID=? with ur";
	public static final String SQL_SELECT_PARENT_ACCOUNTID = " SELECT LOGIN_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS WHERE LOGIN_NAME=? AND LOGIN_ID=ACCOUNT_ID AND  CIRCLE_ID=? AND STATUS ='"
		+ Constants.ACTIVE_STATUS + "' with ur";

	//Commented by Nazim Hussain as it compares the mobile no. of same account as well
	//public static final String SQL_IS_MOBILENO_EXIST = " SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS WHERE LAPU_MOBILE_NO=? OR MOBILE_NUMBER = ? AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS +"' with ur";
	
	//Changed by Nazim Hussain to ignore the mobile number of same account
	public static final String SQL_IS_MOBILENO_EXIST = " SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER, VR_ACCOUNT_DETAILS" +
			" WHERE (LAPU_MOBILE_NO=? OR (MOBILE_NUMBER =? and ACCOUNT_LEVEL!=8) or (RETAILER_LAPU=? and ACCOUNT_LEVEL=8) or LAPU_MOBILE_NO_2=? or FTA_MOBILE_NO=? or FTA_MOBILE_NO_2=?)" +
			" AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS +"' with ur";
	public static final String SQL_IS_MOBILENO_EXIST_EDIT = " SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER, VR_ACCOUNT_DETAILS" +
	" WHERE (LAPU_MOBILE_NO=? OR (MOBILE_NUMBER =? and ACCOUNT_LEVEL!=8) or (RETAILER_LAPU=? and ACCOUNT_LEVEL=8) or LAPU_MOBILE_NO_2=? or FTA_MOBILE_NO=? or FTA_MOBILE_NO_2=?)" +
	" AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS +"' AND ACCOUNT_ID != ? with ur";
	
	
	
	public static final String SQL_IS_MOBILENO_EXIST_ALL = "select A.lapu,B.mobile,C.lapu2,D.fta,E.fta2 from (select account_id lapu from vr_account_details where LAPU_MOBILE_NO=?)A,"
		+"(select account_id mobile from vr_account_details where MOBILE_NUMBER=?)B,"
		+"(select account_id lapu2 from vr_account_details where LAPU_MOBILE_NO_2=?)C,"
		+"(select account_id fta from vr_account_details where FTA_MOBILE_NO=?)D,"
		+"(select account_id fta2 from vr_account_details where FTA_MOBILE_NO_2=?)E";

	public static final String SQL_OPENING_DATE = " SELECT date(OPENING_DT) OPENING_DT,(select date(current date) from sysibm.SYSDUMMY1) TODAY_DT  FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = ?  with ur";
	public static final String SQL_SELECT_FOR_PARENT_ACC = " SELECT GROUPD.GROUP_NAME,LOGIN.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,BALANCE.OPERATING_BALANCE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,LOGIN.STATUS,BALANCE.OPENING_BALANCE,BALANCE.AVAILABLE_BALANCE FROM VR_ACCOUNT_DETAILS DETAILS LEFT JOIN VR_LOGIN_MASTER L1 ON DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID, VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_BALANCE BALANCE,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD  WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.ACCOUNT_ID = BALANCE.ACCOUNT_ID  AND DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID AND DETAILS.CIRCLE_ID = ? AND LOGIN.STATUS = '"
		+ Constants.ACTIVE_STATUS
		+ "' AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND DETAILS.ACCOUNT_ID IN ( SELECT ACCOUNT_ID FROM VR_ACCOUNT_DETAILS START WITH ACCOUNT_ID = ? CONNECT BY PRIOR ACCOUNT_ID = PARENT_ACCOUNT )  with ur";
	public static final String SQL_SELECT_FOR_PARENT_ACC_COUNT = "select count(*) from  VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER VLM where account_level in ( select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level in ( SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE	LEVEL_ID=?) AND HIERARCHY_ID = (SELECT 	HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER	WHERE	LEVEL_ID=?)) AND VLM.STATUS = 'A' and DETAILS.circle_id = ?  AND DETAILS.account_id = VLM.login_id ";
	public static final String SQL_SELECT_FOR_PARENT_ACC_COUNT_LIST = "select count(*) from  VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER VLM where account_level in ( select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level in ( SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE	LEVEL_ID=?) AND HIERARCHY_ID = (SELECT 	HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER	WHERE	LEVEL_ID=?)) AND VLM.STATUS = 'A' " +
			" and DETAILS.circle_id in (?1)  AND DETAILS.account_id = VLM.login_id " +
			" UNION" +
			" Select count(distinct(ACM.ACCOUNT_ID)) from DP_ACCOUNT_CIRCLE_MAP ACM where ACM.ACCOUNT_ID in (select DETAILS.ACCOUNT_ID from  VR_ACCOUNT_DETAILS DETAILS," +
			" VR_LOGIN_MASTER VLM where account_level in ( select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level in ( SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 " +
			" WHERE	LEVEL_ID=?) AND HIERARCHY_ID = (SELECT 	HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER	WHERE	LEVEL_ID=?)) AND VLM.STATUS = 'A' AND DETAILS.account_id = VLM.login_id ) and circle_id in (?2) ";
	
//		" SELECT * FROM VR_ACCOUNT_DETAILS DETAILS LEFT JOIN VR_ACCOUNT_BALANCE BALANCE ON DETAILS.ACCOUNT_ID = BALANCE.ACCOUNT_ID, VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER L1 , VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD  WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID  AND DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID AND DETAILS.CIRCLE_ID = ? AND LOGIN.STATUS ='"
//		+ Constants.ACTIVE_STATUS
//		+ "' AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND DETAILS.ACCOUNT_ID IN ( SELECT ACCOUNT_ID FROM VR_ACCOUNT_DETAILS START WITH ACCOUNT_ID = ? CONNECT BY PRIOR ACCOUNT_ID = PARENT_ACCOUNT )  with ur";
	public static final String SQL_SELECT_ACCOUNT_LEVEL = " SELECT LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER level1 "
		+ "  WHERE level1.ACC_LEVEL>(SELECT ACC_LEVEL "
		+ "  FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE  level2.level_id=(SELECT ACCOUNT_LEVEL FROM VR_ACCOUNT_DETAILS "
		+ "  WHERE ACCOUNT_ID=?  ) ) AND level1.HIERARCHY_ID in (SELECT HIERARCHY_ID FROM   VR_ACCOUNT_LEVEL_MASTER  WHERE "
		+ "	LEVEL_ID=(SELECT ACCOUNT_LEVEL  FROM VR_ACCOUNT_DETAILS  WHERE ACCOUNT_ID=?)) "
		+ "	union SELECT LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER level1 "
		+ "	where level1.HIERARCHY_ID = 2 "
		+ "	and  1= (SELECT ACCOUNT_LEVEL  FROM VR_ACCOUNT_DETAILS  WHERE ACCOUNT_ID=?) and level1.level_id<31 with ur";
	public static final String SQL_SELECT_ACCOUNT_LEVEL_FOR_ADMIN = " SELECT  LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID  FROM VR_ACCOUNT_LEVEL_MASTER "
		+"where level_id = ?  with ur";
	public static final String SQL_SELECT_DEFAULT_GROUP_ID = " SELECT GROUP_ID  FROM VR_ACCOUNT_LEVEL_MASTER 	WHERE LEVEL_ID=?  with ur";
	public static final String SQL_SELECT_ALL_CIRCLES = " SELECT CIRCLE_ID ,CIRCLE_NAME FROM VR_CIRCLE_MASTER WHERE STATUS='A'  with ur";
	public static final String SQL_SELECT_CITES = " SELECT CITY_ID ,CITY_NAME FROM VR_CITY_MASTER WHERE ZONE_ID=? AND STATUS='A' order by city_name with ur";
	public static final String SQL_SELECT_CITES_ACTIVE = " SELECT CITY_ID ,CITY_NAME FROM VR_CITY_MASTER WHERE ZONE_ID=? AND STATUS='A' order by city_name with ur";
	public static final String SQL_SELECT_ZONES = " SELECT ZONE_ID ,ZONE_NAME FROM DP_ZONE_MASTER WHERE CIRCLE_ID=?  with ur";
	
	public static final String SQL_SELECT_ZONES_LIST = " SELECT ZONE_ID ,ZONE_NAME FROM DP_ZONE_MASTER WHERE CIRCLE_ID in (?)  with ur";

	public static final String SQL_SELECT_STATES = " SELECT STATE_ID, STATE_NAME FROM DP_STATES_MASTER SM, VR_CIRCLE_MASTER CM WHERE CM.CIRCLE_CODE = SM.CIRCLE_CODE AND CM.CIRCLE_ID = ? ";

	public static final String SQL_SELECT_WAREHOUSES = " select WH_CODE,WH_NAME from DP_WH_MASTER where circle_id = ? and is_active = '1'";
	public static final String SQL_SELECT_ROOT_LEVEL_ACCOUNT_ID = " SELECT  ROOT_LEVEL_ID  FROM VR_ACCOUNT_DETAILS WHERE  ACCOUNT_ID=?  with ur";
	public static final String SQL_SELECT_BILLABLE_ACCOUNT_ID = " SELECT  COUNT(BILLABLE_ACC_ID) FROM VR_LOGIN_MASTER ,VR_ACCOUNT_DETAILS WHERE  STATUS='"
		+ Constants.ACTIVE_STATUS
		+ "' AND LOGIN_ID = ACCOUNT_ID AND BILLABLE_ACC_ID = ? with ur";
	public static final String SQL_SELECT_CIRCLE_NAME = "SELECT CIRCLE_NAME FROM VR_CIRCLE_MASTER WHERE STATUS = '"
		+ Constants.ACTIVE_STATUS + "' AND CIRCLE_ID = ? with ur";
	public static final String SQL_SELECT_ALL_ACC_NATIONAL = "AND DETAILS.ROOT_LEVEL_ID IN( SELECT ACCOUNT.ACCOUNT_ID FROM VR_ACCOUNT_DETAILS ACCOUNT,VR_CIRCLE_MASTER CIRCLE WHERE ACCOUNT.CIRCLE_ID=CIRCLE.CIRCLE_ID AND UPPER(CIRCLE.CIRCLE_NAME)='NATIONAL') with ur";
	public static final String SQL_SELECT_ACC_NATIONAL = "AND DETAILS.ROOT_LEVEL_ID IN (SELECT ACCOUNT.ACCOUNT_ID FROM VR_ACCOUNT_DETAILS ACCOUNT,VR_CIRCLE_MASTER CIRCLE WHERE ACCOUNT.CIRCLE_ID=CIRCLE.CIRCLE_ID AND UPPER(CIRCLE.CIRCLE_NAME)='NATIONAL')	 with ur";
	public static final String SQL_AGGREGATE_LIST = " SELECT * FROM(SELECT ROWNUMBER() "
		+"over(order by account.ACCOUNT_NAME) as RNUM, account.account_id as D_ID,account.account_name as D_NAME,"
		+"account.lapu_mobile_no "
		+"as D_LAPU_NO,account1.account_id as F_ID,account1.account_name as F_NAME,account1.lapu_mobile_no "
		+"as F_LAPU_NO,account2.account_id as R_ID,account2.account_name as R_NAME,account2.lapu_mobile_no "
		+"as R_LAPU_NO from  VR_ACCOUNT_DETAILS account left join VR_ACCOUNT_DETAILS account1 "
		+"on account.ACCOUNT_ID = account1.PARENT_ACCOUNT  left join VR_ACCOUNT_DETAILS account2 "
		+"on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT where   ";

	public static final String SQL_AGGREGATE_COUNT = "select count(*) from "
		+"VR_ACCOUNT_DETAILS account left join VR_ACCOUNT_DETAILS account1 "
		+" on account.ACCOUNT_ID = account1.PARENT_ACCOUNT  "
		+" left join VR_ACCOUNT_DETAILS account2 on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT "
		+" where account.ACCOUNT_LEVEL= "+Constants.DIST_LEVEL_ID;
	public static final String SQL_AGGREGATE_COUNT_FOR_DIST = "select count(*) from VR_ACCOUNT_DETAILS account1"
		+"	 left join VR_ACCOUNT_DETAILS account2 on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT"
		+"	 where account1.ACCOUNT_LEVEL="+(Constants.DIST_LEVEL_ID + 1) +" and account1.PARENT_ACCOUNT = ?";
	public static final String SQL_AGGREGATE_LIST_EXCEL = " SELECT account.account_id as D_ID,"
		+" account.account_name as D_NAME,account.lapu_mobile_no "
		+" as D_LAPU_NO,account1.account_id as F_ID,account1.account_name as F_NAME,account1.lapu_mobile_no "
		+" as F_LAPU_NO,account2.account_id as R_ID,account2.account_name as R_NAME,account2.lapu_mobile_no "
		+" as R_LAPU_NO from  VR_ACCOUNT_DETAILS account left join VR_ACCOUNT_DETAILS account1 "
		+" on account.ACCOUNT_ID = account1.PARENT_ACCOUNT  left join VR_ACCOUNT_DETAILS account2 "
		+" on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT where "
		+" account.ACCOUNT_LEVEL="+Constants.DIST_LEVEL_ID;
	public static final String SQL_AGGREGATE_FOR_DIST ="SELECT * FROM(SELECT ROWNUMBER() "
		+" over(order by account1.ACCOUNT_NAME) as RNUM, "
		+" account1.account_id as F_ID,account1.account_name as F_NAME,account1.lapu_mobile_no  "
		+" as F_LAPU_NO,account2.account_id as R_ID,account2.account_name as R_NAME,account2.lapu_mobile_no "
		+" as R_LAPU_NO from   VR_ACCOUNT_DETAILS account1 "
		+" left join VR_ACCOUNT_DETAILS account2 "
		+"	on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT where account1.ACCOUNT_LEVEL= " +(Constants.DIST_LEVEL_ID + 1)
		+" AND account1.CIRCLE_ID=? "
		+" and account1.PARENT_ACCOUNT=?) as tr Where RNUM between ? and ? with ur";
	public static final String SQL_EXCEL_FOR_DIST = "SELECT  account1.account_id as F_ID,account1.account_name as F_NAME,account1.lapu_mobile_no  "
		 +" as F_LAPU_NO,account2.account_id as R_ID,account2.account_name as R_NAME,account2.lapu_mobile_no"
		 +" as R_LAPU_NO from   VR_ACCOUNT_DETAILS account1 "
		 +" left join VR_ACCOUNT_DETAILS account2 "
		 +"	on account1.ACCOUNT_ID = account2.PARENT_ACCOUNT where account1.ACCOUNT_LEVEL= " + (Constants.DIST_LEVEL_ID + 1)
		 +" AND account1.CIRCLE_ID=? "
		 +" and account1.PARENT_ACCOUNT=? with ur";
	//riju
	
	public static final String SQL_SELECT_FOR_RETAILER_BALANCE = "SELECT HR.DEPTH as DEPTH, AD2.LAPU_MOBILE_NO as FSE_MOBILE_NO, AD2.ACCOUNT_ID as FSE_ID, AD2.ACCOUNT_NAME as FSE_NAME, AD.ACCOUNT_ID as RETAILER_ID, AD.ACCOUNT_NAME as RETAILER_NAME,  HR.BALANCE as BALANCE, AD.RETAILER_LAPU as RETAILER_LAPU "
         +" from DPDTH.VR_ACCOUNT_DETAILS AD"
         +" inner join DPDTH.DP_HIERARCHY_REPORT  HR on HR.AGENT=AD.RETAILER_LAPU and AD.ACCOUNT_LEVEL=8 "
         +" inner join DPDTH.VR_ACCOUNT_DETAILS AD2 on AD.PARENT_ACCOUNT=AD2.ACCOUNT_ID  "
         +" inner join DPDTH.VR_ACCOUNT_DETAILS AD3 on AD2.PARENT_ACCOUNT=AD3.ACCOUNT_ID AND AD3.ACCOUNT_ID=? with ur  ";
	//riju
	public static final String SQL_DISTRIBUTOR_TYPE = "SELECT CHANNEL_ID, CHANNEL_NAME FROM DP_DIST_CHANNEL_MASTER  with ur";
	public static final String SQL_DISTRIBUTOR_CATEGORY = "SELECT CATEGORY_ID, CATEGORY_NAME, CHANNEL_ID FROM DP_CHANNEL_CATEGORY_MASTER WHERE CHANNEL_ID=? with ur";

	public final static String SQL_ALREADY_EXIT_LAPU = "SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS "
			+" WHERE LAPU_MOBILE_NO=? AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS+"' with ur";
	public final static String SQL_ALREADY_EXIT_LAPU_2 = "SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS "
			+" WHERE lapu_mobile_no_2 =? AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS+"' with ur";
	public static final String SQL_ALREADY_EXIT_FTA = "SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS "
			+" WHERE fta_mobile_no =? AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS+"' with ur";
	public static final String SQL_ALREADY_EXIT_FTA_2 = "SELECT ACCOUNT_ID FROM VR_LOGIN_MASTER,VR_ACCOUNT_DETAILS "
		+" WHERE fta_mobile_no_2 =? AND LOGIN_ID=ACCOUNT_ID AND STATUS='"+Constants.ACTIVE_STATUS+"' with ur";

	// Queries for Send Email
	public static final String SQL_SELECT_SUBJECTLIST = "SELECT SUBJECT_ID,SUBJECT_TITLE FROM DP_SUBJECT_MASTER";
	public static final String SQL_PARENT_EMAIL_ID = "select CONTACT_NAME,EMAIL from vr_account_details "
		+" where account_id = (select parent_account from vr_account_details where account_id = ?)";
	public static final String GET_DIST_LEVEL_DETAILS = "select ACC_LEVEL,HIERARCHY_ID from VR_ACCOUNT_LEVEL_MASTER where level_id = 6 with ur";
	public static final String GET_ACCOUNT_LEVEL_DETAILS = "select ACC_LEVEL,HIERARCHY_ID,LEVEL_NAME from VR_ACCOUNT_LEVEL_MASTER where level_id = ? with ur";

	public static final String SQL_ACCOUNT_GROUP_ID = "select level.group_id,group.GROUP_NAME from VR_ACCOUNT_LEVEL_GROUP_MAPPING level,VR_GROUP_DETAILS group where level.group_id = group.group_id and level_id = ? with ur";

	public static final String SQL_SELECT_ACCOUNT = "SELECT a.ACCOUNT_ID, a.MOBILE_NUMBER, a.SIM_NUMBER, a.ACCOUNT_NAME," +
			" a.ACCOUNT_ADDRESS, a.EMAIL, a.CATEGORY, a.ACCOUNT_LEVEL, a.CIRCLE_ID, a.PARENT_ACCOUNT, a.STATE_ID, " +
			"a.CITY_ID, a.PIN_NUMBER, a.BILLABLE_ACC_ID, a.ROOT_LEVEL_ID, a.BILLABLE_ACCOUNT, a.OPENING_DT, " +
			"a.CREATED_DT, a.CREATED_BY, a.UPDATED_DT, a.UPDATED_BY, a.ADDRESS_2, a.LAPU_MOBILE_NO, a.ZONE_ID, " +
			"a.CONTACT_NAME, a.LAPU_MOBILE_NO_2, a.FTA_MOBILE_NO, a.FTA_MOBILE_NO_2, a.ZBM_ID, a.ZSM_ID," +
			" a.ACCOUNT_CODE,a.DIST_CHANNEL_ID,a.CHANNEL_CATEGORY_ID,b.CIRCLE_NAME,d.CITY_NAME "+
            "FROM VR_ACCOUNT_DETAILS a left join VR_CITY_MASTER d on a.CITY_ID=d.CITY_ID ," +
            "VR_CIRCLE_MASTER b where a.CIRCLE_ID=b.CIRCLE_ID AND  MOBILE_NUMBER = ?";

	public static final String SQL_UPDATE_ACCOUNT = "update VR_ACCOUNT_DETAILS set ACCOUNT_NAME=?,SIM_NUMBER=?,ACCOUNT_ADDRESS=?,CONTACT_NAME=?,UPDATED_DT=current timestamp where ACCOUNT_ID= ? ";
	//public static final String SQL_UPDATE_ACCOUNT = "update VR_ACCOUNT_DETAILS set ACCOUNT_NAME=?,ACCOUNT_ADDRESS=?,"+
                //  "ACCOUNT_LEVEL=?,PARENT_ACCOUNT=?,BILLABLE_ACC_ID=?,ROOT_LEVEL_ID=?,BILLABLE_ACCOUNT=?,UPDATED_DT=current date,ADDRESS_2=?,LAPU_MOBILE_NO=?,CONTACT_NAME=?where MOBILE_NUMBER = ? ";

	public static final String SQL_DISTRIBUTOR = "SELECT ACCOUNT_NAME,ACCOUNT_ID FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_LEVEL = 6 and circle_id = ?";


	public static final String SQL_PRODUCT = "SELECT PRODUCT_NAME,PRODUCT_ID FROM DP_PRODUCT_MASTER";
	public static final String SQL_ASSIGN_CHECK= "SELECT WAREHOUSE_ID,MIN_REORDER_LEVEL_QTY FROM DP_WAREHOUSE_PRODUCTS_MRL " +
	"WHERE  WAREHOUSE_ID = ?";
	public static final String SQL_ASSIGN_REORDER = "INSERT INTO DP_WAREHOUSE_PRODUCTS_MRL (WAREHOUSE_ID,PRODUCT_CODE,MIN_REORDER_LEVEL_QTY,CREATED_BY,CREATED_DT)" +
	"VALUES(?,?,?,?,current timestamp)";
	public static final String SQL_ASSIGN_UPDATE = "UPDATE DP_WAREHOUSE_PRODUCTS_MRL SET PRODUCT_CODE,MIN_REORDER_LEVEL_QTY=0, UPDATED_BY=?," +
	" UPDATED_DT= current timestamp WHERE WAREHOUSE_ID=?";

	// group Selection

	public static final String SQL_GROUP_TYPE_SELECT_ALL = "select group.group_id,group.group_name from VR_GROUP_DETAILS group where group.group_id > ? ";
	public static final String SQL_GROUP_SELECT_FOR_ADMIN = "select GROUP_ID,GROUP_NAME from VR_GROUP_DETAILS where group_id= 2 ";
//	 Create Beat
	public static final String SQL_INSERT_BEAT = "INSERT INTO DP_BEAT_MASTER(BEAT_CODE, BEAT_NAME, CREATED_BY, CRAETED_DATE, CITY_ID, UPDATED_DATE, UPDATED_BY,DESCRIPTION,STATUS)  VALUES (nextval for seq_create_beat, ?, ?, current timestamp, ?, current timestamp, ?,?,'"+Constants.ACTIVE_STATUS+"')";
	public static final String SQL_SELECT_CITY_ALL = "select CITY_ID,CITY_NAME from vr_city_master order by city_name with ur";
	public static final String SQL_IS_BEAT_EXIST = "SELECT BEAT_CODE FROM DP_BEAT_MASTER WHERE BEAT_NAME = ? WITH UR";

	public static final String SQL_SELECT_FINANCE = "SELECT user.USER_ID, login.LOGIN_NAME,group.group_name FROM VR_USER_DETAILS user, VR_LOGIN_MASTER login," +
			" VR_GROUP_DETAILS group where user.USER_ID = login.LOGIN_ID and login.GROUP_ID = group.group_id" +
			" and group.group_name = 'Finance'" +
			" union " +
			" SELECT user.USER_ID, login.LOGIN_NAME,group.group_name FROM VR_USER_DETAILS user, VR_LOGIN_MASTER login," +
			" VR_GROUP_DETAILS group where user.USER_ID = login.LOGIN_ID and login.GROUP_ID = group.group_id" +
			" and group.group_name = 'Commercial'" +
			" union " +
			" SELECT user.USER_ID, login.LOGIN_NAME,group.group_name FROM VR_USER_DETAILS user, VR_LOGIN_MASTER login," +
			" VR_GROUP_DETAILS group where user.USER_ID = login.LOGIN_ID and login.GROUP_ID = group.group_id" +
			" and group.group_name = 'Sales'";
	public static final String SQL_SELECT_BEATS = "SELECT BEAT_CODE, BEAT_NAME FROM DP_BEAT_MASTER where CITY_ID=? AND Status = '"+Constants.ACTIVE_STATUS+"' with ur";
	public static final String SQL_SELECT_BEATS_VIEW = " beat.BEAT_CODE,beat.BEAT_NAME,beat.DESCRIPTION,beat.STATUS,city.CITY_ID,city.CITY_NAME,zone.ZONE_ID,zone.ZONE_NAME,circle.CIRCLE_ID,circle.CIRCLE_NAME from DP_BEAT_MASTER beat, VR_CITY_MASTER city,VR_CIRCLE_MASTER circle,DP_ZONE_MASTER zone,DP_BEAT_MASTER where beat.CITY_ID = city.CITY_ID and city.ZONE_ID = zone.ZONE_ID and zone.CIRCLE_ID = circle.CIRCLE_ID and beat.CITY_ID=? and beat.STATUS = ?";
	public static final String SQL_SELECT_BEAT_RECORD = "SELECT beat.BEAT_CODE, beat.BEAT_NAME, beat.CREATED_BY, beat.CRAETED_DATE, beat.CITY_ID, beat.UPDATED_DATE, beat.UPDATED_BY, beat.DESCRIPTION, beat.STATUS, city.CITY_NAME FROM DP_BEAT_MASTER beat,VR_CITY_MASTER city where beat.CITY_ID = city.CITY_ID and BEAT_CODE=? with ur";
	public static final String SQL_UPDATE_BEAT_DETAIL = "UPDATE DP_BEAT_MASTER SET BEAT_NAME=?,DESCRIPTION=?, UPDATED_DATE=?, UPDATED_BY=?, STATUS=? WHERE BEAT_CODE = ? with ur";
	public static final String SQL_SELECT_RETAILER_CATEGORY = "SELECT RETAILER_CATEGORY_ID, RETAILER_CATEGORY_NAME FROM DP_RETAILER_CATEGORY with ur";
	//Added by sugandha for retailer transaction type
	public static final String SQL_SELECT_RETAILER_TRANSACTION = "select ID, VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID=24 with ur";
	
	public static final String SQL_SELECT_OUTLET_CATEGORY = "SELECT OUTLET_ID, OUTLET_NAME FROM DP_OUTLET_CATEGORY with ur";
	public static final String SQL_SELECT_ALT_CHANNEL = "SELECT ALT_CHANNEL_ID, ALT_CHANNEL_NAME FROM DP_ALTERNATE_CHANNEL with ur";
	public static final String SQL_SELECT_CHANNEL = "SELECT CHANNEL_TYPE_ID, CHANNEL_TYPE_NAME FROM DP_CHANNEL_TYPE with ur";
	public static final String SQL_SELECT_EMAILID = "select EMAIL from VR_ACCOUNT_DETAILS where ACCOUNT_ID=? with ur";
	public static final String GET_UNBARRED_SERIAL_NOS = "select details.IMEI_SIM_NO from DP_BATCH_HEADER header, DP_BATCH_DETAILS details,VR_ACCOUNT_DETAILS account where header.STATUS='"+Constants.ACTIVE_STATUS+"' and details.unbarred_stock = 'N' and header.BATCH_NO = details.BATCH_NO and header.WAREHOUSE_TO = account.ACCOUNT_ID and header.PRODUCT_TYPE='1' order by details.IMEI_SIM_NO,account.CIRCLE_ID with ur";
	public static final String UPDATE_UNBARRED_STATUS = "update DP_BATCH_DETAILS set unbarred_stock='Y' where IMEI_SIM_NO=? with ur";

	/** Purchase Order releated query by Rohitk	 */

	public static final String SQL_BUSINESSCATEGORY = "SELECT * FROM DP_BUSINESS_CATEGORY_MASTER bcm WHERE PURCHASE_INTERNALLY = 'Y' WITH UR";
	public static final String SQL_PRODUCTNAMElIST = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER  WHERE circle_id=? and CATEGORY_CODE = ? and CM_STATUS ='"+Constants.ACTIVE_STATUS+"' with ur ";
	public static final String SQL_PRODUCTNAMElIST_2 = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER  WHERE circle_id=? and CATEGORY_CODE = ?  and CM_STATUS ='"+Constants.ACTIVE_STATUS+"' "; //with ur removed by neetika and put in code
//	public static final String SQL_PO_VIEW = "SELECT prh.PR_NO, pds.PRODUCT_ID,pm.PRODUCT_NAME, prh.PR_DT, pds.RAISED_QTY, prh.PO_NO, prh.PO_DT, prh.INVOICE_NO,prh.INVOICE_DT,"+
//												" prh.DC_NO, prh.DC_DT, prh.DD_CHEQUE_NO, prh.DD_CHEQUE_DT, prh.STATUS"+
//												" FROM DP_PR_HEADER prh,  DP_PR_DETAILS pds,DP_PRODUCT_MASTER pm WHERE prh.PR_NO = pds.PR_NO AND pds.PRODUCT_ID = pm.PRODUCT_ID ORDER BY prh.PR_NO ";

//public static final String SQL_PO_VIEW = " SELECT * from (select row_number() over() as rx ,temp.*from(SELECT DPH.PR_NO,DPH.pr_cancel_flag,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME, "+
//										 " DPH.PR_DATE,PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND ID=PH.PO_STATUS) POSTATUS, "+
//										 " IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID) PRODUCT, "+
//										 " DPD.RAISED_QTY,PD.PO_QTY,ID.INV_QTY FROM (select * from DP_PR_HEADER WHERE PR_DIST_ID = ?) AS DPH LEFT JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO "+
//										 " LEFT JOIN PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO LEFT JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN INVOICE_HEADER AS IH ON PD.PO_NO =  IH.PO_NO "+
//										 " LEFT JOIN INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID ) temp)as t ";
//
	/*public static final String SQL_PO_VIEW = "SELECT t.*,coalesce((select case MARK_DAMAGED when 'I' then 1 else 0 end from DP_STOCK_INVENTORY where inv_no=t.INV_NO fetch first 1 rows only),0)ACCEPT_FLAG from (select row_number() over() as rx ,temp.*from(SELECT DPH.PR_NO,DPH.pr_cancel_flag,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME,"+
			" DPH.PR_DATE,PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND ID=PH.PO_STATUS) POSTATUS,"+
			" IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID) PRODUCT,"+
			" coalesce((select PRODUCT_UNIT from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID),'Z') PRODUCT_UNIT,DPD.RAISED_QTY,PD.PO_QTY,ID.INV_QTY FROM (select * from DP_PR_HEADER WHERE PR_DIST_ID = ?) AS DPH LEFT JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO "+
			" LEFT JOIN PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO LEFT JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN INVOICE_HEADER AS IH ON PD.PO_NO =  IH.PO_NO "+
			" LEFT JOIN INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID ORDER BY DPH.PR_DATE DESC ) temp)as t ";
*/

	//added by saumya
	public static final String SQL_PO_VIEW = "	select * from (SELECT t.*, coalesce((select CASE WHEN IS_ACTIVE=1 and PO_STATUS in (7,8,32,34) THEN 1 else 0 end from PO_HEADER " +
			" where PO_NO=t.PO_NO),0) ACCEPT_FLAG from (select row_number() over() as rx ,temp.* from(SELECT DPH.PR_NO,DPH.pr_cancel_flag," +
			" (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME, DPH.PR_DATE," +
			" PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND  ID=PH.PO_STATUS) POSTATUS," +
			" IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DP_PRODUCT_MASTER  "
			+" PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID) PRODUCT,DPD.PRODUCT_ID, coalesce( (select PRODUCT_UNIT  "
			+" from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID),'Z') PRODUCT_UNIT, "
			+" DPD.RAISED_QTY,PD.PO_QTY, ID.INV_QTY, (select distinct PRODUCT_NAME from DP_PRODUCT_MASTER where BT_PRODUCT_CODE=ID.EXT_PRODUCT_ID " 
			+" and circle_id=dpd.circle_id fetch first 1 rows only ) AS INV_PROD, PH.REMARKS , PH.PO_STATUS as MY_STATUS "
			+" FROM (select * from DP_PR_HEADER WHERE PR_DIST_ID =?) AS DPH LEFT JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO " 
			+" LEFT JOIN PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO  LEFT JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND  "
			+" PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN INVOICE_HEADER AS IH ON PH.PO_NO =  IH.PO_NO  "
			+" LEFT JOIN INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID " 
			+" ORDER BY DPH.PR_DATE DESC) temp)as t ";


	public static final String SQL_MISSING_PO_VIEW = "SELECT t.* from (select row_number() over() as rx ,temp.* from (select distinct IH.po_no,IH.DC_NO,IH.INV_NO,(SELECT ACCOUNT_NAME FROM dpdth.VR_ACCOUNT_DETAILS VAD WHERE "+
													  "VAD.ACCOUNT_ID=DWS.DISTRIBUTOR_ID) Dist_Name, "+
													  "(Select sum(po_qty) from dpdth.PO_DETAILS where po_no=IH.po_no) PO_QTY,(select sum(inv_qty) "+
													  "from dpdth.invoice_details where INV_NO=IH.INV_NO)  "+
													  "INV_QTY,(select count(*) from dpdth.DP_WRONG_SHIP_DETAIL DWS where WRONG_SHIP_TYPE='SHORT' and  "+
													  "TSM_DECISION is null and IH.INV_NO=DWS.INV_NO and IH.DC_NO=DWS.DC_NO ) MISSING, "+
													  "(select count(*) from dpdth.DP_WRONG_SHIP_DETAIL DWS where WRONG_SHIP_TYPE='WRONG' and  "+
													  "TSM_DECISION is null and IH.INV_NO=DWS.INV_NO and IH.DC_NO=DWS.DC_NO) ADDED from  "+
													  "dpdth.DP_WRONG_SHIP_DETAIL DWS,dpdth.INVOICE_HEADER IH where  "+
													  "TSM_DECISION is null and ASSIGNED_TO=? and IH.INV_NO=DWS.INV_NO and IH.DC_NO=DWS.DC_NO and ih.status='TSM_APPROVAL_PENDING') temp) as t  ";


	public static final String SQL_ACCEPT_FLAG = "";


//	"SELECT * from (select row_number() over() as rx ,temp.*from(SELECT DPH.PR_NO,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME, "+
//										"DPH.PR_DATE,PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND ID=PH.PO_STATUS) POSTATUS,"
//												+ "IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPH.CIRCLE_ID) PRODUCT," +
//												"DPD.RAISED_QTY,PD.PO_QTY,ID.INV_QTY FROM DP_PR_HEADER AS DPH LEFT JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO "+
//												"LEFT JOIN PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO LEFT JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN INVOICE_HEADER AS IH ON PD.PO_NO =  IH.PO_NO "+
//												" LEFT JOIN INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID ) temp)as t where  rx<=? and rx>? WITH UR ";
//
												//"//"SELECT * from (select row_number() over() as rx ,temp.*from(SELECT *"+
//"FROM DP_PR_HEADER AS DPH INNER JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO INNER JOIN PO_HEADER AS PH"+
//"ON DPD.PR_NO=PH.PR_NO INNER JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO INNER JOIN INVOICE_HEADER AS IH ON PD.PO_NO = IH.PO_NO"+
//"INNER JOIN INVOICE_DETAILS AS ID ON PD.EXT_PRODUCT_ID =ID.EXT_PRODUCT_ID ) temp)as t where  rx<=? and rx>? WITH UR";

//	public static final String SQL_PO_VIEW = "SELECT * from (select row_number() over() as rx ,temp.*from(select prh.PR_NO,pds.PRODUCT_ID, prh.PR_DT, pm.PRODUCT_NAME, pds.RAISED_QTY, prh.PO_NO, prh.PO_DT,"+
//											"prh.INVOICE_NO,prh.INVOICE_DT,prh.DC_NO, prh.DC_DT, prh.DD_CHEQUE_NO, prh.DD_CHEQUE_DT, prh.STATUS"+
//											" FROM DP_PR_HEADER prh,  DP_PR_DETAILS pds,DP_PRODUCT_MASTER pm WHERE prh.PR_NO = pds.PR_NO AND pds.PRODUCT_ID = pm.PRODUCT_ID ORDER BY prh.PR_NO) temp)as t where  rx<=? and rx>? WITH UR";

	public static final String SQL_COUNT = "SELECT COUNT(*)FROM DP_PR_Details WITH UR";

	public static final String SQL_SEQ_VALUE = "SELECT NEXTVAL FOR SEQ_PO from SYSIBM.SYSDUMMY1 WITH UR";
	public static final String SQL_CANCEL_PORNO = "UPDATE DP_PR_HEADER  SET PR_CANCEL_FLAG = 0, STATUS_DATE=current timestamp WHERE PR_NO = ?";
	public static final String SQL_SELECT_PONO = "select PO_NO from PO_HEADER WHERE PR_NO = ?";
	public static final String SQL_CANCEL_PONO = "UPDATE PO_HEADER  SET PO_STATUS = 0 WHERE PO_NO = ?";
	//old public static final String SQL_INSERT_PR_HEADER = "INSERT INTO DP_PR_HEADER(PR_NO, PR_DIST_ID, EXT_DIST_ID, STATUS_DT)VALUES (?,?,?,CURRENT TIMESTAMP)";
	public static final String SQL_INSERT_PR_HEADER = "INSERT INTO DP_PR_HEADER(PR_NO, PR_DIST_ID, EXT_DIST_ID, COMMENTS , CATEGORY_CODE )VALUES (?,?,?,? , ? )";
	public static final String SQL_INSERT_PR_DETAILS = "INSERT INTO DP_PR_DETAILS(PR_NO, PRODUCT_ID, EXT_PRODUCT_ID, RAISED_QTY, CIRCLE_ID, INHAND_QTY, DP_QTY, DP_OPEN_STOCK, ELIGIBLE_AMOUNT,ELIGIBLE_QUANTITY,MAX_PO_QUANTITY,FLAG, APPROVED_QTY)VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"; //Modified by Mohammad Aslam
	public static final String SQL_INSERT_PO_SEQ = "INSERT INTO  DP_BPO (POR_NO) VALUES ( NEXTVAL FOR SEQ_PO)";

	public static final String SQL_SELECT_EXT_PRODUCT_ID = "SELECT BT_PRODUCT_CODE , CATEGORY_CODE FROM DP_PRODUCT_MASTER WHERE PRODUCT_ID = ? WITH UR";
	//public static final String SQL_SELECT_EXT_DIST_ID = "SELECT EXT_DIST_ID FROM DP_DISTRIBUTOR_MAPPING WHERE DP_DIST_ID = ? WITH UR";
	public static final String SQL_SELECT_EXT_DIST_ID = "SELECT EXT_DIST_ID FROM DP_DISTRIBUTOR_MAPPING WHERE DP_DIST_ID = ? and TRANSACTION_TYPE_ID =? WITH UR";

//	 Add by harbans to check RetailerInfo webservice.
	public static final String CHECK_ALL_INPUT_MOBILE_NO_REATILER  =   "SELECT ACCOUNT_ID, 'MOBILE_FLAG' AS FLAG  FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
																		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
																		+" UNION "
																		+" SELECT ACCOUNT_ID, 'LAPU_FLAG' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
																		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
																		+" UNION "
																		+" SELECT ACCOUNT_ID, 'LAPU_FLAG2' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
																		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
																		+" UNION "
																		+" SELECT ACCOUNT_ID, 'FTA_FLAG' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
																		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
																		+" UNION "
																		+" SELECT ACCOUNT_ID,'FTA_FLAG2' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
																		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' ))  WITH UR ";

	// Add by harabns on 8th August merging
	public static final String CHECK_ALL_INPUT_MOBILE_NO_EDIT_MODE_REATILER  =   "SELECT ACCOUNT_ID, 'MOBILE_FLAG' AS FLAG  FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.ACCOUNT_ID <> ? "
		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
		+" UNION "
		+" SELECT ACCOUNT_ID, 'LAPU_FLAG' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.ACCOUNT_ID <> ? "
		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
		+" UNION "
		+" SELECT ACCOUNT_ID, 'LAPU_FLAG2' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.ACCOUNT_ID <> ? "
		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
		+" UNION "
		+" SELECT ACCOUNT_ID, 'FTA_FLAG' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.ACCOUNT_ID <> ? "
		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' )) "
		+" UNION "
		+" SELECT ACCOUNT_ID,'FTA_FLAG2' AS FLAG FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VLM.STATUS='A' AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.ACCOUNT_ID <> ? "
		+" AND ((RETAILER_LAPU=? AND RETAILER_LAPU<>'' and ACCOUNT_LEVEL=8) or (MOBILE_NUMBER=? AND MOBILE_NUMBER<>'' and ACCOUNT_LEVEL!=8) OR (LAPU_MOBILE_NO=? AND LAPU_MOBILE_NO<>'') OR (LAPU_MOBILE_NO_2=? AND LAPU_MOBILE_NO_2<>'') OR (FTA_MOBILE_NO=? AND FTA_MOBILE_NO<>'') OR (FTA_MOBILE_NO_2=? AND FTA_MOBILE_NO_2<>'' ))  WITH UR ";



	/* vivek queries */

	public static final String SQL_BUSINESS_CATEGORY = "SELECT * FROM DP_BUSINESS_CATEGORY_MASTER bcm ORDER BY bcm.CATEGORY_CODE with ur";
	public static final String SQL_CIRCLE_LIST = "SELECT * FROM VR_CIRCLE_MASTER where STATUS = '"+Constants.ACTIVE_STATUS+"' ORDER BY CIRCLE_ID";
/*	public static final String SQL_INSERT_HNDST = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME,COMPANY_DESC," +
			"STOCK_TYPE,PRODUCT_WARRANTY,PRODUCT_DESC,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID,SR_EFFECTIVE_DATE, UPDATED_DATE, UPDATED_BY, SR_VERSION, PRODUCT_UNIT) VALUES (NEXTVAL FOR SEQ_PC,'A',4,?,?,?,?,?,current timestamp,?,?,?,current date, current timestamp,?,?,?)";

	public static final String SQL_INSERT_SUK = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME," +

	"SR_CARD_GROUP,SR_PACK_TYPE,SR_SIM_CARD_COST,SR_TALKTIME,SR_MRP,SR_ACTIVATION," +

	"SR_PROCESSING_FEE,SR_SALE_TAX,SR_CESS_TAX,SR_GOLDEN_NUMBER_CHARGE,SR_EFFECTIVE_DATE,SR_VERSION," +

	"SR_SERVICE_TAX,SR_TURNOVER_TAX,SR_SH_EDUCESS,SR_DISCOUNT," +

	"SR_DISCOUNT_PRICE,SR_COST_PRICE,SR_OCTORI_PRICE,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID, VAT, RET_DISCOUNT, RET_PRICE, UPDATED_BY, UPDATED_DATE, PRODUCT_UNIT)" +

	" VALUES (NEXTVAL FOR SEQ_PC,'D',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,current timestamp,?,?,?,?,?,?,?,current timestamp,?)";

	public static final String SQL_INSERT_RC = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME," +

	"SR_CARD_GROUP,SR_PACK_TYPE,SR_SIM_CARD_COST,SR_TALKTIME,SR_MRP,SR_ACTIVATION," +

	"SR_PROCESSING_FEE,SR_SALE_TAX,SR_CESS_TAX,SR_GOLDEN_NUMBER_CHARGE,SR_EFFECTIVE_DATE,SR_VERSION," +

	"SR_SERVICE_TAX,SR_TURNOVER_TAX,SR_SH_EDUCESS,SR_DISCOUNT," +

	"SR_DISCOUNT_PRICE,SR_COST_PRICE,SR_OCTORI_PRICE,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID, VAT, RET_DISCOUNT, RET_PRICE, PRODUCT_UNIT)" +

	" VALUES (NEXTVAL FOR SEQ_PC,'D',2,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,current timestamp,?,?,?,?,?,?,?)";*/

	public static final String SQL_SELECT_HNDST ="SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,p.STOCK_TYPE,p.PRODUCT_WARRANTY,p.FREE_SERVICE,p.circle_id ,p.COMPANY_DESC,c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE =4 and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.DACTIVE_STATUS+"' ";

/*		"SELECT p.PRODUCT_ID,p.PRODUCT_NAME,p.STOCK_TYPE,p.PRODUCT_WARRANTY,p.FREE_SERVICE,p.circle_id" +
			" ,p.COMPANY_DESC,c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE =4 and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' with ur";
	*/

	// Change by harbans on UAT oveservation 5th July
	//public static final String SQL_SELECT_SUK = "SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,d.CARDGROUPNAME SR_CARD_GROUP,p.SR_PACK_TYPE,p.SR_SIM_CARD_COST,p.SR_MRP,p.FREE_SERVICE,p.circle_id," +
	//"c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c,DTH_CARDGROUP_MASTER d WHERE CATEGORY_CODE = ? and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' and d.CARDGROUPID=int(p.SR_CARD_GROUP)";

    //public static final String SQL_SELECT_SUK = "SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,d.CARDGROUPNAME SR_CARD_GROUP,p.SR_PACK_TYPE,p.SR_SIM_CARD_COST,p.SR_MRP,p.FREE_SERVICE,p.circle_id," +
	//"c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c,DTH_CARDGROUP_MASTER d WHERE p.CM_STATUS = 'A' and p.CATEGORY_CODE = ? and p.circle_id=c.circle_id and d.CARDGROUPID=int(p.SR_CARD_GROUP)";
    //Changed by NEetika
	public static final String SQL_SELECT_SUK = "SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,d.CARDGROUPNAME SR_CARD_GROUP,p.SR_PACK_TYPE,p.SR_SIM_CARD_COST,p.SR_MRP,p.FREE_SERVICE,p.circle_id," +
	"c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p left outer join DP_CARDGROUP_MASTER d on d.ID=int(p.SR_CARD_GROUP),VR_CIRCLE_MASTER c WHERE p.CM_STATUS = 'A' and p.CATEGORY_CODE = ? and p.circle_id=c.circle_id ";


	//public static final String SQL_SELECT_SUK = "SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,p.SR_CARD_GROUP,d.CATEGORY_NAME SR_PACK_TYPE,p.SR_SIM_CARD_COST,p.SR_MRP,p.FREE_SERVICE,p.circle_id," +
	//"c.CIRCLE_NAME FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c,DP_BUSINESS_CATEGORY_MASTER d WHERE p.CATEGORY_CODE = ? and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' and char(d.CATEGORY_CODE)=p.SR_PACK_TYPE ";

	public static final String SQL_SELECT_RC = "SELECT * FROM(SELECT ROWNUMBER() over(order by p.product_id) as RNUM, p.PRODUCT_ID,p.PRODUCT_NAME,d.CARDGROUPNAME SR_CARD_GROUP,p.SR_PACK_TYPE,p.circle_id," +
			"p.SR_SIM_CARD_COST,p.FREE_SERVICE,p.SR_MRP,c.CIRCLE_NAME  FROM DP_PRODUCT_MASTER p left outer join DP_CARDGROUP_MASTER d on  d.ID=int(p.SR_CARD_GROUP)" +
			" ,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE = ? and p.circle_id=c.circle_id   ";
	//		" WHERE CATEGORY_CODE = ? and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"'  and d.CARDGROUPID=int(p.SR_CARD_GROUP) ";

	public static final String SQL_UPDATE_HNDST = "UPDATE DP_PRODUCT_MASTER SET PRODUCT_NAME=?,COMPANY_DESC=?,STOCK_TYPE=?,PRODUCT_WARRANTY=?,PRODUCT_DESC=?," +
	"UPDATED_DATE=current timestamp, UPDATED_BY=?, FREE_SERVICE=?,SR_VERSION=?, PRODUCT_UNIT=? where PRODUCT_ID=? ";

	public static final String SQL_UPDATE_SUK = "UPDATE DP_PRODUCT_MASTER SET " +
	"PRODUCT_NAME=?,SR_CARD_GROUP=?,SR_PACK_TYPE=?,SR_SIM_CARD_COST=?,SR_MRP=?," +
	"SR_TALKTIME=?,SR_ACTIVATION=?,SR_PROCESSING_FEE=?," +
	"SR_CESS_TAX=?,SR_SERVICE_TAX=?,SR_TURNOVER_TAX=?,SR_SH_EDUCESS=?," +
	"SR_GOLDEN_NUMBER_CHARGE=?,SR_DISCOUNT=?,SR_DISCOUNT_PRICE=?,SR_COST_PRICE=?," +
	"SR_OCTORI_PRICE=?,SR_VERSION=?,SR_SALE_TAX=?,SR_EFFECTIVE_DATE= current date,UPDATED_BY=?, " +
	"FREE_SERVICE=?, UPDATED_DATE=current timestamp,VAT=?, RET_DISCOUNT=?, RET_PRICE=?, PRODUCT_UNIT=?, SURCHARGE = ?, FREIGHT = ?, INSURANCE = ?, TRADE_DISCOUNT = ?, CASH_DISCOUNT=?,ADDITIONAL_TAX=?,ORACLE_ITEM_CODE=?,PRODUCT_TYPE=?, PARENT_PRODUCT_ID=?, PRODUCT_CATEGORY=?, PSTATUS=? WHERE PRODUCT_ID=?"; //rajiv jha added //aman //status changed to PSTATUS to avoid ambiguity issues

	public static final String SQL_SELECT_DATAFOREDIT = "SELECT p.PRODUCT_CATEGORY, p.PRODUCT_TYPE,p.PRODUCT_ID,p.PRODUCT_NAME,p.PRODUCT_NAME,p.STOCK_TYPE," +
	"p.PRODUCT_WARRANTY,p.COMPANY_DESC,p.PRODUCT_DESC,p.SR_CARD_GROUP," +
	"p.SR_PACK_TYPE,p.SR_PROCESSING_FEE,p.SR_GOLDEN_NUMBER_CHARGE,p.PRODUCT_UNIT," +
	"p.SR_VERSION,p.SR_MRP,p.SR_SIM_CARD_COST,p.SR_ACTIVATION,p.SR_SALE_TAX," +
	"p.SR_SERVICE_TAX ,p.SR_CESS_TAX,p.SR_TURNOVER_TAX,p.SR_SH_EDUCESS,p.SR_DISCOUNT," +
	"p.SR_DISCOUNT_PRICE,p.SR_COST_PRICE,p.SR_OCTORI_PRICE,p.SR_TALKTIME,p.SR_VERSION,p.VAT,p.RET_DISCOUNT,p.RET_PRICE,p.FREE_SERVICE," +
	"p.SR_EFFECTIVE_DATE,p.CATEGORY_CODE,p.CIRCLE_ID,p.SURCHARGE,p.ADDITIONAL_TAX,p.ORACLE_ITEM_CODE ,p.FREIGHT,p.INSURANCE,p.TRADE_DISCOUNT,p.CASH_DISCOUNT,p.PARENT_PRODUCT_ID,p.EXT_PRODUCT_ID,  " +
	"c.CATEGORY_NAME,d.CIRCLE_NAME,p.PSTATUS FROM DP_PRODUCT_MASTER p," +
	"DP_BUSINESS_CATEGORY_MASTER c,VR_CIRCLE_MASTER d WHERE PRODUCT_ID =? " +
	"AND p.CATEGORY_CODE = c.CATEGORY_CODE AND p.CIRCLE_ID = d.CIRCLE_ID with ur"; //rajiv jha added

	public static final String SQL_EDIT_WARRANTY = "SELECT p.PRODUCT_ID,p.PRODUCT_NAME,p.PRODUCT_WARRANTY,p.CATEGORY_CODE," +
	" c.CATEGORY_NAME FROM DP_PRODUCT_MASTER p,DP_BUSINESS_CATEGORY_MASTER c WHERE" +
	" PRODUCT_ID =? AND p.CATEGORY_CODE = c.CATEGORY_CODE with ur";

	public static final String SQL_UPDATE_RC = "UPDATE DP_PRODUCT_MASTER SET " +
	"PRODUCT_NAME=?,SR_CARD_GROUP=?,SR_PACK_TYPE=?,SR_SIM_CARD_COST=?,SR_MRP=?," +
	"PRODUCT_DESC=?,SR_TALKTIME=?,SR_ACTIVATION=?,SR_PROCESSING_FEE=?," +
	"SR_CESS_TAX=?,SR_SERVICE_TAX=?,SR_TURNOVER_TAX=?,SR_SH_EDUCESS=?," +
	"SR_GOLDEN_NUMBER_CHARGE=?,SR_DISCOUNT=?,SR_DISCOUNT_PRICE=?,SR_COST_PRICE=?," +
	"SR_OCTORI_PRICE=?,SR_VERSION=?,SR_SALE_TAX=?,SR_EFFECTIVE_DATE=?,UPDATED_BY=?, " +
	"FREE_SERVICE=?,CIRCLE_ID=?,UPDATED_DATE=current timestamp,RET_DISCOUNT=?, RET_PRICE=?  WHERE PRODUCT_ID=?";

	public static final String SQL_WARRANTY = "UPDATE DP_PRODUCT_MASTER SET EXTENDED_WARRANTY=?,UPDATED_BY=?," +
	"UPDATED_DATE=current timestamp WHERE CATEGORY_CODE=? AND PRODUCT_ID=? ";

	public static final String SQL_SELECT_WARRANTY_HND = "SELECT PRODUCT_ID,PRODUCT_NAME,PRODUCT_WARRANTY " +
			"FROM DP_PRODUCT_MASTER WHERE CATEGORY_CODE =3 with ur";

	public static final String SQL_SELECT_WARRANTY_SUK = "SELECT PRODUCT_ID,PRODUCT_NAME,PRODUCT_WARRANTY " +
			"FROM DP_PRODUCT_MASTER WHERE CATEGORY_CODE =1 with ur";

	public static final String SQL_SELECT_WARRANTY_RC = "SELECT PRODUCT_ID,PRODUCT_NAME,PRODUCT_WARRANTY " +
			"FROM DP_PRODUCT_MASTER WHERE CATEGORY_CODE =2 with ur";

	public static final String SQL_CIRCLEIDCOUNT = "select count(circle_id) from VR_CIRCLE_MASTER with ur";
	public static final String SQL_CIRCLEIDS= "select circle_id from VR_CIRCLE_MASTER where circle_id<>0 with ur";

	public static final String SQL_PRODUCT_EXIST ="Select product_name from DP_PRODUCT_MASTER where product_name=? and circle_id=? with ur";

	//public static final String SQL_EDIT_PRODUCT_EXIST ="Select product_name from DP_PRODUCT_MASTER  a , VR_CIRCLE_MASTER b where a.CIRCLE_ID=b.CIRCLE_ID and a.product_name=? and b.CIRCLE_NAME=? and a.PRODUCT_ID <> ? with ur";

	public static final String SQL_PRODUCT_REORDER = "SELECT PRODUCT_NAME,PRODUCT_ID FROM DP_PRODUCT_MASTER";

	public static final String SQL_PRODUCT_CHECK = "SELECT MIN_REORDER_LEVEL_QTY FROM DP_WAREHOUSE_PRODUCTS_MRL " +
	"WHERE  WAREHOUSE_ID = ? and PRODUCT_CODE=?";
	public static final String SQL_PRODUCT_ASSIGN_REORDER = "INSERT INTO DP_WAREHOUSE_PRODUCTS_MRL (WAREHOUSE_ID,PRODUCT_CODE,MIN_REORDER_LEVEL_QTY,CREATED_BY,CREATED_DT)" +
	"VALUES(?,?,?,?,current timestamp)";
	public static final String SQL_PRODUCT_ORDER_UPDATE = "UPDATE DP_WAREHOUSE_PRODUCTS_MRL SET MIN_REORDER_LEVEL_QTY=?, UPDATED_BY=?," +
	" UPDATED_DT= current timestamp WHERE WAREHOUSE_ID=?";
	public static final String SQL_WARRANTY_UPDATE = "UPDATE DP_REQUISITION_PRODUCTS SET " +
    "UPDATED_BY=?, UPDATED_DT= current timestamp ," +
    " EXTENDED_WARRANTY=? WHERE IMEI_NO=?";
	public static final String SQL_WARRANTY_NEW ="select rp.IMEI_NO,rp.DAMAGE_FLAG, " +
			" coalesce(rp.STANDARD_WARRANTY,0)STANDARD_WARRANTY,	" +
			" coalesce(rp.EXTENDED_WARRANTY,0)EXTENDED_WARRANTY, " +
			" pm.product_name,rp.LAST_WAREHOUSE_ID from DP_REQUISITION_PRODUCTS rp,DP_REQUISITION_HEADER rh, " +
			" DP_PRODUCT_MASTER pm " +
			" where rp.requisition_id = rh.requisition_id " +
			" and rh.requisition_product_code=pm.PRODUCT_ID and rp.imei_no = ? and rp.LAST_WAREHOUSE_ID = ? ";
	public static final String SQL_WARRANTY_MRL = "select dpw.MIN_REORDER_LEVEL_QTY from DP_REQUISITION_PRODUCTS rp,DP_WAREHOUSE_PRODUCTS_MRL dpw,dp_requisition_header rh, " +
			" dp_product_master pm where rp.REQUISITION_ID=rh.requisition_id and rh.requisition_product_code=pm.PRODUCT_ID " +
			" and pm.PRODUCT_ID=dpw.PRODUCT_CODE and dpw.WAREHOUSE_ID = ? and PRODUCT_CODE = (select rh.requisition_product_code from DP_REQUISITION_HEADER rh, dp_requisition_products rp " +
			" where rp.requisition_id=rh.requisition_id and rp.imei_no=?)";
	public static final String SQL_SELECT_ACOUNTID =  "SELECT ad.ACCOUNT_NAME,ad.ACCOUNT_ID,lm.TYPE FROM VR_ACCOUNT_DETAILS ad,VR_LOGIN_MASTER lm WHERE ad.ACCOUNT_ID=lm.LOGIN_ID and ad.ACCOUNT_CODE=? with ur";
	public static final String INSERT_SEC_UPLOADFILE = "INSERT INTO DP_UPLOAD_FILE_SEC_DATE(FILE_ID, FILENAME, UPLOADED_BY,  CIRCLE_ID, FILEPATH, STATUS, STATUS_MSG)"
		+"  VALUES(NEXTVAL FOR SEQ_SEC_FILE_UPLOAD,?,?, ?, ?, ?, ?)";
	public static final String ACCEPT_DIST_STOCK = "UPDATE DP_STOCK_INVENTORY SET MARK_DAMAGED='N',DISTRIBUTOR_PURCHASE_DATE = current timestamp where INV_NO in(";
	public static final String GET_PR_COUNT = "select PD.PR_NO,count(PD.PR_NO)COUNT_PR from DP_PR_DETAILS PD,DP_PR_HEADER PH " +
			"where PD.PR_NO=PH.PR_NO and PR_DIST_ID=? group by PD.PR_NO order by PD.PR_NO desc";
	public static final String GET_REPORT_NAMES = "select * from dp_report_mstr with ur";
	//saumya
	public static final String GET_PRODUCT = "select PRODUCT_NAME, PRODUCT_ID from DP_PRODUCT_MASTER where CIRCLE_ID=? with ur";
	//saumya
	public static final String GET_REPORT_DATA_DUMP = "select * from RETAILER_DUMP where DISTRIBUTOR_MSISDN=? with ur"; // and field3=? order by field2";
	//public static final String GET_REPORT_DATA_TERTIARY = "select * from TERTIARY_SALES where DISTRIBUTOR_MSISDN=? with ur"; // and field3=? order by field2";
	public static final String GET_REPORT_DATA_TERTIARY = " select * from (select hub,circle,zone,distributor_name,RETAILER_NAME,RETAILER_MSISDN, " +
			" FSE_NAME,PRODUCT_TYPE,PRODUCT_CATEGORY,MTD_SALES,LMTD_SALES FROM TERTIARY_SALES where DISTRIBUTOR_MSISDN=? " +
			" union SELECT hub,circle,zone,distributor_name,RETAILER_NAME,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,'zzzz' PRODUCT_CATEGORY,sum(MTD_SALES)MTD_SALES,sum(LMTD_SALES)LMTD_SALES " +
			" FROM TERTIARY_SALES where DISTRIBUTOR_MSISDN=? group by hub,circle,zone,distributor_name,RETAILER_NAME,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE)A order by HUB,CIRCLE,ZONE,DISTRIBUTOR_NAME,RETAILER_MSISDN, " +
			" FSE_NAME,PRODUCT_TYPE,MTD_SALES,LMTD_SALES with ur";
	public static final String GET_REPORT_DATA_PURCHASE = "select A.* from (select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,retailer_name,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,PRODUCT_CATEGORY,LMTD_PRIMARY_PURCHASE,MTD_PRIMARY_PURCHASE from PRIMARY_PURCHASE where DISTRIBUTOR_MSISDN=? " +
			" union select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,retailer_name,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,'ZZZTOTAL' PRODUCT_CATEGORY,sum(LMTD_PRIMARY_PURCHASE)LMTD_PRIMARY_PURCHASE,SUM(MTD_PRIMARY_PURCHASE) MTD_PRIMARY_PURCHASE from PRIMARY_PURCHASE where DISTRIBUTOR_MSISDN=?  " +
			" group by retailer_name,RETAILER_MSISDN,PRODUCT_TYPE,hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,FSE_NAME)A order by HUB,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE with ur";
	//public static final String GET_REPORT_DATA_AGEING = "select * from AGEING where DISTRIBUTOR_MSISDN=? with ur";
	public static final String GET_REPORT_DATA_AGEING = "select * from (select hub,circle,zone,distributor_name,RETAILER_MSISDN, " +
			" RETAILER_NAME,fse_name,PRODUCT_TYPE,PRODUCT_CATEGORY,NO_LT_EQ_90,NO_GT_90 from AGEING where DISTRIBUTOR_MSISDN=? " +
			" union select hub,circle,zone,distributor_name,RETAILER_MSISDN,RETAILER_NAME,fse_name,PRODUCT_TYPE,'zzzz' PRODUCT_CATEGORY," +
			" sum(NO_LT_EQ_90)NO_LT_EQ_90,sum(NO_GT_90)NO_GT_90 from AGEING " +
			" where DISTRIBUTOR_MSISDN=? group by hub,circle,zone,distributor_name,RETAILER_MSISDN," +
			"RETAILER_NAME,fse_name,PRODUCT_TYPE)A order by HUB,CIRCLE,ZONE,DISTRIBUTOR_NAME,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,NO_LT_EQ_90,NO_GT_90";
	//public static final String GET_REPORT_DATA_NO_OF_RETAILERS = "select * from DISTRIBUTOR_WISE_RETAILER where DISTRIBUTOR_MSISDN=? with ur";
	public static final String GET_REPORT_DATA_NO_OF_RETAILERS = "select A.* from (select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,PRODUCT_TYPE,PRODUCT_CATEGORY,BUCKET_NAME,NO_OF_RETAILER from DISTRIBUTOR_WISE_RETAILER where DISTRIBUTOR_MSISDN=?  " +
			" union select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,PRODUCT_TYPE,'ZZZTOTAL' PRODUCT_CATEGORY,BUCKET_NAME,SUM(NO_OF_RETAILER)NO_OF_RETAILER from DISTRIBUTOR_WISE_RETAILER where DISTRIBUTOR_MSISDN=? group by PRODUCT_TYPE,BUCKET_NAME,hub,CIRCLE,ZONE,DISTRIBUTOR_NAME," +
			" DISTRIBUTOR_MSISDN)A order by HUB,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,PRODUCT_TYPE,BUCKET_NAME with ur";
	public static final String GET_REPORT_DATA_STOCK = "select A.* from (select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,retailer_name,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,PRODUCT_CATEGORY,CLOSING_STOCK,STOCK_NO_OF_DAYS from RETAILER_STOCK where DISTRIBUTOR_MSISDN=?  " +
			" union select hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,retailer_name,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE,'ZZZTOTAL' PRODUCT_CATEGORY, sum(CLOSING_STOCK)CLOSING_STOCK,SUM(STOCK_NO_OF_DAYS) STOCK_NO_OF_DAYS from RETAILER_STOCK where DISTRIBUTOR_MSISDN=?" +
			" group by retailer_name,RETAILER_MSISDN,PRODUCT_TYPE,hub,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,FSE_NAME)A order by HUB,CIRCLE,ZONE,DISTRIBUTOR_NAME,DISTRIBUTOR_MSISDN,RETAILER_MSISDN,FSE_NAME,PRODUCT_TYPE with ur";
	//	"select * from RETAILER_STOCK where DISTRIBUTOR_MSISDN=? with ur";
	public static final String GET_REPORT_DATA_SALES_SUMMARY = "select * from RETAILER_SALES where DISTRIBUTOR_MSISDN=? with ur";

	public static final String SELECT_RETAILER_STOCK = "SELECT HUB, CIRCLE, ZONE, DISTRIBUTOR_NAME, DISTRIBUTOR_MSISDN, RETAILER_NAME, RETAILER_MSISDN, FSE_NAME, PRODUCT_TYPE, PRODUCT_CATEGORY, DATE, CLOSING_STOCK, STOCK_NO_OF_DAYS FROM RETAILER_STOCK where DISTRIBUTOR_NAME=? with ur";
// Changes by Anju
	public static final String GET_PRODUCT_UNIT = "select coalesce(um.UNIT_NAME,'Z')UNIT_NAME from DP_PRODUCT_MASTER pm,dp_unit_master um where pm.PRODUCT_ID=? and pm.PRODUCT_UNIT = um.UNIT_ID with ur";
	public static final String SQL_SELECT_OLD_RECORD = "SELECT * FROM DP_PRODUCT_MASTER where CM_STATUS=? and CATEGORY_CODE=? and PRODUCT_ID=? and PRODUCT_NAME=?  and SR_CARD_GROUP=? and SR_PACK_TYPE=? and SR_PROCESSING_FEE=? and SR_GOLDEN_NUMBER_CHARGE=? and SR_VERSION=? and SR_MRP=? and SR_SIM_CARD_COST=? and SR_ACTIVATION=? and SR_SALE_TAX=? and SR_SERVICE_TAX=? and SR_CESS_TAX=? and SR_TURNOVER_TAX=? and SR_SH_EDUCESS=? and SR_DISCOUNT=? and SR_DISCOUNT_PRICE=? and SR_COST_PRICE=? and SR_OCTORI_PRICE=? and SR_TALKTIME=? and FREE_SERVICE=? and VAT=? and RET_DISCOUNT=? and RET_PRICE=? and PRODUCT_UNIT=? and SURCHARGE = ? and FREIGHT = ? and INSURANCE = ? and TRADE_DISCOUNT = ? and CASH_DISCOUNT = ?  and ADDITIONAL_TAX = ? and ORACLE_ITEM_CODE = ? and PRODUCT_TYPE=? and PARENT_PRODUCT_ID=? AND PRODUCT_CATEGORY=? AND PSTATUS=? with ur"; //status changed by neetika
	public static final String SQL_SELECT_OLD_HANDSET = "SELECT * FROM DP_PRODUCT_MASTER where CM_STATUS=? and CATEGORY_CODE=? and PRODUCT_ID=? and PRODUCT_NAME=? and PRODUCT_DESC=? and COMPANY_DESC=? and STOCK_TYPE=? and PRODUCT_WARRANTY=? and SR_VERSION=? and FREE_SERVICE=? and PRODUCT_UNIT=? with ur";
	public static final String SQL_SELECT_HANDSET_COUNT = "SELECT COUNT(*) FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE =? and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' ";
	//added by vishwas
	public static final String SQL_SELECT_HANDSET_COUNT_CARDGROUP = "SELECT COUNT(*) FROM DP_CARDGROUP_MASTER with ur";
	//end by vishwas
	public static final String SQL_SELECT_SUK_COUNT = "SELECT COUNT(*) FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE = ? and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' with ur";
	public static final String SQL_SELECT_RC_COUNT = "SELECT COUNT(*) FROM DP_PRODUCT_MASTER p,VR_CIRCLE_MASTER c WHERE CATEGORY_CODE = 2 and p.circle_id=c.circle_id and p.CM_STATUS = '"+Constants.ACTIVE_STATUS+"' with ur";
	public static final String SQL_GET_UNIT_LIST = "SELECT UNIT_ID, UNIT_NAME FROM DP_UNIT_MASTER with ur";
	public static final String SQL_SELECT_BTPACKTYPE = "select BT_CATEGORY_CODE from DP_BUSINESS_CATEGORY_MASTER where CATEGORY_CODE= ? with ur";
// for uniquesness of Card Group
	public static final String SQL_SELECT_CARD_GROUP = "SELECT PRODUCT_ID FROM DP_PRODUCT_MASTER WHERE UPPER(SR_CARD_GROUP)= ? AND CIRCLE_ID = ? AND CM_STATUS='"+Constants.ACTIVE_STATUS+"' " +
				" Union " +
				" SELECT PRODUCT_ID FROM DP_PRODUCT_MASTER WHERE UPPER(SR_CARD_GROUP)= ? AND CIRCLE_ID = ? AND CM_STATUS='"+Constants.DACTIVE_STATUS+"' and BT_PRODUCT_CODE is null WITH UR ";
	public static final String GET_DIST_PRODUCT="select distinct product_id,distributor_id,count(product_id)COUNT from dp_stock_inventory where inv_no=? and MARK_DAMAGED='I' group by PRODUCT_ID,distributor_id with ur";
	public static final String  GetStock="select CLOSINGBALANCE from DIST_STOCK_SUMMARY where DIST_ID=? and " +
	" PROD_ID=? and CURR_DATE=current date ";
	public static final String closingBalance="Select CLOSINGBALANCE  from DIST_STOCK_SUMMARY where DIST_ID =? " +
	" and PROD_ID=? and CURR_DATE =(Select max(Curr_Date) from DIST_STOCK_Summary where DIST_ID =?" +
	" and PROD_ID=?)";
	public static final String insertClosingBal="insert INTO DIST_STOCK_SUMMARY  Values(current date,?,?,0,0,0,?,?,0) with ur";
	public static final String updateDistStockSummary = "update DIST_STOCK_SUMMARY set CLOSINGBALANCE=CLOSINGBALANCE+?,RECEIPT=RECEIPT+? where DIST_ID=? and PROD_ID=? and CURR_DATE=current date with ur";
	public static final String SQL_GET_ACCOUNT_LEVEL = "select gd.group_name from vr_login_master lm,vr_group_details gd where lm.group_id=gd.group_id and lm.login_id=? ";
	//Commented by Nazim Hussain to implement PO Status change in ZSM login
//	public static final String SQL_GET_PO_LIST_ZBM = "SELECT t.*,coalesce((select case MARK_DAMAGED when 'I' then 1 else 0 end from DP_STOCK_INVENTORY where inv_no=t.INV_NO fetch first 1 rows only),0)ACCEPT_FLAG from " +
//			" (select row_number() over() as rx ,temp.* from (SELECT DPH.PR_NO,DPH.pr_cancel_flag,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME," +
//			" DPH.PR_DATE,PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND ID=PH.PO_STATUS) POSTATUS,IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID) PRODUCT, " +
//			" coalesce((select PRODUCT_UNIT from DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID),'Z') PRODUCT_UNIT,DPD.RAISED_QTY,PD.PO_QTY,ID.INV_QTY FROM (select * from DP_PR_HEADER WHERE PR_DIST_ID in (select ad.ACCOUNT_ID from VR_ACCOUNT_DETAILS ad,vr_account_details ad1" +
//			" where ad.zone_id=ad1.zone_id and ad1.account_id = ? and ad.account_level=6)) AS DPH LEFT JOIN DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO " +
//			" LEFT JOIN PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO LEFT JOIN PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN INVOICE_HEADER AS IH ON PD.PO_NO =  IH.PO_NO " +
//			" LEFT JOIN INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID ORDER BY DPH.PR_DATE DESC ) temp)as t";

//	Added by Nazim Hussain to implement PO Status change in ZSM login
	public static final String SQL_GET_PO_LIST_ZBM = "select * from (SELECT t.*, coalesce((select CASE WHEN IS_ACTIVE=1 and PO_STATUS in (7,8,32,34) THEN 1 else 0 end from PO_HEADER " +
			" where PO_NO=t.PO_NO),0)ACCEPT_FLAG" +
			" from (select row_number() over() as rx ,temp.* from(SELECT DPH.PR_NO,DPH.pr_cancel_flag," +
			" (SELECT ACCOUNT_NAME FROM DPDTH.VR_ACCOUNT_DETAILS VAD WHERE VAD.ACCOUNT_ID=DPH.PR_DIST_ID) DISNAME, DPH.PR_DATE," +
			" PH.PO_NO,PH.PO_DATE,(SELECT VALUE FROM DPDTH.DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=2 AND  ID=PH.PO_STATUS) POSTATUS," +
			" IH.INV_NO,IH.INV_DATE,IH.DC_NO,IH.DC_DT,IH.DD_CHEQUE_NO,IH.DD_CHEQUE_DATE,(select PRODUCT_NAME from DPDTH.DP_PRODUCT_MASTER" +
			" PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID) PRODUCT,DPD.PRODUCT_ID, coalesce( (select PRODUCT_UNIT" +
			" from DPDTH.DP_PRODUCT_MASTER PM WHERE PM.PRODUCT_ID=DPD.PRODUCT_ID AND CIRCLE_ID=DPD.CIRCLE_ID),'Z') PRODUCT_UNIT," +
			" DPD.RAISED_QTY,PD.PO_QTY, ID.INV_QTY, (select distinct PRODUCT_NAME from DPDTH.DP_PRODUCT_MASTER" +
			" where BT_PRODUCT_CODE=ID.EXT_PRODUCT_ID and circle_id=dpd.circle_id fetch first 1 rows only ) AS INV_PROD, PH.REMARKS, PH.PO_STATUS as MY_STATUS" +
			" FROM (select * from DPDTH.DP_PR_HEADER WHERE PR_DIST_ID in" +
			" (select ad.ACCOUNT_ID from DPDTH.VR_ACCOUNT_DETAILS ad, DPDTH.vr_account_details ad1" +
			" where ad.zone_id=ad1.zone_id and ad1.account_id =?  and ad.account_level=6)) AS DPH LEFT JOIN DPDTH.DP_PR_DETAILS AS DPD ON DPH.PR_NO=DPD.PR_NO" +
			" LEFT JOIN DPDTH.PO_HEADER AS PH ON DPD.PR_NO=PH.PR_NO  LEFT JOIN DPDTH.PO_DETAILS AS PD ON PH.PO_NO = PD.PO_NO AND" +
			" PD.EXT_PRODUCT_ID = DPD.EXT_PRODUCT_ID LEFT JOIN DPDTH.INVOICE_HEADER AS IH ON PD.PO_NO =  IH.PO_NO" +
			" LEFT JOIN DPDTH.INVOICE_DETAILS AS ID ON IH.INV_NO = ID.INV_NO AND ID.EXT_PRODUCT_ID = PD.EXT_PRODUCT_ID ORDER BY DPH.PR_DATE DESC) temp)as t ";

//	 GEOGRAPHY -----------------//
	public static final String SQL_GET_TABLE_NAME ="select table_name from DP_GEOGRAPHY where GEOGRAPHY_LEVEL = ?";
	public static final String SQL_GET_SEQ_NAME ="select SEQ_NAME from DP_GEOGRAPHY where GEOGRAPHY_LEVEL = ?";
	public static final String SQL_GET_FIELDS_NAME="SELECT GEOGRAPHY_FIELD FROM DP_GEOGRAPHY_FIELDS gf,DP_GEOGRAPHY geo where geo.GEOGRAPHY_ID=gf.GEOGRAPHY_ID and GEOGRAPHY_LEVEL=?";
	public static final String SQL_GET_FIELD="SELECT GEOGRAPHY_FIELD FROM DP_GEOGRAPHY_FIELDS gf,DP_GEOGRAPHY geo where geo.GEOGRAPHY_ID=gf.GEOGRAPHY_ID and GEOGRAPHY_LEVEL=? and upper(FIELD_NAME)=?";


	//	 Changed on 14 jul 09
	public static final String SQL_INSERT_HNDST = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME,COMPANY_DESC," +
			"STOCK_TYPE,PRODUCT_WARRANTY,PRODUCT_DESC,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID,EXT_PRODUCT_ID,SR_EFFECTIVE_DATE, UPDATED_DATE, UPDATED_BY, SR_VERSION, PRODUCT_UNIT) VALUES (NEXTVAL FOR SEQ_PC,'A',4,?,?,?,?,?,current timestamp,?,?,?,?,current date, current timestamp - 7 days,?,?,?)";

	// 	Changed on 14 jul 09
    // Change by harbans on Reservation Obserbation 30th June
	//changed by aman 20/05/14
	public static final String SQL_INSERT_SUK = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME," +

	"SR_CARD_GROUP,SR_PACK_TYPE,SR_SIM_CARD_COST,SR_TALKTIME,SR_MRP,SR_ACTIVATION," +

	"SR_PROCESSING_FEE,SR_SALE_TAX,SR_CESS_TAX,SR_GOLDEN_NUMBER_CHARGE,SR_EFFECTIVE_DATE,SR_VERSION," +

	"SR_SERVICE_TAX,SR_TURNOVER_TAX,SR_SH_EDUCESS,SR_DISCOUNT," +

	"SR_DISCOUNT_PRICE,SR_COST_PRICE,SR_OCTORI_PRICE,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID,EXT_PRODUCT_ID," +

	"VAT, RET_DISCOUNT, RET_PRICE, UPDATED_BY, UPDATED_DATE, PRODUCT_UNIT, SURCHARGE, FREIGHT, INSURANCE, " +

	"TRADE_DISCOUNT, CASH_DISCOUNT,Additional_Tax,Oracle_Item_Code,PRODUCT_TYPE, PARENT_PRODUCT_ID, PRODUCT_CATEGORY, PSTATUS)" + //changed to PSTATUS

	" VALUES (?,'A',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,current timestamp,?,?,?,?,?,?,?,?,current timestamp - 7 days,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";  //rajiv jha changes //Updated by Shilpa

	public static final String SQL_GET_SEQ_CREATE_PRODUCT = "SELECT NEXTVAL FOR SEQ_PC from sysibm.SYSDUMMY1";
	//END

	//	Changed on 14 jul 09
	public static final String SQL_INSERT_RC = "INSERT INTO DP_PRODUCT_MASTER (PRODUCT_ID,CM_STATUS,CATEGORY_CODE,PRODUCT_NAME," +

	"SR_CARD_GROUP,SR_PACK_TYPE,SR_SIM_CARD_COST,SR_TALKTIME,SR_MRP,SR_ACTIVATION," +

	"SR_PROCESSING_FEE,SR_SALE_TAX,SR_CESS_TAX,SR_GOLDEN_NUMBER_CHARGE,SR_EFFECTIVE_DATE,SR_VERSION," +

	"SR_SERVICE_TAX,SR_TURNOVER_TAX,SR_SH_EDUCESS,SR_DISCOUNT," +

	"SR_DISCOUNT_PRICE,SR_COST_PRICE,SR_OCTORI_PRICE,CREATED_DATE,CREATED_BY,FREE_SERVICE,CIRCLE_ID,EXT_PRODUCT_ID ,VAT, RET_DISCOUNT, RET_PRICE, PRODUCT_UNIT)" +

	" VALUES (NEXTVAL FOR SEQ_PC,'A',2,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,current timestamp,?,?,?,?,?,?,?,?)";

	public static final String sequenceId="select nextval for ";

	//changed by aman
	//public static final String SQL_SELECT_CARD_GROUP_CIRCLEWISE="Select CARDGROUPID,CARDGROUPNAME  from DTH_CARDGROUP_MASTER where CIRCLEID =? OR CIRCLEID = 0 WITH UR";

	//public static final String SQL_SELECT_CARD_GROUP_CIRCLEWISE="SELECT CARDGROUPID,CARDGROUPNAME FROM DP_CARDGROUP_MASTER WHERE STATUS='A' and CIRCLEID =? WITH UR";
	public static final String SQL_SELECT_CARD_GROUP_CIRCLEWISE="SELECT CARDGROUPID,ID FROM DP_CARDGROUP_MASTER WHERE STATUS='A' WITH UR";
	// Add by harbans on Reservation Obserbation 30th June
	public static final String SQL_GET_ALL_COMMERCIAL_PRODUCT=" SELECT PRODUCT_ID, PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE CIRCLE_ID=? AND INT(PRODUCT_TYPE)=(SELECT ID FROM DP_CONFIGURATION_DETAILS "
																+" WHERE CONFIG_ID=4 AND VALUE='"+Constants.REVERSE_COM_PRODUCT_TYPE+"') WITH UR";



	// Add by harbans
	public static final String GET_LEVEL_DETAILS ="select LEVEL_ID, LEVEL_NAME from VR_ACCOUNT_LEVEL_MASTER where LEVEL_ID  IN (6,7,8) with ur";// For Dist, Retailers, FSE.

	public static final String GET_ACCOUNT_DETAILS_DIST_CIRCLE = "select a.account_id  , a.account_name  from VR_ACCOUNT_DETAILS a , VR_LOGIN_MASTER b  where  a.account_level=? and a.account_id = b.login_id and circle_id = ? order by a.account_name with ur";
	
	/*Commented by Parnika 
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VLM.STATUS='A' and VAD.IS_DISABLE='N' and VAD.PARENT_ACCOUNT=? and VAD.CIRCLE_ID= ? with ur ";
	End of comment by Parnika */
	
//	Added by Shilpa to get inactive account also
	/* Commented by Parnika 	 
	  public static final String GET_ACCOUNT_DETAILS_REV_LOG_FROM_DIST = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VAD.PARENT_ACCOUNT=? and VAD.CIRCLE_ID= ? with ur ";	  
	 End of comment by Parnika */
	 
	/*public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST = " select VAD.ACCOUNT_ID,VAD.account_name  " 
																	+" from VR_ACCOUNT_DETAILS VAD ,DP_ACCOUNT_CIRCLE_MAP circle "
																	+" where VAD.IS_DISABLE='N'  "
																	+" and VAD.ACCOUNT_ID=circle.ACCOUNT_ID "
																	+" and VAD.PARENT_ACCOUNT=?  "
																	+" and circle.CIRCLE_ID= ? "
																	+" with ur";*/
	
	//***** Updated By shilpa to get only Activated Distributors
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST_ALL = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD, " +
			"VR_LOGIN_MASTER VLM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VLM.STATUS='A' and VAD.IS_DISABLE='N' and VAD.ACCOUNT_LEVEL = ? with ur ";
	
//	Added by Shilpa to get inactive account also

	public static final String GET_ACCOUNT_DETAILS_REV_LOG_FROM_DIST_ALL = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD, " +
	"VR_LOGIN_MASTER VLM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VAD.ACCOUNT_LEVEL = ? with ur ";	


	public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST_ALL_TSM_ALL = "select VAD.ACCOUNT_ID,VAD.account_name from " +
		"VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM  where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VLM.STATUS='A' and  VAD.IS_DISABLE='N' and VAD.ACCOUNT_LEVEL =? and CIRCLE_ID = ? with ur ";
	
	//**** Updated By shilpa to get only Activated Distributors Ends here 
	
	
	/*public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST_ALL_TSM_ALL = "select VAD.ACCOUNT_ID,VAD.account_name  " 
																			+" from VR_ACCOUNT_DETAILS VAD ,DP_ACCOUNT_CIRCLE_MAP b "
																			+" where   VAD.ACCOUNT_ID=b.ACCOUNT_ID "
																			+" and VAD.IS_DISABLE='N'  "
																			+" and VAD.ACCOUNT_LEVEL =?  "
																			+" and b.CIRCLE_ID = ?  "
																			+" with ur  ";*/

	//	Added by Shilpa to get inactive account also
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_FROM_DIST_ALL_TSM_ALL = "select VAD.ACCOUNT_ID,VAD.account_name from " +
		"VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM  where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VAD.ACCOUNT_LEVEL =? and CIRCLE_ID = ? with ur ";

	public static final String GET_ACCOUNT_DETAILS_DIST_CIRCLE_ALL = "select a.account_id  , a.account_name  from VR_ACCOUNT_DETAILS a , VR_LOGIN_MASTER b  where  a.account_level=? and a.account_id = b.login_id order by a.account_name with ur";
	public static final String GET_ACCOUNT_DETAILS_DIST_ONE= "select a.account_id  , a.account_name  from VR_ACCOUNT_DETAILS a , VR_LOGIN_MASTER b  where  a.account_level=? and a.account_id = b.login_id and a.account_id = ? with ur";
	public static final String GET_ACCOUNT_DETAILS_DIST = "select account_id, account_name from vr_account_details where ACCOUNT_ID = ? order by account_name with ur ";

	public static final String GET_ACCOUNT_DETAILS_FSE ="select account_id, account_name from vr_account_details where PARENT_ACCOUNT =? with ur ";
	public static final String GET_ACCOUNT_DETAILS_RETAILRES ="SELECT account_id, account_name FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT IN (select account_id from vr_account_details where PARENT_ACCOUNT =?) with ur";

	public static final String GET_ACCOUNT_DETAILS_ZBM = "select account_id, account_name from vr_account_details where PARENT_ACCOUNT in (select account_id from vr_account_details where PARENT_ACCOUNT in  (select account_id from vr_account_details where PARENT_ACCOUNT = ?))  with ur";;
	public static final String GET_ACCOUNT_DETAILS_TSM = "select account_id, account_name from vr_account_details where PARENT_ACCOUNT = ? with ur";

	public static final String GET_ALL_PRODUCT_DETAILS_DIST = "select VAD.ACCOUNT_NAME,(SELECT LEVEL_NAME from VR_ACCOUNT_LEVEL_MASTER where LEVEL_ID=VAD.ACCOUNT_LEVEL) as ACCOUNT_TYPE, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE, DATE(dsi.ASSIGN_DATE) ASSIGN_DATE, dsi.CUSTOMER_ID, "
															+" (SELECT PR_NO FROM PO_HEADER WHERE PO_NO = (SELECT PO_NO FROM INVOICE_HEADER WHERE INV_NO = dsi.INV_NO)) PR_NO, dsi.INV_NO, (select PO_NO FROM INVOICE_HEADER WHERE INV_NO = dsi.INV_NO ) AS PO_NO "
															+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
															+" where dsi.DISTRIBUTOR_ID = ? and FSE_ID is null and RETAILER_ID is null "
															+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
															+" and DATE(dsi.DISTRIBUTOR_PURCHASE_DATE) >= ? and DATE(dsi.DISTRIBUTOR_PURCHASE_DATE) <= ? "
															+" and dsi.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' with ur ";
	// Add by harbans to rollback MIS reports
	public static final String GET_PRODUCT_DETAILS_DIST = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and FSE_ID is null and RETAILER_ID is null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" and dsi.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' with ur ";

	public static final String GET_PRODUCT_DETAILS_ALL_DIST = " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I'  and dsi.STATUS=3 "
		  +" UNION "
		  +" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I'  and dsi.STATUS!=3 "
		  + " UNION "
		  +" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is null and dsi.RETAILER_ID is null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS"
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
		  + " UNION "
		  +" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE  "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.FSE_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
		  + " UNION "
		  + " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is NOT null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' with ur";


public static final String GET_PRODUCT_DETAILS_ALL_FSE = " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.FSE_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I'"
		+" UNION "
		+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is not null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I'"
		+" UNION "
		+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' AND DSI.STATUS=3"
		+" with ur";

public static final String GET_PRODUCT_DETAILS_FSE =    " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.FSE_ID = ? and dsi.RETAILER_ID is null and dsi.PRODUCT_ID = dpm.PRODUCT_ID "
		+" and dcm.STATUS_ID = dsi.STATUS  and dsi.fse_ID=VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' with ur ";

public static final String GET_PRODUCT_DETAILS_RETAILRES = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
			+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
			+" where dsi.RETAILER_ID = ? and dsi.PRODUCT_ID = dpm.PRODUCT_ID and FSE_ID is not null and RETAILER_ID is not null "
			+" and dcm.STATUS_ID = dsi.STATUS and dsi.RETAILER_ID = VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' "
			+" UNION "
			+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
			+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
			+" where dsi.RETAILER_ID = ? "
			+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
			+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I'  AND DSI.STATUS=3 with ur";

public static final String GET_PRODUCT_DETAILS_ALL_RETAILRES = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
			+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
			+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is not null "
			+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
			+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
			+" UNION "
			+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
			+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
			+" where dsi.DISTRIBUTOR_ID = ? "
			+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
			+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I'  AND DSI.STATUS=3 with ur";
















	//#######










	public static final String GET_CONTROL_PARAM_VALUE  = "select PARAM_ID, PARAM_NAME, PARAM_FLAG from DP_CONTROL_PARAMETER where PARAM_NAME = ? with ur";

	// add by harbans for report
	public static final String GET_EXCEPTION_CONSUMED_REPORT = " SELECT REC_ID, SERIAL_NUMBER, STATUS, ASSIGN_DATE, DEALER_CODE, DISTRIBUTOR_CODE, ACE_CODE FROM DP_CPE_EXTRA_SERIAL_UPDATE WHERE ASSIGN_DATE >= ? AND ASSIGN_DATE <= ? WITH UR";
//	 add by harbans for report
	//public static final String GET_ACCOUNT_DETAILS_DIST = "select account_id, account_name from vr_account_details where ACCOUNT_ID = ? with ur ";


	/*public static final String OPEN_STOCK_DEPLETE_REPORT = " select OSCD.DIST_LOCATOR_CODE as LOCATOR_CODE , (Select LOGIN_NAME from VR_LOGIN_MASTER LM, VR_ACCOUNT_DETAILS AD " +
			                                            " where LM.LOGIN_ID=AD.ACCOUNT_ID AND AD.DISTRIBUTOR_LOCATOR=OSCD.DIST_LOCATOR_CODE) LOGIN_NAME, " +
			                                            " OSCD.ORACLE_PRODUCT_CODE as PRODUCT_CODE , OSCD.QUANTITY as QUANTITY , OSCD.CREATED_DATE as CREATED_DATE, OSCD.STATUS as STATUS, EM.ERROR_DESP  as ERROR_DESP" +
			                                            " from DP_OPEN_STOCK_CRM_DEPLETE  OSCD LEFT OUTER JOIN DP_OPEN_STOCK_ERROR_CODE EM ON " +
			                                            " EM.ERROR_CODE=OSCD.STATUS WHERE CREATED_DATE BETWEEN ? AND ? with ur ";*/



	//Add on merging to remove MIS update on 5th August
	//##################################################################################################
	/*public static final String GET_PRODUCT_DETAILS_ALL_DIST = " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I'  "
		  + " UNION "
		  +" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is null and dsi.RETAILER_ID is null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS"
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
		  + " UNION "
		  +" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE  "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.FSE_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
		  + " UNION "
		  + " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		  +" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		  +" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is NOT null "
		  +" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		  +" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' with ur";

	public static final String GET_PRODUCT_DETAILS_DIST = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.DISTRIBUTOR_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and FSE_ID is null and RETAILER_ID is null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" and dsi.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' with ur ";

	public static final String GET_PRODUCT_DETAILS_ALL_FSE = " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.FSE_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I'"
		+" UNION "
		+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is not null "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I'"
		+" UNION "
		+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.DISTRIBUTOR_ID = ? "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' with ur";

	public static final String GET_PRODUCT_DETAILS_FSE =    " select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.FSE_PURCHASE_DATE) STOCK_DATE "
			+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
			+" where dsi.FSE_ID = ? and dsi.RETAILER_ID is null and dsi.PRODUCT_ID = dpm.PRODUCT_ID "
			+" and dcm.STATUS_ID = dsi.STATUS  and dsi.fse_ID=VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' with ur ";

	public static final String GET_PRODUCT_DETAILS_ALL_RETAILRES = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
				+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
				+" where dsi.DISTRIBUTOR_ID = ? and dsi.FSE_ID is not null and dsi.RETAILER_ID is not null "
				+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
				+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID AND dsi.MARK_DAMAGED <> 'I' "
				+" UNION "
				+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
				+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
				+" where dsi.DISTRIBUTOR_ID = ? "
				+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
				+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' with ur";

	public static final String GET_PRODUCT_DETAILS_RETAILRES = "select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.RETAILER_ID = ? and dsi.PRODUCT_ID = dpm.PRODUCT_ID and FSE_ID is not null and RETAILER_ID is not null "
		+" and dcm.STATUS_ID = dsi.STATUS and dsi.RETAILER_ID = VAD.ACCOUNT_ID AND DPM.CATEGORY_CODE = 1 AND dsi.MARK_DAMAGED <> 'I' "
		+" UNION "
		+" select VAD.ACCOUNT_NAME, dpm.PRODUCT_NAME, dsi.SERIAL_NO, dcm.STATUS_DESCRIPTION, Date(dsi.RETAILER_PURCHASE_DATE) STOCK_DATE "
		+" from DP_STOCK_INVENTORY_ASSIGNED dsi, DP_PRODUCT_MASTER dpm, DP_CPE_STATUS_MASTER dcm, VR_ACCOUNT_DETAILS VAD "
		+" where dsi.RETAILER_ID = ? "
		+" and dsi.PRODUCT_ID = dpm.PRODUCT_ID and dcm.STATUS_ID = dsi.STATUS "
		+" AND DPM.CATEGORY_CODE = 1 AND DSI.RETAILER_ID=VAD.ACCOUNT_ID  AND dsi.MARK_DAMAGED <> 'I' with ur";
		*/
	//############################################################################################################
	//added by saumya for open stock deplete report

	public static final String OPEN_STOCK_DEPLETE_REPORT = " select VCM.CIRCLE_NAME,VLM.LOGIN_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=SD.DIST_ID) AS DIST_NAME," +
														   " SD.DIST_ORACLE_LOCATOR_CODE, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=PM.CPE_PRODUCT_ID), " +
														   " SD.OPENING_STOCK, SD.SALE, SD.CLOSING_STOCK, SD.LAST_UPDATE_DATE " +
														   " from DP_OPEN_STOCK_DTL SD, DP_CPE_RCV_PRODUCT_MAPPING PM, VR_LOGIN_MASTER VLM, VR_ACCOUNT_DETAILS VAD, VR_CIRCLE_MASTER VCM" +
														   " where SD.PRODUCT_ID=PM.RCV_PRODUCT_ID AND VLM.LOGIN_ID=VAD.ACCOUNT_ID AND VAD.CIRCLE_ID= VCM.CIRCLE_ID " +
														   " with ur ";


	// Al query for STOCK_DETAIL report.
	public static final String GET_ALL_DIST_PRODUCT_NAME = " SELECT DISTINCT DPM.PRODUCT_ID, DPM.PRODUCT_NAME "
														   +" FROM DP_PRODUCT_MASTER DPM, DP_STOCK_INVENTORY DSI "
														   +" WHERE DSI.PRODUCT_ID = DPM.PRODUCT_ID AND DSI.DISTRIBUTOR_ID = ? "
														   +" UNION "
														   +" SELECT DISTINCT DPM.PRODUCT_ID, DPM.PRODUCT_NAME "
														   +" FROM DP_PRODUCT_MASTER DPM, DP_STOCK_INVENTORY_ASSIGNED DSI "
														   +" WHERE DSI.PRODUCT_ID = DPM.PRODUCT_ID AND DSI.DISTRIBUTOR_ID = ? WITH UR";


	public static final String GET_ACC_NAME_AND_ROLE = " SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , VGD.GROUP_NAME , VGD.GROUP_ID "
		+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM,VR_GROUP_DETAILS VGD "
		+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VLM.GROUP_ID= VGD.GROUP_ID AND VLM.LOGIN_ID = ? "
		+" UNION "
		+" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , VGD.GROUP_NAME , VGD.GROUP_ID "
		+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM,VR_GROUP_DETAILS VGD "
	    +" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VLM.GROUP_ID= VGD.GROUP_ID AND VAD.PARENT_ACCOUNT = ?"
		+" UNION "
		+" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , VGD.GROUP_NAME , VGD.GROUP_ID "
		+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM,VR_GROUP_DETAILS VGD "
		+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VLM.GROUP_ID= VGD.GROUP_ID "
		+" AND VAD.PARENT_ACCOUNT IN (select ACCOUNT_ID from VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT = ?) WITH UR ";


	public static final String GET_PRODUCT_NAME_CIRCLE = "SELECT PRODUCT_ID, PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE CIRCLE_ID=? WITH UR";

	// Add by harbans on MSI reports
	public static final String GET_ALL_ACC_NAME_AND_ROLE_DIST = " SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME, VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND  VLM.LOGIN_ID = ? "
															+" UNION "
															+" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME,VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID  AND VAD.PARENT_ACCOUNT = ? "
															+" UNION "
															+" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME,VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM "
															+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VAD.PARENT_ACCOUNT IN (select ACCOUNT_ID from VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT = ?) ORDER BY ACCOUNT_ID WITH UR";

//	 Add by harbans on MSI reports
	public static final String GET_ALL_ACC_NAME_AND_ROLE_FSE =" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME,VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID  AND VAD.PARENT_ACCOUNT = ? "
															+" UNION "
															+" SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME,VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM "
															+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VAD.PARENT_ACCOUNT IN (select ACCOUNT_ID from VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT = ?) ORDER BY ACCOUNT_ID WITH UR";

//	 Add by harbans on MSI reports
	public static final String GET_ALL_ACC_NAME_AND_ROLE_RET = " SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = VAD.PARENT_ACCOUNT) PARENT_NAME,VAD.ACCOUNT_LEVEL "
															+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM "
															+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VAD.PARENT_ACCOUNT IN (select ACCOUNT_ID from VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT = ?) ORDER BY ACCOUNT_ID WITH UR";


//	 Add by harbans on MSI reports
	public static final String GET_SCM_HIST_CONSUMTION_REPORT = " SELECT DP_SCM_ID, SOURCE, TRANSACTION_TYPE, FROM_COMPANY_CODE, FROM_AREA, FROM_SUB_AREA, FROM_SOURCE_TYPE, TO_COMPANY_CODE, TO_AREA, TO_SUB_AREA, TO_SOURCE_TYPE, ITEM_CODE, QUANTITY, STATUS, ERROR, REQUEST_ID, CREATED_BY, LAST_UPDATED_BY, TO_CHAR(CREATION_DATE,'dd-MON-yyyy') CREATION_DATE, TO_CHAR(LAST_UPDATE_DATE,'dd-MON-yyyy')LAST_UPDATE_DATE, TO_CHAR(LAST_HIST_DATE,'dd-MON-yyyy')LAST_HIST_DATE, DIST_ID, PROD_ID"
																+" FROM DP_SCM_INT_DATA_HIST WHERE DIST_ID = ? AND TRANSACTION_TYPE = ? AND  (CREATION_DATE BETWEEN TO_DATE(?,'MM/dd/yyyy') AND TO_DATE(?,'MM/dd/yyyy')) "
																+" UNION "
																+" SELECT DP_SCM_ID, SOURCE, TRANSACTION_TYPE, FROM_COMPANY_CODE, FROM_AREA, FROM_SUB_AREA, FROM_SOURCE_TYPE, TO_COMPANY_CODE, TO_AREA, TO_SUB_AREA, TO_SOURCE_TYPE, ITEM_CODE, QUANTITY, STATUS, ERROR, REQUEST_ID, CREATED_BY, LAST_UPDATED_BY, TO_CHAR(CREATION_DATE,'dd-MON-yyyy') CREATION_DATE, TO_CHAR(LAST_UPDATE_DATE,'dd-MON-yyyy')LAST_UPDATE_DATE, TO_CHAR(LAST_HIST_DATE,'dd-MON-yyyy')LAST_HIST_DATE, DIST_ID, PROD_ID"
																+" FROM DP_SCM_INT_DATA_HIST WHERE DIST_ID = ? AND TRANSACTION_TYPE = ? AND  (LAST_UPDATE_DATE BETWEEN TO_DATE(?,'MM/dd/yyyy') AND TO_DATE(?,'MM/dd/yyyy')) ORDER BY DP_SCM_ID";

	public static final String GET_ACC_NAME_AND_ROLE_DISTRIBUTOR = " SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , VGD.GROUP_NAME , VGD.GROUP_ID "
														+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM,VR_GROUP_DETAILS VGD "
														+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VLM.GROUP_ID= VGD.GROUP_ID AND VLM.LOGIN_ID = ?  WITH UR";

//	 Add by harbans on MSI reports
	public static final String GET_DISTRIBUTOR_CODE = " SELECT LOGIN_NAME FROM VR_LOGIN_MASTER WHERE LOGIN_ID=? WITH UR";

	public static final String GET_DIST_OPENING_STOCK = "SELECT SUM(cnt) AS OPENING_STOCK "
															+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS) "
															+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
															+ " UNION ALL "
															+ " (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS)"
															+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur";




	public static final String GET_DIST_OK_OPENING_STOCK_REPORT = 	" SELECT SUM(cnt) AS OPENING_STOCK FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) < ? "
																	+" AND (DATE(FSE_PURCHASE_DATE)  >= ? OR DATE(FSE_PURCHASE_DATE) IS NULL) AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
																	+" UNION ALL  "
																	+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) < ? "
																	+" AND (DATE(FSE_PURCHASE_DATE)  >= ? OR DATE(FSE_PURCHASE_DATE) IS NULL) "
																	+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur ";



	public static final String GET_FSE_OK_OPENING_STOCK_REPORT =	" SELECT SUM(cnt) AS OPENING_STOCK "
																	+" FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(FSE_PURCHASE_DATE) < ? "
																	+" AND (DATE(RETAILER_PURCHASE_DATE)  >= ? OR DATE(RETAILER_PURCHASE_DATE) IS NULL) AND FSE_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
																	+" UNION ALL "
																	+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(FSE_PURCHASE_DATE) < ? "
																	+" AND (DATE(RETAILER_PURCHASE_DATE)  >= ?) "
																	+" AND FSE_ID = ? AND PRODUCT_ID = ?)) with ur";


	public static final String GET_RETAILER_OK_OPENING_STOCK_REPORT =	" SELECT SUM(cnt) AS OPENING_STOCK "
																	+" FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(RETAILER_PURCHASE_DATE) < ? "
																	+" AND ASSIGN_DATE IS NULL AND RETAILER_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
																	+" UNION ALL  "
																	+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(RETAILER_PURCHASE_DATE) < ? "
																	+" AND (DATE(ASSIGN_DATE)  >= ? OR ASSIGN_DATE IS NULL)  "
																	+" AND RETAILER_ID = ? AND PRODUCT_ID = ?)) with ur";



	public static final String GET_DIST_OPENING_BALANCE_DAMAGED_STOCK =	" SELECT SUM(cnt) AS OPENING_BALANCE_DAMAGED_STOCK "
																		+" FROM ((SELECT COUNT(*) As Cnt FROM DP_REV_STOCK_INVENTORY WHERE DATE(COLLECTION_DATE) < ? AND CREATED_BY=? AND PRODUCT_ID = ? AND STATUS IN ('COL','IDC')) "
																		+" UNION ALL "
																		+" (SELECT COUNT(*) As Cnt FROM DP_REV_STOCK_INVENTORY_HIST WHERE DATE(COLLECTION_DATE) < ? AND DATE(ARCHIVED_DATE) >= ?  AND CREATED_BY=? AND PRODUCT_ID = ? AND STATUS IN ('S2W','AIW','MSN'))) WITH UR ";

	public static final String GET_DIST_CLOSING_DAMAGED_STOCK =	  " SELECT SUM(cnt) AS CLOSING_DAMAGED_STOCK "
																		  +"	FROM ((SELECT COUNT(*) As Cnt FROM DP_REV_STOCK_INVENTORY WHERE (DATE(COLLECTION_DATE) BETWEEN ? AND ?) AND CREATED_BY=?  AND PRODUCT_ID = ? AND STATUS IN ('COL','IDC')) "
																		  +"	UNION ALL "
																		  +" (SELECT COUNT(*) As Cnt FROM DP_REV_STOCK_INVENTORY_HIST WHERE (DATE(COLLECTION_DATE) BETWEEN ? AND ?) AND CREATED_BY=? AND PRODUCT_ID = ? AND STATUS IN ('S2W','AIW','MSN'))) WITH UR ";



//	Updated by Shilpa Khanna to modify conditional Check in  DP_STOCK_INVENTORY_ASSIGNED Status =3
public static final String GET_TOTAL_ACTIVATION_STOCK = " SELECT SUM(cnt) AS ACTIVATION_STOCK "
															+" FROM (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE STATUS=3 AND (DATE(ASSIGN_DATE) BETWEEN ? AND ?)"
															+" AND DISTRIBUTOR_ID=? AND RETAILER_ID=?  AND PRODUCT_ID = ? AND MARK_DAMAGED='N')  with ur ";

	public static final String GET_PARENT_ACCOUNT_NAME = " SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID IN (SELECT PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=?) WITH UR ";

	public static final String GET_PARENT_ACCOUNT_ID = "SELECT PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=?";

	//End MSI


	public static final String GET_DIST_OPENING_STOCK_REPORT = "SELECT SUM(cnt) AS OPENING_STOCK "
															+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= ? "
															+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
															+ " UNION ALL "
															+ " (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= ? "
															+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur";



	public static final String GET_DIST_STOCK_RECEIVED = "SELECT SUM(Cnt) AS TOTAL_STOCK_RECEIVED FROM "
															+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) = CURRENT DATE "
															+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?  AND MARK_DAMAGED='N'  AND INV_NO!='REV-INV' )"
															+" UNION ALL "
															+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) = CURRENT DATE "
															+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?  AND INV_NO!='REV-INV')) with ur";




	public static final String GET_DIST_ALLOCATION_STOCK = 	 "SELECT SUM(Cnt) AS ALLOCATION FROM "
																+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE FSE_ID IS NOT NULL "
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' )"
																+" UNION ALL "
																+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL "
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) WITH UR";


	// These queries are only for Distributor.
	public static final String GET_DISTRIBUTOR_OPENING_STOCK = "SELECT SUM(cnt) AS OPENING_STOCK "
																+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= (? - 1 DAYS) "
																+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
																+ " UNION ALL "
																+ " (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) <= (? - 1 DAYS)"
																+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur";

	public static final String GET_DISTRIBUTOR_OPENING_STOCK_REPORT = "SELECT SUM(cnt) AS OPENING_STOCK "
																+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) >= ? and DATE(DISTRIBUTOR_PURCHASE_DATE) <= ?  "
																+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
																+ " UNION ALL "
																+ " (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) >= ? and DATE(DISTRIBUTOR_PURCHASE_DATE) <= ? "
																+ " AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur";


	public static final String GET_DISTRIBUTOR_STOCK_RECEIVED = "SELECT SUM(Cnt) AS TOTAL_STOCK_RECEIVED FROM "
																+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) >= ? AND DATE(DISTRIBUTOR_PURCHASE_DATE) <= ? "
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?  AND MARK_DAMAGED='N'  )"
																+" UNION ALL "
																+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(DISTRIBUTOR_PURCHASE_DATE) >= ? AND DATE(DISTRIBUTOR_PURCHASE_DATE) <= ? "
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) with ur";

	public static final String GET_DISTRIBUTOR_ALLOCATION_STOCK = 	 "SELECT SUM(Cnt) AS ALLOCATION FROM "
																+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE FSE_ID IS NOT NULL AND DATE(FSE_PURCHASE_DATE) >= ? AND DATE(FSE_PURCHASE_DATE) <= ?"
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' )"
																+" UNION ALL "
																+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL AND DATE(FSE_PURCHASE_DATE) >= ? AND DATE(FSE_PURCHASE_DATE) <= ?"
																+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ?)) WITH UR";

	public static final String GET_DISTRIBUTOR_SECONDERY_SALE = "SELECT SUM(Cnt) AS SECONDAORY_SALE FROM "
																+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE FSE_ID IS NOT NULL AND RETAILER_ID IS NOT NULL AND DATE(RETAILER_PURCHASE_DATE) >= ? AND DATE(RETAILER_PURCHASE_DATE) <= ?"
																+" AND DISTRIBUTOR_ID = ?  AND FSE_ID=? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' )"
																+" UNION ALL "
																+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL AND RETAILER_ID IS NOT NULL AND DATE(RETAILER_PURCHASE_DATE) >= ? AND DATE(RETAILER_PURCHASE_DATE) <= ?"
																+" AND DISTRIBUTOR_ID = ?  AND FSE_ID=? AND PRODUCT_ID = ?)) WITH UR";


	public static final String GET_FSE_OPENING_STOCK = " SELECT SUM(cnt) AS OPENING_STOCK "
			+" FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(FSE_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS) "
			+" AND  FSE_ID=? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' )"
			+" UNION ALL "
			+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(FSE_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS) "
			+" AND FSE_ID=?  AND PRODUCT_ID = ?)) with ur ";



	public static final String GET_FSE_STOCK_RECEIVED = "SELECT SUM(Cnt) AS TOTAL_STOCK_RECEIVED FROM "
			+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(FSE_PURCHASE_DATE) = CURRENT DATE "
			+" AND FSE_ID=?  AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
			+" UNION ALL "
			+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(FSE_PURCHASE_DATE) = CURRENT DATE "
			+" AND FSE_ID=? AND PRODUCT_ID = ?)) with ur ";




	public static final String GET_FSE_ALLOCATION_STOCK = 	" SELECT SUM(Cnt) AS ALLOCATION FROM "
			+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE FSE_ID IS NOT NULL and RETAILER_ID IS NOT NULL "
			+" AND FSE_ID=? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
			+" UNION ALL "
			+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL and RETAILER_ID IS NOT NULL "
			+" AND FSE_ID=? AND PRODUCT_ID = ?)) WITH UR ";


	public static final String GET_RET_OPENING_STOCK = "SELECT SUM(cnt) AS OPENING_STOCK "
		+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(RETAILER_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS) "
		+ " AND RETAILER_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
		+ " UNION ALL "
		+ " (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(RETAILER_PURCHASE_DATE) <= (CURRENT DATE - 1 DAYS)"
		+ " AND RETAILER_ID = ? AND PRODUCT_ID = ?)) with ur";


	public static final String GET_RET_STOCK_RECEIVED = "SELECT SUM(Cnt) AS TOTAL_STOCK_RECEIVED FROM "
		+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE DATE(RETAILER_PURCHASE_DATE) = CURRENT DATE "
		+" AND RETAILER_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' )"
		+" UNION ALL "
		+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE DATE(RETAILER_PURCHASE_DATE) = CURRENT DATE "
		+" AND RETAILER_ID = ? AND PRODUCT_ID = ?)) with ur";


	/*	SR1697661	--	Modified by Nazim Hussain to bring Correct Closing stock of Reailer
	 *
	 * public static final String GET_RET_ALLOCATION_STOCK = 	" SELECT SUM(Cnt) AS ALLOCATION FROM "
		+" ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE FSE_ID IS NOT NULL and RETAILER_ID IS NOT NULL "
		+" AND RETAILER_ID=? AND PRODUCT_ID = ? AND MARK_DAMAGED='N' ) "
		+" UNION ALL "
		+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL and RETAILER_ID IS NOT NULL "
		+" AND RETAILER_ID=? AND PRODUCT_ID = ? AND STATUS=3)) WITH UR ";*/

	public static final String GET_RET_ALLOCATION_STOCK = " SELECT COUNT(*) As ALLOCATION FROM " +
			"DP_STOCK_INVENTORY_ASSIGNED WHERE FSE_ID IS NOT NULL and RETAILER_ID IS NOT NULL AND RETAILER_ID=? " +
			"AND PRODUCT_ID = ? WITH UR ";


	public static final String GET_REJECTED_INVOCES_OF_DISTRIBUTOR = " SELECT IH.INV_NO,IH.DC_NO FROM INVOICE_HEADER IH, PO_HEADER PH, DP_PR_HEADER DPH "
																	+" WHERE STATUS=? AND IH.PO_NO = PH.PO_NO AND PH.PR_NO = DPH.PR_NO AND DPH.PR_DIST_ID = ? WITH UR";

	/*public static final String GET_REJECTED_INVOCES_OF_DISTRIBUTOR  = "SELECT IH.INV_NO,IH.DC_NO ,ERR.DC_NO as ERROR_DC  "
																	+" FROM INVOICE_HEADER IH left outer join DP_ERROR_PO_DETAIL ERR on IH.DC_NO=ERR.DC_NO "
																	+" inner join PO_HEADER PH on IH.PO_NO = PH.PO_NO inner join DP_PR_HEADER DPH on PH.PR_NO = DPH.PR_NO "
																	+" WHERE STATUS=?  "
																	+" AND DPH.PR_DIST_ID = ? WITH UR";
	*/
	public static final String GET_ALL_SERIALS_NO = "SELECT SERIAL_NO	FROM DP_STOCK_INVENTORY DSI, VR_ACCOUNT_DETAILS VAD" +
													" WHERE DSI.MARK_DAMAGED='I' AND DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND VAD.CIRCLE_ID=?" +
													" AND (DSI.INV_NO=? OR DSI.INV_NO=?) WITH UR";

	public static final String GET_DCNO_ON_INVOICE_NO = "SELECT DC_NO FROM INVOICE_HEADER WHERE INV_NO=? WITH UR";

	public static final String GET_INVOICE_NO_ON_DC_NO = "SELECT INV_NO FROM INVOICE_HEADER WHERE DC_NO=? WITH UR";


	public static final String GET_ALL_PRODUCT_NOS = " SELECT DPD.PRODUCT_ID, (SELECT PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE "
													+" PRODUCT_ID = DPD.PRODUCT_ID) PRODUCT_NAME FROM DP_PR_DETAILS DPD "
													+" WHERE PR_NO IN (SELECT PR_NO FROM PO_HEADER WHERE PO_NO IN (SELECT PO_NO FROM "
													+" INVOICE_HEADER WHERE INV_NO=? OR INV_NO=? )) WITH UR ";

	// Insert Short Shipment records.
	/*public static final String INSERT_SHORT_SHIPMENT_RECORDS = "INSERT INTO DP_WRONG_SHIP_DETAIL(SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, DC_NO, STB_STATUS, WRONG_SHIP_TYPE, ASSIGNED_TO, CREATED_BY, CREATED_DATE) "
													+" SELECT SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, "
													+" (SELECT DC_NO FROM INVOICE_HEADER IH WHERE IH.INV_NO= DSI.INV_NO) DC_NO, "+com.ibm.dp.common.Constants.TRANS_TYPE_RESTRICTED+", '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TYPE_SHORT+"', "
													+" (SELECT PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DSI.DISTRIBUTOR_ID) ASSIGN_TO, DISTRIBUTOR_ID, CURRENT TIMESTAMP "
													+" FROM DP_STOCK_INVENTORY DSI WHERE DSI.SERIAL_NO=? AND DC_NO=? WITH UR ";
	*/
	/*
	public static final String INSERT_SHORT_SHIPMENT_RECORDS = "INSERT INTO DP_WRONG_SHIP_DETAIL(SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, DC_NO, STB_STATUS, WRONG_SHIP_TYPE, ASSIGNED_TO, CREATED_BY, CREATED_DATE) "
		+" SELECT SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, "
		+" (SELECT DC_NO FROM INVOICE_HEADER IH WHERE IH.INV_NO= DSI.INV_NO and DC_NO=? ) DC_NO, "+com.ibm.dp.common.Constants.TRANS_TYPE_RESTRICTED+", '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TYPE_SHORT+"', "
		+" (SELECT PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DSI.DISTRIBUTOR_ID) ASSIGN_TO, DISTRIBUTOR_ID, CURRENT TIMESTAMP "
		+" FROM DP_STOCK_INVENTORY DSI WHERE DSI.SERIAL_NO=? "
		//+" AND DC_NO=? "
		+" WITH UR "; 
	*/
	
	public static final String INSERT_SHORT_SHIPMENT_RECORDS = "INSERT INTO DP_WRONG_SHIP_DETAIL(SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, DC_NO, STB_STATUS, WRONG_SHIP_TYPE, ASSIGNED_TO, CREATED_BY, CREATED_DATE) "
		+" (SELECT SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, "
		+" (SELECT DC_NO FROM INVOICE_HEADER IH WHERE IH.INV_NO= DSI.INV_NO and DC_NO=? ) DC_NO, "+com.ibm.dp.common.Constants.TRANS_TYPE_RESTRICTED+", '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TYPE_SHORT+"', "
		+" (SELECT PARENT_ACCOUNT from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID = DSI.DISTRIBUTOR_ID and TRANSACTION_TYPE_ID=?) ASSIGN_TO, DISTRIBUTOR_ID, CURRENT TIMESTAMP "
		+" FROM DP_STOCK_INVENTORY DSI WHERE DSI.SERIAL_NO=? )"
		//+" AND DC_NO=? "
		+" WITH UR ";

	/*public static final String 	INSERT_EXTRA_SHIPMENT_RECORDS = "INSERT INTO DP_WRONG_SHIP_DETAIL(SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, DC_NO, STB_STATUS, WRONG_SHIP_TYPE, ASSIGNED_TO, CREATED_BY, CREATED_DATE) "
												+" VALUES(?, ?, ?, CURRENT TIMESTAMP, NULL, ?, ?, "+com.ibm.dp.common.Constants.TRANS_TYPE_RESTRICTED+" , '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TYPE_WRONG+"', (SELECT PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID = ? ), ?, CURRENT TIMESTAMP) WITH UR";
	*/
	public static final String 	INSERT_EXTRA_SHIPMENT_RECORDS = "INSERT INTO DP_WRONG_SHIP_DETAIL(SERIAL_NO, PRODUCT_ID, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, MSISDN, INV_NO, DC_NO, STB_STATUS, WRONG_SHIP_TYPE, ASSIGNED_TO, CREATED_BY, CREATED_DATE) "
		+" VALUES(?, ?, ?, CURRENT TIMESTAMP, NULL, ?, ?, "+com.ibm.dp.common.Constants.TRANS_TYPE_RESTRICTED+" , '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TYPE_WRONG+"', ? , ?, CURRENT TIMESTAMP) WITH UR";

	public static final String UPDATE_CORRECT_STOCK = "UPDATE DP_STOCK_INVENTORY SET MARK_DAMAGED='N', DISTRIBUTOR_PURCHASE_DATE = CURRENT TIMESTAMP WHERE SERIAL_NO = ?  AND DISTRIBUTOR_ID=? AND INV_NO=?  WITH UR ";

	public static final String UPDATE_STATUS_TSM_PENDING = "UPDATE INVOICE_HEADER SET STATUS= '"+com.ibm.dp.common.Constants.WRONG_SHIPMENT_TSM_APPROVAL_STATUS+"', DIST_ACTION_DATE=current_date WHERE INV_NO = ? WITH UR";


	//---------------------- Added by Kundan for STB Flush Out functionality ------------------------------
	/* Commented by Parnika
	 public static final String SQL_VIEW_ERROR_PO_INIT = " SELECT CIRCLE_NAME, DISTRIBUTOR_OLM_ID, DISTRIBUTOR_NAME, TSM_NAME, "+
	" PO_NO, DC_NO,  DC_DATE from ( select distinct PO_NO, DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE , DIST_ID FROM "+
	" DP_ERROR_PO_DETAIL ED group by PO_NO , DC_NO, DC_DATE ,DIST_ID order by DC_DATE DESC ) temp  join "+
	" DPDTH.DP_DIST_DETAILS DD on  DD.DISTRIBUTOR_ID = temp.DIST_ID with ur ";
		End of Comments by Parnika  */


	//added by sugandha changed to view Po error as per TSM transaction type
	public static final String SQL_PO_DETAIL_LIST = "SELECT CIR.CIRCLE_NAME as CIRCLE_NAME, LOG.LOGIN_NAME as DISTRIBUTOR_OLM_ID,DD.account_name as DISTRIBUTOR_NAME,"+ 
						" PARENT.account_name as TSM_NAME,  ED.PO_NO,DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE , SERIAL_NO , (select distinct PRODUCT_NAME from DP_PRODUCT_MASTER PM where PM.PRODUCT_ID =  ED.PRODUCT_ID )as PRODUCT_NAME,"+   
						" case when length(OLD_STB_STATUS) < 3 then (select STATUS_DESCRIPTION from DP_CPE_STATUS_MASTER where char(STATUS_ID) = OLD_STB_STATUS) else case OLD_STB_STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'COL' THEN 'RECEIVED BY DISTRIBUTOR' WHEN 'ERR' THEN 'ERROR IN SENDING TO WH' WHEN 'IDC' THEN 'IN INCOMPLETE DC' WHEN 'MSN' THEN"+ 
						" 'NOT ACCEPTED IN WH' WHEN 'S2W' THEN 'SENT TO WAREHOUSE' else OLD_STB_STATUS end end as STB_STATUS,(select DD_VALUE from DP_CONFIGURATION_DETAILS where ID = ED.CONF_STATUS AND  CONFIG_ID in (select CONFIG_ID from DP_CONFIGURATION_MASTER where CONFIG_NAME = 'CONFLICT_STATUS' )) as"+ 
						" CONF_STATUS FROM DPDTH.VR_ACCOUNT_DETAILS DD, DP_ERROR_PO_DETAIL ED ,VR_CIRCLE_MASTER CIR,VR_LOGIN_MASTER LOG,PO_HEADER PO,DP_BUSINESS_CATEGORY_MASTER CAT,VR_ACCOUNT_DETAILS PARENT,DP_DISTRIBUTOR_MAPPING MAP"+
						" where ED.PO_NO =?  and   DD.ACCOUNT_ID = ED.DIST_ID and DD.CIRcle_id=CIR.circle_id and LOG.Login_id=DD.ACCOUNT_ID and PO.PO_no=ED.PO_NO and PO.CATEGORY_CODE = CAT.CATEGORY_CODE"+
						" and DD.Account_id=MAP.DP_DIST_ID and MAP.TRANSACTION_TYPE_ID = CAT.TRANSACTION_TYPE and MAP.PARENT_ACCOUNT = PARENT.account_id order by ED.PO_NO,SERIAL_NO, DC_DATE DESC with ur ";

	public static final String SQL_SEARCH_STOCK_STB_LIST = " SELECT SI.SERIAL_NO AS SERIAL_NO, PRODUCT_NAME ,   "+
	" 	  (SELECT STATUS_DESCRIPTION  FROM DP_CPE_STATUS_MASTER WHERE STATUS_ID = SI.STATUS ) AS STATUS,  "+
	" 	  case when INV_NO like 'REV-%' then 'REVERSE-PO' else (SELECT PO_NO FROM INVOICE_HEADER WHERE  SI.INV_NO = INV_NO ) end AS PO_NO,   "+
	" 	   case when INV_NO like 'REV-%' then '' else (SELECT value FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID = 2 AND ID =   "+
	" 	   (select PO_STATUS from PO_HEADER where PO_NO = (select PO_NO from INVOICE_HEADER where INV_NO = SI.INV_NO))) end AS PO_STATUS ,   "+
	" 	   case when INV_NO like 'REV-%' then '' else (SELECT DC_NO FROM INVOICE_HEADER WHERE  INV_NO = SI.INV_NO ) end AS DC_NO,   "+
	" 	   case when INV_NO like 'REV-%' then '' else (SELECT DPDTH.DATE_CHAR(DC_DT) FROM INVOICE_HEADER WHERE INV_NO = SI.INV_NO ) end AS DC_DT,  '' as INV_CHANGE_DT , '' as  RECEIVED_ON,  "+
	" 	   case when INV_NO like 'REV-%' then DPDTH.DATE_CHAR(SI.DISTRIBUTOR_PURCHASE_DATE) else (SELECT DPDTH.DATE_CHAR(ACCEPT_DATE) FROM INVOICE_HEADER WHERE INV_NO = SI.INV_NO ) end AS ACCEPT_DATE,  "+
	" 	  DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_STOCK_INVENTORY' as TABLENAME   "+
	" 	  from DP_STOCK_INVENTORY SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM   "+
	" 	  where SI.DISTRIBUTOR_ID = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID   "+
	" 	  AND SERIAL_NO in (?)  AND SI.MARK_DAMAGED in ('N')  "+
	" 	 UNION  "+
	" 	 SELECT SERIAL_NO_COLLECT as SERIAL_NO, PRODUCT_NAME ,  CASE SI.STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'COL' THEN "+   
	"  	 'RECEIVED BY DISTRIBUTOR' WHEN 'ERR' THEN 'ERROR IN SENDING TO WH' WHEN 'IDC' THEN 'IN INCOMPLETE DC' END AS STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT, "+  
	"  	 DPDTH.DATE_CHAR(timestamp_iso(SI.INV_CHANGE_DT)) as INV_CHANGE_DT,   "+
	"  	  DPDTH.DATE_CHAR(timestamp_iso(COLLECTION_DATE)) AS RECEIVED_ON, ' ' AS ACCEPT_DATE, "+   
	"  	 DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_REV_STOCK_INVENTORY' as TABLENAME "+   
	"  	 from DP_REV_STOCK_INVENTORY SI , DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM     "+
	"  	 where SI.CREATED_BY = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID   "+
	"  	 AND SERIAL_NO_COLLECT in (?) AND SI.STATUS in ('COL','ERR') "+
	" 	 UNION  "+
	" 	 SELECT DEFECTIVE_SR_NO as SERIAL_NO, PRODUCT_NAME ,  CASE STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'COL' THEN  "+
	" 	 'RECEIVED BY DISTRIBUTOR' WHEN 'ERR' THEN 'ERROR IN SENDING TO WH' WHEN 'IDC' THEN 'IN INCOMPLETE DC' END AS STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) as INV_CHANGE_DT,  "+
	" 	  ' ' AS RECEIVED_ON, ' ' AS ACCEPT_DATE,  "+
	" 	 DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_REV_INVENTORY_CHANGE' as TABLENAME  "+
	" 	 from DP_REV_INVENTORY_CHANGE SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM   "+
	" 	 where SI.NEW_DIST_D = DD.DISTRIBUTOR_ID  AND SI.DEFECTIVE_PRODUCT_ID = PM.PRODUCT_ID  "+
	" 	 AND DEFECTIVE_SR_NO in (?) AND SI.STATUS in ('REC') AND SI.ERROR_STATUS NOT IN ('ERR') "+
	" 	 UNION  "+
	" 	 SELECT SERIAL_NUMBER as SERIAL_NO, PRODUCT_NAME ,  CASE STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'COL' THEN  "+
	" 	 'RECEIVED BY DISTRIBUTOR' WHEN 'ERR' THEN 'ERROR IN SENDING TO WH' WHEN 'IDC' THEN 'IN INCOMPLETE DC' END AS STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  '' as INV_CHANGE_DT,  "+
	" 	  DPDTH.DATE_CHAR(CREATED_ON) AS RECEIVED_ON, '' AS ACCEPT_DATE,  "+
	" 	 DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_REV_CHURN_INVENTORY' as TABLENAME  "+
	" 	 from DP_REV_CHURN_INVENTORY SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM   "+
	" 	 where SI.CREATED_BY = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID  "+
	" 	 AND SERIAL_NUMBER in (?)  AND SI.STATUS in ('COL','ERR','REC') "+
	" 	 UNION  "+
	" 	 SELECT DISTINCT SERIAL_NO , PRODUCT_NAME, CASE STB_STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'ERR' THEN 'Error in Inventory Change' "+
    "    WHEN 'MSN' THEN 'NOT ACCEPTED IN WH' else STB_STATUS END AS STATUS, '' as PO_NO ,  "+
    "    '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) as INV_CHANGE_DT, "+
    "    DPDTH.DATE_CHAR(CREATED_ON) AS RECEIVED_ON, '' AS ACCEPT_DATE,   "+
    "    DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_ERROR_REV_DETAILS' as TABLENAME "+
    "    from DP_ERROR_REV_DETAILS SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM    "+
    "    where SI.DIST_ID = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID   "+
	" 	 AND SERIAL_NO in (?) "+
	" 	 order by SERIAL_NO with ur ";

    // Release from Error_Rev_Details
	
	public static final String SQL_SELECT_DP_ERROR_REV_DETAIL = " select SERIAL_NO,INV_CHANGE_DATE, OLD_STB_STATUS from "+
		" DP_ERROR_REV_DETAILS a where  INV_CHANGE_DATE = (select min(INV_CHANGE_DATE) from DP_ERROR_REV_DETAILS b where "+
		" b.SERIAL_NO = a.SERIAL_NO  fetch first rows only) AND a.SERIAL_NO = ?  and SERIAL_NO NOT IN ( "+
		" SELECT SERIAL_NO as SERIAL_NO from DP_STOCK_INVENTORY where SERIAL_NO in (?) "+
		" union SELECT SERIAL_NO_COLLECT as SERIAL_NO from DP_REV_STOCK_INVENTORY where  SERIAL_NO_COLLECT IN (?) and status in ('COL','ERR') "+
		" union SELECT IC.DEFECTIVE_SR_NO as SERIAL_NO from DP_REV_INVENTORY_CHANGE IC where IC.DEFECTIVE_SR_NO IN ( ? ) and IC.STATUS = 'REC'  AND IC.ERROR_STATUS NOT IN ('ERR') "+
		" union SELECT SERIAL_NUMBER as SERIAL_NO from DP_REV_CHURN_INVENTORY WHERE SERIAL_NUMBER IN (?) and STATUS in ('REC','COL','ERR')) with ur";

	public static final String SQL_INSERT_DP_ERROR_REV_DETAIL_HIST="INSERT INTO DPDTH.DP_ERROR_REV_DETAILS_HIST(ERROR_ID, SERIAL_NO, PRODUCT_ID, INV_CHANGE_DATE, COLLECTION_ID, DEFECT_ID, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, HIST_DATE) SELECT ERROR_ID, SERIAL_NO, PRODUCT_ID, INV_CHANGE_DATE, COLLECTION_ID, DEFECT_ID, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, current timestamp FROM DPDTH.DP_ERROR_REV_DETAILS WHERE SERIAL_NO IN (?) and INV_CHANGE_DATE = ? with ur ";

	public static final String SQL_UPDATE_DP_REV_INVENTORY_CHANGE="update DP_REV_INVENTORY_CHANGE set ERROR_STATUS = 'DP' where DEFECTIVE_SR_NO = ?  and  date(INV_CHANGE_DATE) = ?  AND ERROR_STATUS  = 'ERR' with ur";

	public static final String SQL_UPDATE_DP_REV_STOCK_INVENTORY="update DP_REV_STOCK_INVENTORY set ERROR_STATUS = 'DP' where SERIAL_NO_COLLECT = ?  and date(INV_CHANGE_DT)  = ?  AND ERROR_STATUS  = 'ERR'  with ur";

	public static final String SQL_DELETE_ERROR_REV_DETAILS="DELETE FROM DPDTH.DP_ERROR_REV_DETAILS WHERE SERIAL_NO IN (?) and  date(INV_CHANGE_DATE)  = ?  with ur ";
	
	// Release from Error_PO_Detail
	public static final String SQL_SELECT_ACTIVE_STB_LIST = " SELECT SERIAL_NO as SERIAL_NO from DP_STOCK_INVENTORY where SERIAL_NO in (?) "+
	" union SELECT SERIAL_NO_COLLECT as SERIAL_NO from DP_REV_STOCK_INVENTORY where  SERIAL_NO_COLLECT IN (?) and status in ('COL','ERR') "+
	" union SELECT IC.DEFECTIVE_SR_NO as SERIAL_NO from DP_REV_INVENTORY_CHANGE IC where IC.DEFECTIVE_SR_NO IN ( ? ) and IC.ERROR_STATUS in ('DP', 'REC') "+ 
	" union SELECT SERIAL_NUMBER as SERIAL_NO from DP_REV_CHURN_INVENTORY WHERE SERIAL_NUMBER IN (?) and STATUS in ('REC','COL','ERR') with ur";

	public static final String SQL_SELECT_ERROR_PO_LIST ="select  SERIAL_NO,PR_NO,PO_NO,DC_NO from DP_ERROR_PO_DETAIL a where "+
	" timestamp(dc_date) = (select timestamp(min(DC_DATE)) from DP_ERROR_PO_DETAIL b where b.SERIAL_NO = a.SERIAL_NO fetch "+
	" first rows only) and  SERIAL_NO = ? with ur";

	public static final String SQL_INSERT_ERROR_PO_DETAILS_HIST="INSERT INTO DPDTH.DP_ERROR_PO_DETAIL_HIST(ERROR_ID, SERIAL_NO, "+
	" PRODUCT_ID, DIST_ID,INV_NO, PR_NO, PO_NO, PO_DATE, DC_NO, DC_DATE, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, "+
	" OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO,"+
	" OLD_REV_DC_DATE,HIST_DATE) SELECT ERROR_ID, SERIAL_NO, PRODUCT_ID, DIST_ID,INV_NO, PR_NO, PO_NO, PO_DATE, DC_NO, DC_DATE, "+
	" CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, "+
	" OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE,current timestamp from DPDTH.DP_ERROR_PO_DETAIL "+
	" WHERE SERIAL_NO IN (?) and PR_NO = ?  with ur";

	public static final String SQL_INSERT_PO_STOCK_INVENTORY = "INSERT INTO DP_STOCK_INVENTORY(PRODUCT_ID,SERIAL_NO,DISTRIBUTOR_ID, "+
	" DISTRIBUTOR_PURCHASE_DATE, INV_NO,MSISDN) SELECT PRODUCT_ID, SERIAL_NO, DIST_ID, CREATED_ON , INV_NO ,'' as MSISDN from "+
	" DP_ERROR_PO_DETAIL where  SERIAL_NO = ? and pr_no = ? fetch first rows only with ur";

	public static final String SQL_DELETE_ERROR_PO_DETAILS="DELETE FROM DPDTH.DP_ERROR_PO_DETAIL WHERE SERIAL_NO IN (?) and  PR_NO = ? with ur";
	
	//------------------------Added By Nazim Hussain starts here------------------------------------------
	public static final String SQL_DELIVERY_CHALLAN_INIT = "select PH.PR_NO,IH.PO_NO, IH.INV_NO, IH.DC_NO, IH.STATUS, "+
	        " IH.DC_DT , case WHEN (select count(1) from DP_ERROR_PO_DETAIL where PO_NO = IH.PO_NO and DC_NO = IH.DC_NO ) > 0 "+
	        " then 1 else 0 end as IS_ERROR from INVOICE_HEADER IH, PO_HEADER PH, DP_PR_HEADER DPH " +
			" where upper(IH.STATUS)='INTRANSIT' AND PH.PO_NO = IH.PO_NO AND DPH.PR_NO = PH.PR_NO" +
			" AND DPH.PR_DIST_ID = ? with ur";

	public static final String SQL_REPORT_DC_INVOICE_HDR = "update INVOICE_HEADER set STATUS=?, DIST_ACTION_DATE=CURRENT_DATE, ACCEPT_DATE=? where INV_NO=? with ur";

	public static final String SQL_ACCEPT_DC_STOCK_INVENT = "update DP_STOCK_INVENTORY set MARK_DAMAGED='N' , DISTRIBUTOR_PURCHASE_DATE = current_timestamp where INV_NO=? with ur";

	/*Commented by Nazim Hussain as was not showing Wrong STB correct
	public static final String SQL_MISSING_STOCK_INIT =
		" SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID" +
		" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME," +
		" DWSD.WRONG_SHIP_TYPE ,CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT , 'NO' as SWAPPED, '' as NEW_DIST_ID," +
		" '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE" +
		" FROM DP_WRONG_SHIP_DETAIL DWSD, DP_PRODUCT_MASTER DPM " +
		" WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL" +
		" WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL EXCEPT SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL" +
		" WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL) AND DWSD.WRONG_SHIP_TYPE='SHORT'" +
		" AND DWSD.ASSIGNED_TO=?" +
	" UNION" +
		" SELECT SHORT.SERIAL_NO , DPM.PRODUCT_ID ,DPM.PRODUCT_NAME, SHORT.DC_NO, SHORT.INV_NO, SHORT.DISTRIBUTOR_ID" +
		" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=SHORT.DISTRIBUTOR_ID) as DIST_NAME," +
		" SHORT.WRONG_SHIP_TYPE, CHAR(DATE(SHORT.CREATED_DATE)) as DIST_CLAIM_DT, 'YES' as SWAPPED," +
		" CHAR(WRONG.DISTRIBUTOR_ID) as NEW_DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS" +
		" WHERE ACCOUNT_ID=WRONG.DISTRIBUTOR_ID) as NEW_DIST_NAME, WRONG.DC_NO as NEW_DC_NO, WRONG.INV_NO" +
		" as NEW_INV_NO, WRONG.CREATED_DATE FROM (SELECT SERIAL_NO, PRODUCT_ID, DC_NO, INV_NO, DISTRIBUTOR_ID," +
		" CREATED_DATE, ASSIGNED_TO, WRONG_SHIP_TYPE FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND" +
		" TSM_DECISION IS NULL) AS SHORT, (SELECT SERIAL_NO, DISTRIBUTOR_ID, DC_NO, INV_NO, CREATED_DATE," +
		" WRONG_SHIP_TYPE  FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL) AS WRONG," +
		" DP_PRODUCT_MASTER DPM WHERE SHORT.SERIAL_NO=WRONG.SERIAL_NO AND SHORT.PRODUCT_ID=DPM.PRODUCT_ID" +
		" AND SHORT.ASSIGNED_TO=?" +
	" UNION" +
		" SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID" +
		" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME," +
		" DWSD.WRONG_SHIP_TYPE, CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT, 'NO' as SWAPPED, '' as NEW_DIST_ID," +
		" '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE FROM DP_WRONG_SHIP_DETAIL DWSD," +
		" DP_PRODUCT_MASTER DPM WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO" +
		" FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL EXCEPT SELECT SERIAL_NO" +
		" FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL)" +
		" AND DWSD.WRONG_SHIP_TYPE='WRONG' AND DWSD.ASSIGNED_TO=? WITH UR ";
	*/
	//Modified query to show Wrong STB correct
	//Commented by Nazim Hussain to get Inter-Circle & Different TSM SWAP case data
	/*
	public static final String SQL_MISSING_STOCK_INIT =
					"SELECT * FROM" +
					"(SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID" +
					" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME," +
					" DWSD.WRONG_SHIP_TYPE ,CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT , 'NO' as SWAPPED, '' as NEW_DIST_ID," +
					" '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE" +
					" FROM DP_WRONG_SHIP_DETAIL DWSD, DP_PRODUCT_MASTER DPM" +
					" WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL" +
					" WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL AND ASSIGNED_TO=?" +
					" EXCEPT SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL" +
					" WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL AND ASSIGNED_TO=?) AND DWSD.WRONG_SHIP_TYPE='SHORT'" +
					" AND DWSD.ASSIGNED_TO=?" +
			" UNION" +
					" SELECT SHORT.SERIAL_NO , DPM.PRODUCT_ID ,DPM.PRODUCT_NAME, SHORT.DC_NO, SHORT.INV_NO, SHORT.DISTRIBUTOR_ID" +
					" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=SHORT.DISTRIBUTOR_ID) as DIST_NAME," +
					" SHORT.WRONG_SHIP_TYPE, CHAR(DATE(SHORT.CREATED_DATE)) as DIST_CLAIM_DT, 'YES' as SWAPPED," +
					" CHAR(WRONG.DISTRIBUTOR_ID) as NEW_DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS" +
					" WHERE ACCOUNT_ID=WRONG.DISTRIBUTOR_ID) as NEW_DIST_NAME, WRONG.DC_NO as NEW_DC_NO, WRONG.INV_NO" +
					" as NEW_INV_NO, WRONG.CREATED_DATE" +
					" FROM (SELECT SERIAL_NO, PRODUCT_ID, DC_NO, INV_NO, DISTRIBUTOR_ID,CREATED_DATE, ASSIGNED_TO, WRONG_SHIP_TYPE" +
					" FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL) AS SHORT," +
					" (SELECT SERIAL_NO, DISTRIBUTOR_ID, DC_NO, INV_NO, CREATED_DATE, WRONG_SHIP_TYPE, ASSIGNED_TO" +
					" FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL) AS WRONG," +
					" DP_PRODUCT_MASTER DPM WHERE SHORT.SERIAL_NO=WRONG.SERIAL_NO AND SHORT.PRODUCT_ID=DPM.PRODUCT_ID" +
					" AND SHORT.ASSIGNED_TO=? AND WRONG.ASSIGNED_TO=?" +
					" DP_PRODUCT_MASTER DPM WHERE SHORT.SERIAL_NO=WRONG.SERIAL_NO AND SHORT.PRODUCT_ID=DPM.PRODUCT_ID AND (SHORT.ASSIGNED_TO=? or WRONG.ASSIGNED_TO=?)" +		
			" UNION" +
					" SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID" +
					" as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME," +
					" DWSD.WRONG_SHIP_TYPE, CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT, 'NO' as SWAPPED, '' as NEW_DIST_ID," +
					" '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE FROM DP_WRONG_SHIP_DETAIL DWSD," +
					" DP_PRODUCT_MASTER DPM WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO" +
					" FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL AND ASSIGNED_TO=?" +
					" EXCEPT SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL" +
					" AND ASSIGNED_TO=?) AND DWSD.WRONG_SHIP_TYPE='WRONG' AND DWSD.ASSIGNED_TO=?)" +
					" records where records.INV_NO=? WITH UR";
	*/
	//Added by Nazim Hussain to get Inter-Circle & Different TSM SWAP case data
	public static final String SQL_MISSING_STOCK_INIT =
		"SELECT * FROM (SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME, DWSD.WRONG_SHIP_TYPE ,CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT ," +
		" 'NO' as SWAPPED, '' as NEW_DIST_ID, '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE FROM DP_WRONG_SHIP_DETAIL DWSD, DP_PRODUCT_MASTER DPM WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL AND ASSIGNED_TO=? EXCEPT SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL" +
		" WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL) AND DWSD.WRONG_SHIP_TYPE='SHORT' AND DWSD.ASSIGNED_TO=? UNION" +
		" SELECT SHORT.SERIAL_NO , DPM.PRODUCT_ID ,DPM.PRODUCT_NAME, SHORT.DC_NO, SHORT.INV_NO, SHORT.DISTRIBUTOR_ID as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=SHORT.DISTRIBUTOR_ID) as DIST_NAME, SHORT.WRONG_SHIP_TYPE, CHAR(DATE(SHORT.CREATED_DATE)) as DIST_CLAIM_DT, 'YES' as SWAPPED, CHAR(WRONG.DISTRIBUTOR_ID) as NEW_DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=WRONG.DISTRIBUTOR_ID)" +
		" as NEW_DIST_NAME, WRONG.DC_NO as NEW_DC_NO, WRONG.INV_NO as NEW_INV_NO, WRONG.CREATED_DATE FROM (SELECT SERIAL_NO, PRODUCT_ID, DC_NO, INV_NO, DISTRIBUTOR_ID,CREATED_DATE, ASSIGNED_TO, WRONG_SHIP_TYPE FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL) AS SHORT, (SELECT SERIAL_NO, PRODUCT_ID, DC_NO, INV_NO, DISTRIBUTOR_ID,CREATED_DATE, ASSIGNED_TO, WRONG_SHIP_TYPE FROM DP_WRONG_SHIP_DETAIL WHERE" +
		" WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL) AS WRONG, DP_PRODUCT_MASTER DPM WHERE SHORT.SERIAL_NO=WRONG.SERIAL_NO AND (SHORT.ASSIGNED_TO=? OR WRONG.ASSIGNED_TO=?) AND SHORT.PRODUCT_ID=DPM.PRODUCT_ID UNION" +
		" SELECT DWSD.SERIAL_NO, DWSD.PRODUCT_ID, DPM.PRODUCT_NAME, DWSD.DC_NO, DWSD.INV_NO, DWSD.DISTRIBUTOR_ID as DIST_ID, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID=DWSD.DISTRIBUTOR_ID) as DIST_NAME, DWSD.WRONG_SHIP_TYPE, CHAR(DATE(DWSD.CREATED_DATE)) as DIST_CLAIM_DT, 'NO' as SWAPPED, '' as NEW_DIST_ID, '' as NEW_DIST_NAME, '' as NEW_DC_NO , ''  as NEW_INV_NO, DWSD.CREATED_DATE FROM DP_WRONG_SHIP_DETAIL DWSD," +
		" DP_PRODUCT_MASTER DPM WHERE DWSD.PRODUCT_ID=DPM.PRODUCT_ID AND SERIAL_NO IN (SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='WRONG' AND TSM_DECISION IS NULL AND ASSIGNED_TO=? EXCEPT SELECT SERIAL_NO FROM DP_WRONG_SHIP_DETAIL WHERE WRONG_SHIP_TYPE='SHORT' AND TSM_DECISION IS NULL) AND DWSD.WRONG_SHIP_TYPE='WRONG' AND DWSD.ASSIGNED_TO=?) records where records.INV_NO=? WITH UR";
	
	public static final String SQL_STOCK_STATUS_LIST = "select STOCK_STATUS_ID, STOCK_STATUS_NAME from DP_STOCK_STATUS_MASTER " +
														" where STOCK_STATUS_ID not in ('SWP', 'WS') WITH UR";

	/*
	 * Commented by Nazim Hussain to process inter circle wrong shipment
	 * public static final String SQL_WRONG_SHIP_DETAIL_UPD = "update DP_WRONG_SHIP_DETAIL set TSM_DECISION=?, UPDATED_BY=?, UPDATED_DATE=CURRENT_TIMESTAMP" +
					" where SERIAL_NO=? and PRODUCT_ID=? WITH UR";*/
	//Added by Nazim Hussain to process inter circle wrong shipment
	public static final String SQL_WRONG_SHIP_DETAIL_UPD = "update DP_WRONG_SHIP_DETAIL set TSM_DECISION=?, UPDATED_BY=?, UPDATED_DATE=CURRENT_TIMESTAMP" +
	" where SERIAL_NO=? WITH UR";

	public static final String SQL_STOCK_INVENT_UPD = "update DP_STOCK_INVENTORY set MARK_DAMAGED='N', DISTRIBUTOR_ID=?, DISTRIBUTOR_PURCHASE_DATE=current_timestamp, INV_NO=?, PRODUCT_ID=(SELECT PRODUCT_ID FROM DP_PRODUCT_MASTER WHERE PRODUCT_CATEGORY=(select PRODUCT_CATEGORY from DP_PRODUCT_MASTER where PRODUCT_ID=?)" +
						" and PRODUCT_TYPE= (select PRODUCT_TYPE from DP_PRODUCT_MASTER where PRODUCT_ID=?) and CIRCLE_ID=(select CIRCLE_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID=?)) where SERIAL_NO=? and PRODUCT_ID=? and DISTRIBUTOR_ID=? ";

	public static final String SQL_STOCK_INVENT_CANCEL_UPD = "update DP_STOCK_INVENTORY set MARK_DAMAGED='N',DISTRIBUTOR_PURCHASE_DATE = current_timestamp where SERIAL_NO=? and PRODUCT_ID=? and DISTRIBUTOR_ID=? WITH UR";

	public static final String SQL_STOCK_INVENT_DELETE = "DELETE FROM DP_STOCK_INVENTORY where SERIAL_NO=? and PRODUCT_ID=? and DISTRIBUTOR_ID=? WITH UR";

	public static final String SQL_STOCK_INVENT_INSERT = "insert into DP_STOCK_INVENTORY" +
			" (PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, INV_NO, STATUS)" +
			" values(?, ?, 'N', ?, current_timestamp , ?, ?) WITH UR";

	public static final String SQL_DST_DISTRIBUTOR_LIST = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS" +
														" where ACCOUNT_LEVEL = 6 and circle_id = ? and ZONE_ID = ? order by ACCOUNT_NAME WITH UR";

	public static final String SQL_DST_PRODUCT_LIST = "select dpm.PRODUCT_ID, dpm.PRODUCT_NAME" +
														" from DP_PRODUCT_MASTER dpm, DP_BUSINESS_CATEGORY_MASTER cat" +
											" where dpm.cm_status = 'A' and dpm.circle_id = ? " +
														" and dpm.category_code = cat.category_code and cat.serially = 'Y' order by PRODUCT_NAME WITH UR";

	public static final String SQL_DST_STOCK_AVAIL = "select COUNT(PRODUCT_ID) as STOCK_AVAIL" +
													" from DP_STOCK_INVENTORY" +
													" where DISTRIBUTOR_ID=? and PRODUCT_ID=? and FSE_ID is null and RETAILER_ID is null  and MARK_DAMAGED = 'N' WITH UR";

	public static final String SQL_DST_STOCK_INSERT = "INSERT into DP_DIST_STOCK_TRANSFER(REQ_ID, FROM_DIST_ID, TO_DIST_ID," +
													" PRODUCT_ID, REQ_TRANSFER_QTY, STATUS, CREATED_BY, CREATED_DATE)" +
													" values(CHAR(next value for SEQ_DP_DIST_STOCK_TRANSFER),?,?,?,?,?,?,?) WITH UR";

	public static final String SQL_OPEN_STOCK_INFO = "select distinct osd1.DIST_ID, osd2.PRODUCT_ID, osd2.CLOSING_STOCK" +
													" from DP_OPEN_STOCK_DTL osd1 left outer join DP_OPEN_STOCK_DTL osd2" +
													" on osd1.DIST_ID=osd2.DIST_ID and osd2.ORACLE_PRODUCT_CODE=?" +
													" where osd1.DIST_ORACLE_LOCATOR_CODE=? WITH UR";

	public static final String SQL_OPEN_STOCK_ERROR_CODES = "SELECT ID, ERROR_CODE, ERROR_DESP FROM DP_OPEN_STOCK_ERROR_CODE WITH UR";

	public static final String SQL_OPEN_STOCK_ERROR_CODE = "SELECT ID, ERROR_CODE, ERROR_DESP FROM DP_OPEN_STOCK_ERROR_CODE where ID=? WITH UR";

//	public static final String SQL_OPEN_STOCK_WS_UPDATE = "update DP_OPEN_STOCK_DTL " +
//														" set SALE= ((SELECT SALE FROM DP_OPEN_STOCK_DTL where DIST_ID=?" +
//														" and PRODUCT_ID=?)+?)," +
//														" CLOSING_STOCK=((SELECT CLOSING_STOCK FROM DP_OPEN_STOCK_DTL where DIST_ID=?" +
//														" and PRODUCT_ID=?)-?)" +
//														" where DIST_ID=? and PRODUCT_ID=? WITH UR";
	public static final String SQL_OPEN_STOCK_UPDATE = "update DP_OPEN_STOCK_DTL " +
														" set SALE= ((SELECT SALE FROM DP_OPEN_STOCK_DTL where DIST_ID=?" +
														" and PRODUCT_ID=?)+?)," +
														" CLOSING_STOCK=((SELECT CLOSING_STOCK FROM DP_OPEN_STOCK_DTL where DIST_ID=?" +
														" and PRODUCT_ID=?)-?), LAST_UPDATE_DATE=CURRENT_DATE" +
														" where DIST_ID=? and PRODUCT_ID=? WITH UR";

	public static final String SQL_OPEN_STOCK_TSM = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS " +
													" where ACCOUNT_LEVEL=? and CIRCLE_ID=?" +
													" order by ACCOUNT_NAME with ur";

	public static final String SQL_OPEN_STOCK_DIST = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS " +
													" where PARENT_ACCOUNT=? " +
													" order by ACCOUNT_NAME with ur";

//	Commneted by Nazim Hussain as Non Serialized Stock Product will be same as Serialized stock
//	public static final String SQL_OPEN_STOCK_PROD = "select PRODUCT_ID, PRODUCT_NAME from DP_OPEN_STOCK_PRODUCT_MASTER" +
//													" where STATUS='A' order by PRODUCT_NAME WITH UR";
	public static final String SQL_OPEN_STOCK_PROD = "select PRODUCT_ID, PRODUCT_NAME from DP_PRODUCT_MASTER where CM_STATUS='A' and CIRCLE_ID=? order by PRODUCT_NAME WITH UR";


	public static final String SQL_OPEN_STOCK_BAL = "SELECT CLOSING_STOCK FROM DP_OPEN_STOCK_DTL where DIST_ID=? and PRODUCT_ID=? with ur";

	public static final String SQL_STOCK_DECL_DP = "select count(DSI.PRODUCT_ID) DP_STOCK" +
								" from DP_STOCK_INVENTORY DSI, VR_ACCOUNT_DETAILS VAD, DP_PRODUCT_MASTER DPM" +
								" where DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID AND DSI.PRODUCT_ID=DPM.PRODUCT_ID " +
								" AND DSI.DISTRIBUTOR_ID=? and DSI.PRODUCT_ID=?";

//	public static final String SQL_STOCK_DECL_OPEN = "SELECT SUM(CLOSING_STOCK) OPEN_STOCK" +
//								" FROM DP_OPEN_STOCK_DTL  DOSD, DP_OPEN_STOCK_PRODUCT_MASTER DOSPM" +
//								" WHERE DOSD.DIST_ID =?  AND  DOSD.PRODUCT_ID = DOSPM.PRODUCT_ID AND DOSPM.PRODUCT_ID IN" +
//								" (SELECT RCV_PRODUCT_ID FROM DP_CPE_RCV_PRODUCT_MAPPING WHERE CPE_PRODUCT_ID =?) WITH UR ";

	public static final String SQL_STOCK_DECL_OPEN = "select CLOSING_STOCK OPEN_STOCK FROM DP_OPEN_STOCK_DTL WHERE DIST_ID =? and PRODUCT_ID=? with ur";

	public static final String SQL_OPEN_STOCK_LOG = "INSERT INTO DP_OPEN_STOCK_CRM_DEPLETE" +
								" (DIST_LOCATOR_CODE, ORACLE_PRODUCT_CODE, QUANTITY, STATUS, CREATED_DATE)" +
								" VALUES(?, ?, ?, ?, CURRENT_DATE)";

	public static final String SQL_HIER_ACCEPT = "select  HTD.TR_NO, CASE HTH.TRANS_TYPE WHEN 'FSE' THEN 'FSE TRANSFER'" +
								" ELSE 'RETAILER TRANSFER' END REQUEST_TYPE, CASE HTH.TRANS_SUB_TYPE WHEN 'WR'" +
								" THEN 'WITH RETAILER' WHEN 'WOR' THEN 'WITHOUT RETAILER' ELSE '' END REQUEST_SUB_TYPE," +
								" (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=HTH.CREATED_BY) REQUEST_BY," +
								" TO_CHAR(HTH.CREATED_ON, 'dd/MM/yyyy') REQUEST_ON, (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=HTD.TRANSFER_BY) TRANSFER_BY," +
								" TO_CHAR(HTD.TRANSFER_ON, 'dd/MM/yyyy') TRANSFER_ON, count(HTD.TR_NO) TRNS_QTY, HTD.TRANSFER_BY TRNS_ID" +
								" ,HTD.TRANSFER_ON TRNS_TIME "+
								" from DP_HEIRARCHY_TRNS_HDR HTH, DP_HEIRARCHY_TRNS_DTL HTD" +
								" where HTH.TR_NO=HTD.TR_NO and TO_DIST=? and HTD.STATUS=?" +
								" group by HTH.CREATED_BY, HTD.TR_NO, HTH.TRANS_TYPE,HTH.TRANS_SUB_TYPE, TO_DIST,HTH.CREATED_ON," +
								" HTD.TRANSFER_BY,HTD.TRANSFER_ON with ur";

	public static final String SQL_HIER_ACCEPT_VIEW = "select b.TR_NO as TR_NO , a.TRNS_ACCOUNT_ID as account_id , a.TRANSFER_BY as TRANSFER_BY , a.TRANSFER_ON TRNS_TIME, " +
									"(select level_name from VR_ACCOUNT_DETAILS act,VR_ACCOUNT_LEVEL_MASTER levelmst  where act.ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.account_level=levelmst.level_id) as ROLE," +
									" (select Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.TRNS_ACCOUNT_ID) as account_name," +
									" (select contact_name from VR_ACCOUNT_DETAILS act where ACCOUNT_ID=a.TRNS_ACCOUNT_ID ) as contact_name," +
									" (select Mobile_number from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.TRNS_ACCOUNT_ID) as Mobile_number," +
									" (select zone_name from VR_ACCOUNT_DETAILS act,DP_ZONE_MASTER zonemst where ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.zone_id=zonemst.zone_id) as zone," +
									" (select city_name from VR_ACCOUNT_DETAILS act,VR_CITY_MASTER citymst where ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.city_id=citymst.city_id) as city" +
									" from  DP_HEIRARCHY_TRNS_DTL a,DP_HEIRARCHY_TRNS_HDR b" +
									" where a.TR_NO=b.TR_NO and b.TR_NO=? and TO_DIST=? and TRANSFER_BY=? AND STATUS=? AND a.TRANSFER_ON=? with ur";


	public static final String SQL_HIER_ACCEPT_VIEW_ALL = "select b.TR_NO as TR_NO ,a.TRNS_ACCOUNT_ID as account_id,  a.TRANSFER_BY as TRANSFER_BY , a.TRANSFER_ON TRNS_TIME, " +
									"(select level_name from VR_ACCOUNT_DETAILS act,VR_ACCOUNT_LEVEL_MASTER levelmst  where act.ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.account_level=levelmst.level_id) as ROLE," +
									" (select Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.TRNS_ACCOUNT_ID) as account_name," +
									" (select contact_name from VR_ACCOUNT_DETAILS act where ACCOUNT_ID=a.TRNS_ACCOUNT_ID ) as contact_name," +
									" (select Mobile_number from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.TRNS_ACCOUNT_ID) as Mobile_number," +
									" (select zone_name from VR_ACCOUNT_DETAILS act,DP_ZONE_MASTER zonemst where ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.zone_id=zonemst.zone_id) as zone," +
									" (select city_name from VR_ACCOUNT_DETAILS act,VR_CITY_MASTER citymst where ACCOUNT_ID=a.TRNS_ACCOUNT_ID and act.city_id=citymst.city_id) as city" +
									" from  DP_HEIRARCHY_TRNS_DTL a,DP_HEIRARCHY_TRNS_HDR b" +
									" where a.TR_NO=b.TR_NO and b.TR_NO=? with ur";




	public static final String SQL_HIER_ACCEPT_REQ_DTL = "select H.TRANS_TYPE, D.TO_FSE, D.TRNS_ACCOUNT_ID from DP_HEIRARCHY_TRNS_HDR H, DP_HEIRARCHY_TRNS_DTL D" +
												" where H.TR_NO=? and H.TR_NO=D.TR_NO and STATUS=? and D.TO_DIST=? and D.TRANSFER_BY=? and D.TRANSFER_ON=? with ur";

	public static final String SQL_HIER_ACCOUNT_UPD = "update VR_ACCOUNT_DETAILS set PARENT_ACCOUNT=? where ACCOUNT_ID=? with ur";

	public static final String SQL_HIER_ACCEPT_DTL_UPD = "update DP_HEIRARCHY_TRNS_DTL set STATUS=?, ACCEPTED_ON = current_Timestamp" +
									" where TR_NO=? and TO_DIST=? and STATUS=? and TRANSFER_BY=? and TRANSFER_ON=? with ur";

	public static final String SQL_STOCK_DETAILS_FSE = "select count(a.SERIAL_NO) as stock,c.ACCOUNT_NAME,b.PRODUCT_NAME ,c.ACCOUNT_LEVEL "
												+" from DP_STOCK_INVENTORY a ,DP_PRODUCT_MASTER b ,VR_ACCOUNT_DETAILS c "
												+" where a.PRODUCT_ID=b.PRODUCT_ID "
												+" and a.FSE_ID=c.ACCOUNT_ID and a.FSE_ID=?"
												+" group by c.ACCOUNT_NAME,b.PRODUCT_NAME ,c.ACCOUNT_LEVEL "
												+" union  "
												+" select count(a.SERIAL_NO) as stock,c.ACCOUNT_NAME,b.PRODUCT_NAME,c.ACCOUNT_LEVEL  "
												+" from DP_STOCK_INVENTORY a ,DP_PRODUCT_MASTER b ,VR_ACCOUNT_DETAILS c  "
												+" where a.PRODUCT_ID=b.PRODUCT_ID  "
												+" and a.RETAILER_ID=c.ACCOUNT_ID  "
												+" and a.RETAILER_ID is not null  "
												+" and a.RETAILER_ID in(select account_id from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=?)  "
												+" group by c.ACCOUNT_NAME,b.PRODUCT_NAME,c.ACCOUNT_LEVEL with ur";

	public static final String SQL_STOCK_DETAILS_RET ="select count(a.SERIAL_NO) as stock,c.ACCOUNT_NAME,b.PRODUCT_NAME,c.ACCOUNT_LEVEL "
													+" from DP_STOCK_INVENTORY a ,DP_PRODUCT_MASTER b ,VR_ACCOUNT_DETAILS c "
													+" where a.PRODUCT_ID=b.PRODUCT_ID "
													+" and a.RETAILER_ID=c.ACCOUNT_ID "
													+" and a.RETAILER_ID is not null "
													+" and a.RETAILER_ID=? "
													+" group by c.ACCOUNT_NAME,b.PRODUCT_NAME,c.ACCOUNT_LEVEL";


	// Change by Naveen to stopn raising request of any FSE whose any ret. is in pending queue for transfering
	//public static final String GET_REV_FSE_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, (select count(ACCOUNT_ID) from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=AD.ACCOUNT_ID) RET_NO " +
										//" , ( select count(ACCOUNT_ID)  from DP_HEIRARCHY_TRNS_DTL a, VR_ACCOUNT_DETAILS b where PARENT_ACCOUNT=AD.ACCOUNT_ID "+
										//" and b.ACCOUNT_ID in(a.TRNS_ACCOUNT_ID) and a.STATUS !='ACPT' "+
										//" )countPending "+
										//" from VR_ACCOUNT_DETAILS AD ,VR_LOGIN_MASTER LM where LM.LOGIN_ID = AD.ACCOUNT_ID and AD.IS_DISABLE='N' AND  (LM.STATUS='A' OR LM.STATUS is null) AND  AD.PARENT_ACCOUNT=? and ACCOUNT_ID not in (select HD.TRNS_ACCOUNT_ID from DP_HEIRARCHY_TRNS_HDR HH, DP_HEIRARCHY_TRNS_DTL HD" +
										//" where HH.TR_NO=HD.TR_NO and HH.FROM_DIST=? and HD.STATUS!='ACPT' and HH.TRANS_TYPE='FSE') with ur";
	
	// added by sugandha to get all FSE irrespective of whether status is active or inactive or null.
	public static final String GET_HIER_FSE_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, (select count(ACCOUNT_ID) from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=AD.ACCOUNT_ID) RET_NO " +
	" , ( select count(ACCOUNT_ID)  from DP_HEIRARCHY_TRNS_DTL a, VR_ACCOUNT_DETAILS b where PARENT_ACCOUNT=AD.ACCOUNT_ID "+
	" and b.ACCOUNT_ID in(a.TRNS_ACCOUNT_ID) and a.STATUS !='ACPT' "+
	" )countPending "+
	" from VR_ACCOUNT_DETAILS AD ,VR_LOGIN_MASTER LM where LM.LOGIN_ID = AD.ACCOUNT_ID and AD.IS_DISABLE='N' AND  (LM.STATUS='A' OR LM.STATUS is null OR LM.STATUS='I') AND  AD.PARENT_ACCOUNT=? and ACCOUNT_ID not in (select HD.TRNS_ACCOUNT_ID from DP_HEIRARCHY_TRNS_HDR HH, DP_HEIRARCHY_TRNS_DTL HD" +
	" where HH.TR_NO=HD.TR_NO and HH.FROM_DIST=? and HD.STATUS!='ACPT' and HH.TRANS_TYPE='FSE') with ur";


	//public static final String GET_REV_RETAILER_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, (select count(ACCOUNT_ID) from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=AD.ACCOUNT_ID) RET_NO" +
										//" from VR_ACCOUNT_DETAILS AD ,VR_LOGIN_MASTER LM where LM.LOGIN_ID = AD.ACCOUNT_ID and AD.IS_DISABLE='N' AND  (LM.STATUS='A' OR LM.STATUS is null) AND  AD.PARENT_ACCOUNT=? and ACCOUNT_ID not in (select HD.TRNS_ACCOUNT_ID from DP_HEIRARCHY_TRNS_HDR HH, DP_HEIRARCHY_TRNS_DTL HD" +
										//" where HH.TR_NO=HD.TR_NO and HH.FROM_FSE=? and HD.STATUS!='ACPT' and HH.TRANS_TYPE='RET') with ur";
	
//	 added by sugandha to get all Retailers irrespective of  whether status is active or inactive or null.
	public static final String GET_HIER_RETAILER_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, (select count(ACCOUNT_ID) from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=AD.ACCOUNT_ID) RET_NO" +
	" from VR_ACCOUNT_DETAILS AD ,VR_LOGIN_MASTER LM where LM.LOGIN_ID = AD.ACCOUNT_ID and AD.IS_DISABLE='N' AND  (LM.STATUS='A' OR LM.STATUS is null OR LM.STATUS='I') AND  AD.PARENT_ACCOUNT=? and ACCOUNT_ID not in (select HD.TRNS_ACCOUNT_ID from DP_HEIRARCHY_TRNS_HDR HH, DP_HEIRARCHY_TRNS_DTL HD" +
	" where HH.TR_NO=HD.TR_NO and HH.FROM_FSE=? and HD.STATUS!='ACPT' and HH.TRANS_TYPE='RET') with ur";

	public static final String SQL_HIER_FSE_STOCK_UPD = "update DP_STOCK_INVENTORY set DISTRIBUTOR_ID=? where FSE_ID=? with ur";

	public static final String SQL_HIER_RET_STOCK_UPD = "update DP_STOCK_INVENTORY set DISTRIBUTOR_ID=?, FSE_ID=? where RETAILER_ID=? with ur";

	//---------Added by Nazim Hussain ends here---------------------------------------------------------------

		//Begin Block Added by Mohammad Aslam
	public static final String GET_DP_QUANTITY = "SELECT COUNT(*) FROM DP_STOCK_INVENTORY WHERE PRODUCT_ID = ? AND DISTRIBUTOR_ID = ? AND MARK_DAMAGED = 'N'  WITH UR";
	public static final String SQL_SELECT_DISTRIBUTORS_2 = "SELECT ACCOUNT_ID, ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE CIRCLE_ID = ? AND ACCOUNT_LEVEL = 6  order by ACCOUNT_NAME WITH UR";
	public static final String SQL_SELECT_DISTRIBUTORS_5 = "SELECT ACCOUNT_ID, ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT= ?  order by ACCOUNT_NAME WITH UR ";
	public static final String SQL_SELECT_DISTRIBUTORS_DETAILS_2 = "SELECT VAD.ACCOUNT_NAME, DPM.PRODUCT_NAME, DSD.CLOSING_STOCK, DSD.COMMENTS, DSD.CREATED_DATE, DSD.DP_STOCK, DSD.OPEN_STOCK" +
							" FROM DP_DIST_STOCK_DECLARE DSD, DP_PRODUCT_MASTER DPM, VR_ACCOUNT_DETAILS VAD" +
							" WHERE DPM.PRODUCT_ID = DSD.PRODUCT_ID AND VAD.ACCOUNT_ID = DSD.DIST_ID AND VAD.CIRCLE_ID=?" +
							" order by VAD.ACCOUNT_NAME, DSD.CREATED_DATE DESC, DPM.PRODUCT_NAME ASC WITH UR";

	public static final String SQL_SELECT_DISTRIBUTORS_DETAILS_5 = "SELECT VAD.ACCOUNT_NAME, DPM.PRODUCT_NAME, DSD.CLOSING_STOCK, DSD.COMMENTS, DSD.CREATED_DATE, DSD.DP_STOCK, DSD.OPEN_STOCK"
							+ " FROM DP_DIST_STOCK_DECLARE DSD, DP_PRODUCT_MASTER DPM, VR_ACCOUNT_DETAILS VAD"
							+ " WHERE DPM.PRODUCT_ID = DSD.PRODUCT_ID AND VAD.ACCOUNT_ID = DSD.DIST_ID AND VAD.PARENT_ACCOUNT= ?" +
							" order by ACCOUNT_NAME, DSD.CREATED_DATE DESC, DPM.PRODUCT_NAME ASC WITH UR";

	public static final String SQL_SELECT_DISTRIBUTORS_DETAILS = "SELECT VAD.ACCOUNT_NAME, DPM.PRODUCT_NAME, DSD.CLOSING_STOCK, DSD.COMMENTS, DSD.CREATED_DATE, DSD.DP_STOCK, DSD.OPEN_STOCK" +
							" FROM DP_DIST_STOCK_DECLARE DSD, DP_PRODUCT_MASTER DPM, VR_ACCOUNT_DETAILS VAD" +
							" WHERE DPM.PRODUCT_ID = DSD.PRODUCT_ID AND VAD.ACCOUNT_ID = DSD.DIST_ID AND DSD.DIST_ID =? AND VAD.CIRCLE_ID=?" +
							" ORDER BY VAD.ACCOUNT_NAME, DSD.CREATED_DATE DESC, DPM.PRODUCT_NAME ASC WITH UR";
	//End Block Added by Mohammad Aslam

	// Added by Arvind
	public static final String SQL__INSERT_STOCK_DECL="INSERT INTO DP_DIST_STOCK_DECLARE  Values(?,?,?,?,current timestamp,?,?) with ur";
	public static final String SQL__GET_Prod_ID_NAME="SELECT  PRODUCT_ID, PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE CM_STATUS = 'A' and CIRCLE_ID = ? with ur";
	public static final String SQL__GET_DIST="SELECT DDST.FROM_DIST_ID, VAD.ACCOUNT_NAME FROM DP_DIST_STOCK_TRANSFER DDST, VR_ACCOUNT_DETAILS VAD WHERE DDST.TO_DIST_ID = ? AND DDST.FROM_DIST_ID = VAD.ACCOUNT_ID AND STATUS ='TRANSFER' WITH UR";
	public static final String SQL__GET_DCNO="SELECT DC_NO FROM DP_DIST_STOCK_TRANSFER WHERE FROM_DIST_ID = ? AND TO_DIST_ID = ? AND STATUS = 'TRANSFER' WITH UR ";
	public static final String SQL__GET_Trans_Details="";
	public static final String SQL__GET_Trans_Product_Details="";
	public static final String SQL__GET_TransferForm_DCNo_Details="SELECT DISTINCT DDST.FROM_DIST_ID, VAD.ACCOUNT_NAME as FROM_DIST_NAME, DDST.DC_NO, DDST.DC_DATE "
                                                                   +" FROM DP_DIST_STOCK_TRANSFER DDST, VR_ACCOUNT_DETAILS VAD "
                                                                   +" WHERE DDST.TO_DIST_ID = ? AND VAD.ACCOUNT_ID = DDST.FROM_DIST_ID "
                                                                    +" AND DDST.STATUS = 'TRANSFER' WITH UR";

	public static final String SQL__GET_All_SerialNo_ProdName="SELECT SERIAL_NO,DPM.PRODUCT_NAME ,DPM.PRODUCT_ID FROM DP_DDST_SERIAL_NO DDSN, DP_PRODUCT_MASTER DPM WHERE DC_NO = ? AND DPM.PRODUCT_ID = DDSN.PRODUCT_ID AND ACTION = 'INTRANSIT' WITH UR ";

	public static final String SQL__UPDATE_STATUS_STOCK_ACCEPT="UPDATE DP_DIST_STOCK_TRANSFER SET STATUS ='RECEIVED',UPDATED_BY= ? , UPDATED_DATE=CURRENT TIMESTAMP WHERE DC_NO = ? AND STATUS ='TRANSFER' with ur";
	public static final String SQL__UPDATE_ACTION_STOCK_ACCEPT="UPDATE DP_DDST_SERIAL_NO SET ACTION ='ACCEPTED' WHERE DC_NO = ? with ur";
	public static final String SQL__UPDATE_DIST_ID_STOCK_ACCEPT="UPDATE DP_STOCK_INVENTORY SET DISTRIBUTOR_ID = ? , DISTRIBUTOR_PURCHASE_DATE = CURRENT TIMESTAMP, MARK_DAMAGED = 'N' WHERE SERIAL_NO = ? AND PRODUCT_ID = ? with ur";
	public static final String SQL__FETCH_SERIALNO_PRODID_STOCK_ACCEPT="SELECT SERIAL_NO,DPM.PRODUCT_ID FROM DP_DDST_SERIAL_NO DDSN, DP_PRODUCT_MASTER DPM WHERE DC_NO = ? AND DPM.PRODUCT_ID = DDSN.PRODUCT_ID AND ACTION = 'INTRANSIT' WITH UR ";
	// End by Arvind


	// Added by harbans
	public static final String SQL_DC_STOCK_ALL_SERIALS_NO = "SELECT SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME "
															+" FROM DP_STOCK_INVENTORY  DSI WHERE DSI.INV_NO= ? AND MARK_DAMAGED='I' "+
															"  with ur	";
	// End by harbans


	// Added by Shilpa
	/*public static final String SQL_INVOICE_ALL_SERIALS_NO = "SELECT SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME "
															+" FROM DP_STOCK_INVENTORY  DSI WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=? " +
															" UNION SELECT SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME  " +
															" FROM DP_STOCK_INVENTORY_ASSIGNED  DSI WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=? WITH UR ";
	*/
	public static final String SQL_INVOICE_ALL_SERIALS_NO = "SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
			" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
			" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
			" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
			" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
			" FROM DP_STOCK_INVENTORY  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO	LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO" +
			" WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=?" +
			" UNION " +
			" SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
			" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
			" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
			" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
			" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS FROM DP_STOCK_INVENTORY_ASSIGNED  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO" +
			" LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=?" +
			" UNION " +
			" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
			" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
			" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
			" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
			" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
			" FROM DP_WRONG_SHIP_DETAIL WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO	WHERE WS.INV_NO= ? AND WS.PRODUCT_ID=?" +
			" UNION " +
			" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
			" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
			" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
			" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
			" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
			" FROM DP_WRONG_SHIP_DETAIL_HIST WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO WHERE WS.INV_NO= ? AND WS.PRODUCT_ID=?" +
			" UNION " +
			" select  SERIAL_NO,(SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = EP.PRODUCT_ID) PRODUCT_NAME, "+
			" 'Error in PO' PO_STB_STATUS from DP_ERROR_PO_DETAIL EP where EP.DC_NO IN ( select DC_NO from INVOICE_HEADER where INV_NO = ?) "+
			" and EP.product_id = ? WITH UR ";
	
	
	
	
	
	public static final String SQL_INVOICE_ALL_SERIALS_NO_ANDROID = "SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_STOCK_INVENTORY  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO	LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO" +
	" WHERE DSI.INV_NO= ?" +
	" UNION " +
	" SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS FROM DP_STOCK_INVENTORY_ASSIGNED  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO" +
	" LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO WHERE DSI.INV_NO= ?" +
	" UNION " +
	" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_WRONG_SHIP_DETAIL WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO	WHERE WS.INV_NO= ?" +
	" UNION " +
	" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='WRONG' THEN 'REJECTED' WHEN TSM_DECISION='CAN' AND WRONG_SHIP_TYPE ='SHORT' THEN 'ACCEPTED' " +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_WRONG_SHIP_DETAIL_HIST WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO WHERE WS.INV_NO= ?" +
	" UNION " +
	" select  SERIAL_NO,(SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = EP.PRODUCT_ID) PRODUCT_NAME, "+
	" 'Error in PO' PO_STB_STATUS from DP_ERROR_PO_DETAIL EP where EP.DC_NO IN ( select DC_NO from INVOICE_HEADER where INV_NO = ?) "+
	" WITH UR ";
	
	
	
	
	
//	*************Commented by Shilpa on 31-10-2012 for Short ship with canceled by TSM *******************
	
	/*public static final String SQL_INVOICE_ALL_SERIALS_NO = "SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' THEN 'REJECTED'" +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_STOCK_INVENTORY  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO	LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO" +
	" WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=?" +
	" UNION " +
	" SELECT DSI.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = DSI.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' THEN 'REJECTED'" +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS FROM DP_STOCK_INVENTORY_ASSIGNED  DSI inner join INVOICE_HEADER IH on DSI.INV_NO=IH.INV_NO" +
	" LEFT OUTER JOIN DP_WRONG_SHIP_DETAIL WS on DSI.SERIAL_NO=WS.SERIAL_NO AND DSI.INV_NO=WS.INV_NO WHERE DSI.INV_NO= ? AND DSI.PRODUCT_ID=?" +
	" UNION " +
	" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' THEN 'REJECTED'" +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_WRONG_SHIP_DETAIL WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO	WHERE WS.INV_NO= ? AND WS.PRODUCT_ID=?" +
	" UNION " +
	" SELECT WS.SERIAL_NO, (SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = WS.PRODUCT_ID) PRODUCT_NAME," +
	" CASE WHEN IH.DIST_ACTION_DATE IS NULL THEN 'DISTRIBUTOR ACTION PENDING' WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.TSM_DECISION IS NULL" +
	" AND WS.SERIAL_NO IS NOT NULL THEN 'TSM ACTION PENDING' WHEN TSM_DECISION='WS' THEN 'ADDED' WHEN TSM_DECISION='CAN' THEN 'REJECTED'" +
	" WHEN TSM_DECISION='EIB' THEN 'MISSING - AVAILABLE AT WH' WHEN TSM_DECISION='LIT' THEN 'MISSING - LOST IN TRANSIT'" +
	" WHEN IH.DIST_ACTION_DATE IS NOT NULL AND WS.SERIAL_NO IS NULL THEN 'ACCEPTED' ELSE ' ' END  as PO_STB_STATUS" +
	" FROM DP_WRONG_SHIP_DETAIL_HIST WS  inner join INVOICE_HEADER IH on WS.INV_NO=IH.INV_NO WHERE WS.INV_NO= ? AND WS.PRODUCT_ID=?" +
	" UNION " +
	" select  SERIAL_NO,(SELECT DPM.PRODUCT_NAME FROM DP_PRODUCT_MASTER DPM WHERE DPM.PRODUCT_ID = EP.PRODUCT_ID) PRODUCT_NAME, "+
	" 'Error in PO' PO_STB_STATUS from DP_ERROR_PO_DETAIL EP where EP.DC_NO IN ( select DC_NO from INVOICE_HEADER where INV_NO = ?) "+
	" and EP.product_id = ? WITH UR ";*/
//	 End by Shilpa
	//Add by harbans Open Stock
//	public static final String GET_ALL_OPEN_PRODUCT_NAME = " SELECT DISTINCT DPSPM.PRODUCT_ID, DPSPM.PRODUCT_NAME "
//															+" FROM DP_OPEN_STOCK_DTL DOSD, DP_OPEN_STOCK_PRODUCT_MASTER DPSPM "
//															+" WHERE DOSD.PRODUCT_ID=DPSPM.PRODUCT_ID AND DOSD.DIST_ID = ?   WITH UR ";

	public static final String GET_ALL_OPEN_PRODUCT_NAME = " SELECT DISTINCT PM.PRODUCT_ID, PM.PRODUCT_NAME FROM DP_OPEN_STOCK_DTL DOSD, DP_PRODUCT_MASTER PM WHERE DOSD.PRODUCT_ID=PM.PRODUCT_ID AND DOSD.DIST_ID=? WITH UR";



	public static final String GET_ACC_NAME_AND_ROLE_DIST = " SELECT DISTINCT VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME , VGD.GROUP_NAME , VGD.GROUP_ID "
														+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM,VR_GROUP_DETAILS VGD "
														+" WHERE VAD.ACCOUNT_ID= VLM.LOGIN_ID AND VLM.GROUP_ID= VGD.GROUP_ID AND VLM.LOGIN_ID = ? ";



	public static final String GET_DIST_ALL_OPEN_STOCK = "SELECT OPENING_STOCK, SALE, CLOSING_STOCK, DIST_ORACLE_LOCATOR_CODE FROM DP_OPEN_STOCK_DTL WHERE DIST_ID=? AND PRODUCT_ID=? WITH UR " ;



//	public static final String GET_TOTAL_OPEN_STOCK_DIST = "SELECT SUM(CLOSING_STOCK) TOTAL_STOCK FROM DP_OPEN_STOCK_DTL  DOSD, DP_OPEN_STOCK_PRODUCT_MASTER DOSPM WHERE DOSD.DIST_ID = ? AND  DOSD.PRODUCT_ID = DOSPM.PRODUCT_ID "
//														+" AND DOSPM.PRODUCT_ID IN (SELECT RCV_PRODUCT_ID FROM DP_CPE_RCV_PRODUCT_MAPPING WHERE CPE_PRODUCT_ID = ?)WITH UR ";

	public static final String GET_TOTAL_OPEN_STOCK_DIST = "select CLOSING_STOCK TOTAL_STOCK FROM DP_OPEN_STOCK_DTL WHERE DIST_ID =? and PRODUCT_ID=?";

	public static final String GET_ALL_TSM_OF_CIRCLE = "SELECT LOGIN_ID, LOGIN_NAME FROM VR_LOGIN_MASTER WHERE GROUP_ID=6 WITH UR ";

	public static final String CHECK_WRONG_INVENTORY= "select SERIAL_NO from DP_STOCK_INVENTORY where SERIAL_NO = ? and PRODUCT_ID = ? and MARK_DAMAGED='N' with ur";

	public static final String CHECK_ERROR_DC="select DC_NO from DP_ERROR_PO_DETAIL where DC_NO=? ";

	// FOR REVERSE COLLECTION
	public static final String SQL_COLLECTION_MST = "SELECT COLLECTION_ID, COLLECTION_NAME FROM DP_REV_COLLECTION_MST WHERE STATUS = 'A' ORDER BY ORDER_ID WITH UR";

	public static final String SQL_COLLECTION_MST_WO_CHURN = "SELECT COLLECTION_ID, COLLECTION_NAME FROM DP_REV_COLLECTION_MST WHERE STATUS = 'A' and  COLLECTION_ID not in (4) ORDER BY ORDER_ID WITH UR";


	public static final String SQL_COLLECTION_PARENT = "SELECT LOGIN_ID, LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID = (Select PARENT_ACCOUNT from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ? ) WITH UR";
	public static final String SQL_COLLECTION_PARENT_GENERIC = "SELECT c.LOGIN_ID, c.LOGIN_NAME from VR_LOGIN_MASTER a,DP_DISTRIBUTOR_MAPPING b,VR_LOGIN_MASTER c "
															+" where a.LOGIN_ID = b.DP_DIST_ID "
															+" and b.DP_DIST_ID = ? "
															+" and b.PARENT_ACCOUNT = c.LOGIN_ID with ur ";

	//	Commented by Nazim Hussain as this brings Product on Reverse Pending List screen based on Collection type, 
//	now products are populated for DOA BI only so Collection Type check is not required. Also DOA BI should include SWAP products as well (BFR-15, DP-Phase-3_08158)
//	public static final String GET_COLLECT_PRODUCT_LIST = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER PM, DP_REV_COLLECTION_MST CM" +
//													" WHERE  PM.PRODUCT_TYPE =CM.PRODUCT_TYPE AND CM.COLLECTION_ID=? AND PM.CIRCLE_ID=? and PM.CM_STATUS ='A' and PM.CATEGORY_CODE =1 WITH UR";
//	New query for Reverse Pending List screen Product dropdown
	public static final String GET_COLLECT_PRODUCT_LIST = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER PM WHERE PM.CIRCLE_ID=? and PM.CM_STATUS ='A' and PM.CATEGORY_CODE =1 WITH UR";

	public static final String SUBMIT_REVERSE_COLLECTION_DATA = " INSERT INTO DP_REV_STOCK_INVENTORY(COLLECTION_ID, DEFECT_ID, PRODUCT_ID, SERIAL_NO_COLLECT, SERIAL_NO_REPLACE, COLLECTION_DATE, REMARKS, CREATED_ON, CREATED_BY, CIRCLE_ID, STATUS, UPDATED_ON, UPDATED_BY,PRODUCT_ID_REPLACE,INV_CHANGE_DT,CUSTOMER_ID,REQ_ID ) "
		    											+" VALUES(?, ?, ?, ?, ?, CURRENT DATE, ?, CURRENT TIMESTAMP, ?, ?, ?, NULL, NULL,?,?,?,?)";

	// Update by harbans on Reverse Enhancement.
	//public static final String VALIDATE_COLLECT_SERIAL_NO = "SELECT * FROM DP_STOCK_INVENTORY_ASSIGNED WHERE SERIAL_NO = ? AND DATE(ASSIGN_DATE) > (CURRENT DATE - 30 DAYS) WITH UR";
	public static final String VALIDATE_COLLECT_SERIAL_NO =		" SELECT STATUS, (current date-Date(ASSIGN_DATE)-1) as DATEDIFF FROM DP_STOCK_INVENTORY_ASSIGNED WHERE SERIAL_NO = ? "
																+" UNION "
																+" SELECT STATUS, 0 as DATEDIFF FROM DP_STOCK_INVENTORY WHERE SERIAL_NO = ? WITH UR ";

	public static final String VALIDATE_C2S_COLLECT_SERIAL_NO = " SELECT * FROM DP_C2S_BULK_UPLOAD WHERE SR_NO = ? WITH UR";

	public static final String MOVE_RECORDS_STOCK_INVENTORY_DAO_SERIAL_NO = " INSERT INTO DP_STOCK_INVENTORY_ASSIGNED(PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, STATUS,ASSIGN_DATE) "
															+" SELECT PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, "+Constants.STOCK_STATUS_ASSIGNED_DAO_COLLECTION+", current timestamp  FROM "
															+"  DP_STOCK_INVENTORY WHERE PRODUCT_ID = ? AND SERIAL_NO = ? AND DISTRIBUTOR_ID=? "
																	//"AND STATUS IN("+Constants.STOCK_STATUS_UNASSIGNED_PENDING+","+Constants.STOCK_STATUS_UNASSIGNED_COMPLETE+ ")   // Commented by Nazim
															+" WITH UR ";

	//Updated by Shilpa Khanna
	/*public static final String MOVE_RECORDS_STOCK_INVENTORY_DAO_SERIAL_NO = " INSERT INTO DP_STOCK_INVENTORY_ASSIGNED(PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, STATUS, ASSIGN_DATE) "
		+" SELECT PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, "+Constants.STOCK_STATUS_ASSIGNED_DAO_COLLECTION+", CURRENT TIMESTAMP ASSIGN_DATE "
		+" FROM DP_STOCK_INVENTORY WHERE PRODUCT_ID = ? AND SERIAL_NO = ? AND DISTRIBUTOR_ID=? "
				//"AND STATUS IN("+Constants.STOCK_STATUS_UNASSIGNED_PENDING+","+Constants.STOCK_STATUS_UNASSIGNED_COMPLETE+ ")   // Commented by Nazim
		+" WITH UR ";*/

//	 Add by harbans on Reverse Enhancement.
	public static final String DELETE_DAO_SERIAL_NO_RECORDS_STOCK_INVENTORY = "DELETE FROM DP_STOCK_INVENTORY WHERE PRODUCT_ID = ? AND SERIAL_NO = ? WITH UR";


	public static final String GET_DIST_RECEIPT_FROM_WH = " SELECT SUM(cnt) AS RECEIPT_FROM_WH "
															+" FROM ((SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY WHERE (DATE(DISTRIBUTOR_PURCHASE_DATE) BETWEEN  ? AND  ? ) "
															+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N'  and inv_no != 'REV-INV' ) "
															+" UNION ALL "
															+" (SELECT COUNT(*) As Cnt FROM DP_STOCK_INVENTORY_ASSIGNED WHERE (DATE(DISTRIBUTOR_PURCHASE_DATE) BETWEEN  ? AND  ? ) "
															+" AND DISTRIBUTOR_ID = ? AND PRODUCT_ID = ? AND MARK_DAMAGED='N'   and inv_no != 'REV-INV'))  with ur ";


	public static final String GET_DIST_RECEIPT_FROM_INTERSSD=" SELECT SUM(cnt) AS RECEIPT_FROM_INTERSSD "
														+ " FROM ((SELECT COUNT(*) As Cnt FROM DP_DIST_STOCK_TRANSFER WHERE (DATE(UPDATED_DATE) BETWEEN ? AND ? ) AND TO_DIST_ID=? AND PRODUCT_ID = ? AND STATUS IN ('RECEIVED')) "
														+ " UNION ALL "
														+ "(SELECT COUNT(*) As Cnt FROM DP_DIST_STOCK_TRANSFER_HIST WHERE (DATE(UPDATED_DATE) BETWEEN ? AND ? ) AND TO_DIST_ID=? AND PRODUCT_ID = ? )) WITH UR ";



	public static final String GET_ALL_ACCOUNT_ON_PARENT =	" SELECT ACCOUNT_ID, ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT=? WITH UR ";


	public static final String GET_ALL_ACCOUNT_TSM_DIST_ON_CIRCLE = "SELECT ACCOUNT_ID, ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT IN (SELECT ACCOUNT_ID FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_LEVEL=5 and CIRCLE_ID=? ) WITH UR";

//	Add By harabns 27may
	public static final String GET_ALL_ACCOUNT_TSM_DIST_ON_ALL_CIRCLE = "SELECT ACCOUNT_ID, ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE PARENT_ACCOUNT IN (SELECT ACCOUNT_ID FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_LEVEL=5) WITH UR";

	// END BY HARBANS


	public static final String VALIDATE_UNIQUE_COLLECT_SERIAL_NO = "SELECT * FROM DP_REV_STOCK_INVENTORY WHERE SERIAL_NO_COLLECT=?  AND CREATED_BY=?  WITH UR";
	//	public static final String VALIDATE_COLLECT_SERIAL_NO_ALL	= "SELECT b.PRODUCT_ID,b.PRODUCT_NAME FROM DP_STOCK_INVENTORY_ASSIGNED a , DP_PRODUCT_MASTER b WHERE a.SERIAL_NO=? and a.PRODUCT_ID=b.PRODUCT_ID and b.CIRCLE_ID=? WITH UR";
	public static final String VALIDATE_COLLECT_SERIAL_NO_ALL	= "SELECT b.PRODUCT_ID,b.PRODUCT_NAME FROM DP_STOCK_INVENTORY a , DP_PRODUCT_MASTER b WHERE a.SERIAL_NO=? and a.PRODUCT_ID=b.PRODUCT_ID and b.CIRCLE_ID=? WITH UR";


	public static final String SQL_STOCK_REVERSE_INVENTORY_INSERT = "insert into DP_STOCK_INVENTORY (PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, INV_NO, STATUS)"
														+ " values(?, ?, 'N', ?, CURRENT TIMESTAMP, 'REV-INV-CH', 5) WITH UR ";
	
	public static final String SQL_STOCK_REVERSE_INVENTORY_INSERT_UPGRADE = "insert into DP_STOCK_INVENTORY (PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, INV_NO, STATUS)"
		+ " values(?, ?, 'N', ?, CURRENT TIMESTAMP, 'REV-INV', 5) WITH UR ";

	// Addedd by Naveen
	public static final String GET_DC_BASIC_DETAILS = " select DCH.STATUS ,AD.ACCOUNT_NAME, AD.CONTACT_NAME, AD.MOBILE_NUMBER, CM.CITY_NAME, SM.STATE_NAME as CIRCLE_NAME, DCH.REMARKS, DCH.COURIER_AGENCY,DCH.DOCKET_NUMBER,DWM.WH_NAME,DWM.WH_ADDRESS1,DWM.WH_ADDRESS2,DWM.WH_PHONE, 'MAIN' AS QUERY_TYPE " +
			" from DP_REV_DELIVERY_CHALAN_HDR DCH, VR_ACCOUNT_DETAILS AD, VR_CITY_MASTER CM, DP_STATES_MASTER SM, VR_CIRCLE_MASTER CM ,DP_WH_DIST_MAP DWDM,DP_WH_MASTER DWM" +
			" where DCH.CREATED_BY=AD.ACCOUNT_ID and DCH.DC_NO=? AND AD.CITY_ID=CM.CITY_ID and DWDM.DISTID=AD.ACCOUNT_ID and DWM.WH_CODE=DWDM.WH_CODE" +
			" AND AD.STATE_ID=SM.STATE_ID AND SM.CIRCLE_CODE=CM.CIRCLE_CODE" +
			" union" +
			" select DCH.STATUS ,AD.ACCOUNT_NAME, AD.CONTACT_NAME, AD.MOBILE_NUMBER, CM.CITY_NAME, VCM.CIRCLE_NAME, DCH.REMARKS,DCH.COURIER_AGENCY,DCH.DOCKET_NUMBER,DWM.WH_NAME,DWM.WH_ADDRESS1,DWM.WH_ADDRESS2,DWM.WH_PHONE, 'OTHER' AS QUERY_TYPE" +
			" from DP_REV_DELIVERY_CHALAN_HDR DCH, VR_ACCOUNT_DETAILS AD, VR_CITY_MASTER CM, VR_CIRCLE_MASTER VCM ,DP_WH_DIST_MAP DWDM,DP_WH_MASTER DWM" +
			" where DCH.CREATED_BY=AD.ACCOUNT_ID and DCH.DC_NO=? AND AD.CITY_ID=CM.CITY_ID and DWDM.DISTID=AD.ACCOUNT_ID and DWM.WH_CODE=DWDM.WH_CODE" +
			" AND AD.CIRCLE_ID=VCM.CIRCLE_ID order by QUERY_TYPE asc with ur";


	public static final String GET_DC_BASIC_DETAILS_FRESH = " select b.SERIAL_NO, d.PRODUCT_NAME, DATE(a.CREATED_ON) RETURN_DATE, e.REMARKS  "
										+" 	from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b,      "
										+" 	DP_REV_FRESH_STOCK e , DP_PRODUCT_MASTER d   "
										+" 	where  a.DC_NO=b.DC_NO    "
										+" 	and b.PRODUCT_ID = e.PRODUCT_ID  "
										+" 	and b.SERIAL_NO = e.SERIAL_NO    "
										+" 	and b.DIST_ID=e.DISTRIBUTOR_ID   "
										+" 	and e.PRODUCT_ID = d.PRODUCT_ID    "
										+" 	and a.DC_NO = ?    "
										+" 	with ur";



	//added by saumya
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_TSM_ALL = "select account_id, account_name from vr_account_details where ACCOUNT_LEVEL = ? with ur";


	public static final String GET_ACCOUNT_DETAILS_REV_LOG_TSM = "select account_id, account_name from vr_account_details where ACCOUNT_LEVEL = ? and CIRCLE_ID=? with ur";

/*	Commented By Nazim Hussain as its not showing complete DC details
 *
 * public static final String GET_DC_DETAILS = " select b.SERIAL_NO,d.PRODUCT_NAME , f.COLLECTION_NAME ,g.DEFECT_NAME ,e.COLLECTION_DATE,e.REMARKS "
												+" from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b,   "
												+" DP_REV_STOCK_INVENTORY e , DP_PRODUCT_MASTER d , DP_REV_COLLECTION_MST f, DP_REV_DEFECT_MST g "
												+" where  a.DC_NO=b.DC_NO "
												+" and b.PRODUCT_ID = e.PRODUCT_ID "
												+" and b.SERIAL_NO = e.SERIAL_NO_COLLECT "
												+" and b.DIST_ID=e.CREATED_BY "
												+" and e.PRODUCT_ID = d.PRODUCT_ID "
												+" and e.COLLECTION_ID = f.COLLECTION_ID "
												+" and e.DEFECT_ID = g.DEFECT_ID and a.DC_NO = ? "
												+" with ur";
	public static final String GET_DC_DETAILS_HIST = " select b.SERIAL_NO,d.PRODUCT_NAME , f.COLLECTION_NAME ,g.DEFECT_NAME ,e.COLLECTION_DATE,e.REMARKS "
		+" from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b,   "
		+" DP_REV_STOCK_INVENTORY_HIST e , DP_PRODUCT_MASTER d , DP_REV_COLLECTION_MST f, DP_REV_DEFECT_MST g "
		+" where  a.DC_NO=b.DC_NO "
		+" and b.PRODUCT_ID = e.PRODUCT_ID "
		+" and b.SERIAL_NO = e.SERIAL_NO_COLLECT "
		+" and b.DIST_ID=e.CREATED_BY "
		+" and e.PRODUCT_ID = d.PRODUCT_ID "
		+" and e.COLLECTION_ID = f.COLLECTION_ID "
		+" and e.DEFECT_ID = g.DEFECT_ID and a.DC_NO = ? "
		+" with ur";


	public static final String GET_DC_DETAILS_HIST_FRESH = " select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS" +
			" from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
			" DP_REV_FRESH_STOCK_HIST e , DP_PRODUCT_MASTER d" +
			" where  a.DC_NO=b.DC_NO" +
			" and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO " +
			" and b.DIST_ID=e.DISTRIBUTOR_ID" +
			" and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ? with ur";

	public static final String GET_DC_DETAILS_FRESH = " select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS" +
	" from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
	" DP_REV_FRESH_STOCK e , DP_PRODUCT_MASTER d" +
	" where  a.DC_NO=b.DC_NO" +
	" and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO " +
	" and b.DIST_ID=e.DISTRIBUTOR_ID" +
	" and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ? with ur";

	*/




	public static final String GET_DC_DETAILS_REVERSE = "select b.SERIAL_NO, d.PRODUCT_NAME, f.COLLECTION_NAME, g.DEFECT_NAME, e.REMARKS, e.COLLECTION_DATE " +
			" from DP_REV_DELIVERY_CHALAN_HDR a, DP_REV_DELIVERY_CHALAN_DETAIL b, DP_PRODUCT_MASTER d , DP_REV_STOCK_INVENTORY e,  DP_REV_COLLECTION_MST f, DP_REV_DEFECT_MST g" +
			" where a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.COLLECTED_ON=e.CREATED_ON and b.SERIAL_NO = e.SERIAL_NO_COLLECT  and b.DIST_ID=e.CREATED_BY and e.PRODUCT_ID = d.PRODUCT_ID  and e.COLLECTION_ID = f.COLLECTION_ID  and e.DEFECT_ID = g.DEFECT_ID and a.DC_NO = ?" +
			" UNION" +
			" select b.SERIAL_NO, d.PRODUCT_NAME, f.COLLECTION_NAME, g.DEFECT_NAME, e.REMARKS, e.COLLECTION_DATE from DP_REV_DELIVERY_CHALAN_HDR a, DP_REV_DELIVERY_CHALAN_DETAIL b,DP_PRODUCT_MASTER d , DP_REV_STOCK_INVENTORY_HIST e,  DP_REV_COLLECTION_MST f, DP_REV_DEFECT_MST g" +
			" where a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.COLLECTED_ON=e.CREATED_ON and b.SERIAL_NO = e.SERIAL_NO_COLLECT  and b.DIST_ID=e.CREATED_BY and e.PRODUCT_ID = d.PRODUCT_ID  and e.COLLECTION_ID = f.COLLECTION_ID  and e.DEFECT_ID = g.DEFECT_ID and a.DC_NO = ? with ur";
	
//	Query commented for RFD issues where all STB not showing in DC @ CR58299
//	public static final String GET_DC_DETAILS_FRESH = "select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
//	" DP_REV_FRESH_STOCK_HIST e , DP_PRODUCT_MASTER d where  a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO" +
//	" and b.DIST_ID=e.DISTRIBUTOR_ID and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ?" +
//	" and concat(concat(concat(CHAR(YEAR(e.RETURN_DATE))," +
//	" CHAR(MONTH(e.RETURN_DATE))), concat(CHAR(DAY(e.RETURN_DATE)), CHAR(HOUR(e.RETURN_DATE))))," +
//	" CHAR(MINUTE(e.RETURN_DATE)))= concat(concat(concat(CHAR(YEAR(b.CREATED_ON)), CHAR(MONTH(b.CREATED_ON)))," +
//	" concat(CHAR(DAY(b.CREATED_ON)), CHAR(HOUR(b.CREATED_ON)))), CHAR(MINUTE(b.CREATED_ON)))" +
//	" union" +
//	" select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
//	" DP_REV_FRESH_STOCK e , DP_PRODUCT_MASTER d where  a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO and" +
//	" b.DIST_ID=e.DISTRIBUTOR_ID and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ?" +
//	" and concat(concat(concat(CHAR(YEAR(e.RETURN_DATE)), CHAR(MONTH(e.RETURN_DATE))), concat(CHAR(DAY(e.RETURN_DATE))," +
//	" CHAR(HOUR(e.RETURN_DATE)))), CHAR(MINUTE(e.RETURN_DATE)))= concat(concat(concat(CHAR(YEAR(b.COLLECTED_ON)), CHAR(MONTH(b.COLLECTED_ON)))," +
//	" concat(CHAR(DAY(b.COLLECTED_ON)), CHAR(HOUR(b.COLLECTED_ON)))), CHAR(MINUTE(b.COLLECTED_ON)))  with ur";
	
	//Query changed for RFD issues where all STB not showing in DC @ CR58299
	public static final String GET_DC_DETAILS_FRESH = "select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
			" DP_REV_FRESH_STOCK_HIST e , DP_PRODUCT_MASTER d where  a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO" +
			" and b.DIST_ID=e.DISTRIBUTOR_ID and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ?" +
			" and concat(concat(concat(CHAR(YEAR(e.RETURN_DATE))," +
			" CHAR(MONTH(e.RETURN_DATE))), concat(CHAR(DAY(e.RETURN_DATE)), CHAR(HOUR(e.RETURN_DATE))))," +
			" CHAR(MINUTE(e.RETURN_DATE)))= concat(concat(concat(CHAR(YEAR(b.COLLECTED_ON)), CHAR(MONTH(b.COLLECTED_ON)))," +
			" concat(CHAR(DAY(b.COLLECTED_ON)), CHAR(HOUR(b.COLLECTED_ON)))), CHAR(MINUTE(b.COLLECTED_ON)))" +
			" union" +
			" select b.SERIAL_NO,d.PRODUCT_NAME , e.RETURN_DATE,e.REMARKS from DP_REV_DELIVERY_CHALAN_HDR a , DP_REV_DELIVERY_CHALAN_DETAIL b," +
			" DP_REV_FRESH_STOCK e , DP_PRODUCT_MASTER d where  a.DC_NO=b.DC_NO and b.PRODUCT_ID = e.PRODUCT_ID and b.SERIAL_NO = e.SERIAL_NO and" +
			" b.DIST_ID=e.DISTRIBUTOR_ID and e.PRODUCT_ID = d.PRODUCT_ID and a.DC_NO = ?" +
			" and concat(concat(concat(CHAR(YEAR(e.RETURN_DATE)), CHAR(MONTH(e.RETURN_DATE))), concat(CHAR(DAY(e.RETURN_DATE))," +
			" CHAR(HOUR(e.RETURN_DATE)))), CHAR(MINUTE(e.RETURN_DATE)))= concat(concat(concat(CHAR(YEAR(b.COLLECTED_ON)), CHAR(MONTH(b.COLLECTED_ON)))," +
			" concat(CHAR(DAY(b.COLLECTED_ON)), CHAR(HOUR(b.COLLECTED_ON)))), CHAR(MINUTE(b.COLLECTED_ON)))  with ur";

	//End by Naveen

/*------ Added By Shilpa Khanna --------*/

	public static final String GET_COLLECTION_LIST = "SELECT COLLECTION_ID,COLLECTION_NAME,STATUS,REQ_IN_DC FROM DP_REV_COLLECTION_MST WHERE STATUS='A' AND REQ_IN_DC='A' WITH UR";
	public static final String GET_DEFECT_LIST = "SELECT defMap.DEFECT_ID,mst.DEFECT_NAME,defMap.DEFECT_ID,mst.DEFECT_ID,defMap.COLLECTION_ID,defMap.STATUS FROM DP_REV_COLLECTION_DEFECT_MAP defMap INNER JOIN DP_REV_DEFECT_MST mst ON defMap.DEFECT_ID=mst.DEFECT_ID  WHERE defMap.COLLECTION_ID=? AND defMap.STATUS ='A' AND mst.STATUS='A' WITH UR" ;
	public static final String GET_REVERSE_STOCK_INVENTORY_LIST = "SELECT COLL.COLLECTION_ID,COLL.COLLECTION_NAME,INV.COLLECTION_ID,INV.SERIAL_NO_COLLECT,INV.COLLECTION_DATE,INV.REMARKS,DEF.DEFECT_NAME,PRO.PRODUCT_NAME,PRO.PRODUCT_ID,INV.CUSTOMER_ID,INV.REQ_ID ,INV.INV_CHANGE_DT  FROM DP_REV_STOCK_INVENTORY INV INNER JOIN DP_REV_COLLECTION_MST COLL ON INV.COLLECTION_ID = COLL.COLLECTION_ID INNER JOIN DP_REV_DEFECT_MST DEF ON INV.DEFECT_ID=DEF.DEFECT_ID INNER JOIN DP_PRODUCT_MASTER PRO ON INV.PRODUCT_ID=PRO.PRODUCT_ID  WHERE INV.COLLECTION_ID=5 AND(INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'COL' END ) OR INV.STATUS=(CASE WHEN INV.COLLECTION_ID=5 THEN  'UPG' ELSE 'CAN' END) OR INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN  'UPG' ELSE 'ERR' END))  AND  INV.CREATED_BY =? WITH UR";
	public static final String GET_REVERSE_STOCK_INVENTORY_ALL_LIST = "SELECT COLL.COLLECTION_ID,COLL.COLLECTION_NAME,INV.COLLECTION_ID,INV.SERIAL_NO_COLLECT,INV.COLLECTION_DATE,INV.REMARKS,DEF.DEFECT_NAME,PRO.PRODUCT_NAME,PRO.PRODUCT_ID,INV.CUSTOMER_ID,INV.REQ_ID , INV.INV_CHANGE_DT,INV.CREATED_BY FROM DP_REV_STOCK_INVENTORY INV INNER JOIN DP_REV_COLLECTION_MST COLL ON INV.COLLECTION_ID = COLL.COLLECTION_ID INNER JOIN DP_REV_DEFECT_MST DEF ON INV.DEFECT_ID=DEF.DEFECT_ID INNER JOIN DP_PRODUCT_MASTER PRO ON INV.PRODUCT_ID=PRO.PRODUCT_ID  WHERE (INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'COL' END) OR INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'CAN' END ) OR INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'ERR' END)) AND COLL.STATUS='A' AND COLL.REQ_IN_DC='A' AND  INV.CREATED_BY =? order by INV.CREATED_ON desc WITH UR";
	public static final String GET_INACTIVE_PARTNER_STOCK_LIST="SELECT INV.SERIAL_NO_COLLECT AS SERIAL_NO FROM DP_REV_STOCK_INVENTORY INV INNER JOIN DP_REV_COLLECTION_MST COLL ON INV.COLLECTION_ID = COLL.COLLECTION_ID INNER JOIN DP_REV_DEFECT_MST DEF ON INV.DEFECT_ID=DEF.DEFECT_ID INNER JOIN DP_PRODUCT_MASTER PRO ON INV.PRODUCT_ID=PRO.PRODUCT_ID  WHERE (INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'COL' END) OR INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'CAN' END ) OR INV.STATUS = (CASE WHEN INV.COLLECTION_ID=5 THEN 'UPG' ELSE 'ERR' END)) AND COLL.STATUS='A' AND COLL.REQ_IN_DC='A' AND INV.PRODUCT_ID=? AND  INV.CREATED_BY =? order by INV.CREATED_ON desc WITH UR";
	/*SELECT COLL.COLLECTION_ID,COLL.COLLECTION_NAME,INV.COLLECTION_ID,INV.SERIAL_NO_COLLECT,INV.COLLECTION_DATE,
	INV.REMARKS,DEF.DEFECT_NAME,PRO.PRODUCT_NAME,PRO.PRODUCT_ID
	FROM DP_REV_STOCK_INVENTORY INV LEFT OUTER JOIN DP_REV_DEFECT_MST DEF ON INV.DEFECT_ID=DEF.DEFECT_ID,
	DP_REV_COLLECTION_MST COLL, DP_PRODUCT_MASTER PRO
	WHERE
	INV.COLLECTION_ID = COLL.COLLECTION_ID AND  INV.PRODUCT_ID=PRO.PRODUCT_ID  AND
	INV.STATUS='COL' AND COLL.STATUS='A' AND COLL.REQ_IN_DC='A' AND  INV.CREATED_BY =? WITH UR*/
	public static final String INSERT_DC_CREATION_DETAIL="INSERT INTO DP_REV_DELIVERY_CHALAN_DETAIL(DC_NO, DIST_ID, SERIAL_NO, PRODUCT_ID, COLLECTION_ID, DEFECT_ID, COLLECTED_ON, CIRCLE_ID,STATUS,CUSTOMER_ID,REQ_ID,INV_CHANGE_DT) VALUES(?, ?, ?, ?, ?, ?, ?, ?,'IDC',?,? , ? )  with ur";

	public static final String GET_REV_LOG_DISABLE_TSM_DIST= "select ACCOUNT_NAME,ACCOUNT_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID in( select PARENT_ACCOUNT from VR_ACCOUNT_DETAILS a, VR_LOGIN_MASTER b where a.ACCOUNT_ID = b.LOGIN_ID and b.LOGIN_ID = ? ) with UR";


	public static final String  SQL_REV_LOG_Excel = "select ( select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=SI.CREATED_BY)," +
			" (select ACCOUNT_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID=SI.CREATED_BY)," +
			" PM.PRODUCT_NAME,PM.PRODUCT_ID," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_CHURN+" AND PRODUCT_ID=SI.PRODUCT_ID " +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?)) CHURN," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_UPGRADE+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?)) UPGRADE," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where CREATED_BY=SI.CREATED_BY AND (COLLECTION_ID="+Constants.COLLECTION_TYPE_DOA_BEFORE_INST+" OR COLLECTION_ID="+Constants.COLLECTION_TYPE_DOA_AFTER_INST+") AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?)) DOA," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_DEFFECTIVE+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) DEFECTIVE," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_COMMERCIAL_TO_SWAP+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) C2S," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where (STATUS='S2W' or STATUS='IDC') AND CREATED_BY=SI.CREATED_BY AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) S2W," +
			" (SELECT count(PRODUCT_ID) from DP_REV_STOCK_INVENTORY" +
			" where STATUS='REP' AND CREATED_BY=SI.CREATED_BY AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) REP" +
			" from DP_REV_STOCK_INVENTORY SI, DP_PRODUCT_MASTER PM" +
			" where SI.PRODUCT_ID=PM.PRODUCT_ID" +
			" AND SI.PRODUCT_ID=? " +
			" AND (DATE(COLLECTION_DATE)>=? AND COLLECTION_DATE <=?)" +
			" AND SI.CREATED_BY=? "+
			" group by SI.CREATED_BY, PM.PRODUCT_NAME, SI.PRODUCT_ID ,PM.PRODUCT_ID" +
			" order by ACCOUNT_NAME, PRODUCT_NAME with ur";

	public static final String  SQL_REV_LOG_HIST_Excel = "select ( select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=SI.CREATED_BY)," +
			" (select ACCOUNT_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID=SI.CREATED_BY)," +
			" PM.PRODUCT_NAME,PM.PRODUCT_ID," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_CHURN+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) CHURN," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_UPGRADE+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) UPGRADE," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where CREATED_BY=SI.CREATED_BY AND (COLLECTION_ID="+Constants.COLLECTION_TYPE_DOA_BEFORE_INST+" OR COLLECTION_ID="+Constants.COLLECTION_TYPE_DOA_AFTER_INST+") AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) DOA," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_DEFFECTIVE+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) DEFECTIVE," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where CREATED_BY=SI.CREATED_BY AND COLLECTION_ID="+Constants.COLLECTION_TYPE_COMMERCIAL_TO_SWAP+" AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?) ) C2S," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where (STATUS='S2W' or STATUS='IDC' or STATUS='AIW' or STATUS='MSN') AND CREATED_BY=SI.CREATED_BY AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?)) S2W," +
			" (SELECT count(*) from DP_REV_STOCK_INVENTORY_HIST" +
			" where STATUS='REP' AND CREATED_BY=SI.CREATED_BY AND PRODUCT_ID=SI.PRODUCT_ID" +
			" AND (DATE(COLLECTION_DATE)>=?) AND (DATE(COLLECTION_DATE)<=?)) REP" +
			" from DP_REV_STOCK_INVENTORY_HIST SI, DP_PRODUCT_MASTER PM" +
			" where SI.PRODUCT_ID=PM.PRODUCT_ID" +
			" AND SI.PRODUCT_ID=? " +
			" AND ( COLLECTION_DATE >=? AND COLLECTION_DATE <=?)" +
			" AND SI.CREATED_BY=? "+
			" group by SI.CREATED_BY, PM.PRODUCT_NAME, SI.PRODUCT_ID ,PM.PRODUCT_ID" +
			" order by ACCOUNT_NAME, PRODUCT_NAME with ur";

	public static final String SQL_REV_LOG_DETAIL_Excel="select a.SERIAL_NO_COLLECT,b.PRODUCT_NAME,e.COLLECTION_NAME,f.DEFECT_NAME, "+
								" a.COLLECTION_DATE as coldate,a.REMARKS,cd.ACCOUNT_NAME "+
								" ,case a.STATUS when 'S2W' then 'Sent To Warehouse' when 'IDC' then 'In DC' when 'COL' then 'Collected' when 'REU' then 'In Stock' else 'UnKnown' end as STATUS " +
								" from DP_REV_STOCK_INVENTORY a, DP_PRODUCT_MASTER b, VR_ACCOUNT_DETAILS cd, "+
								"DP_REV_COLLECTION_MST e,DP_REV_DEFECT_MST f "+
								" where a.CREATED_BY=cd.ACCOUNT_ID "+
								" and a.PRODUCT_ID=b.PRODUCT_ID "+
								" and a.COLLECTION_ID=e.COLLECTION_ID "+
								" and a.DEFECT_ID=f.DEFECT_ID "+
								" and a.CREATED_BY=? "+
								" AND (DATE(CREATED_ON)>=? AND DATE(CREATED_ON)<=?)" +
								" UNION "+
								" select a.SERIAL_NO_COLLECT,b.PRODUCT_NAME,e.COLLECTION_NAME,f.DEFECT_NAME, "+
								" a.COLLECTION_DATE as coldate,a.REMARKS,cd.ACCOUNT_NAME"+
								" ,case a.STATUS when 'S2W' then 'Sent To Warehouse' when 'IDC' then 'In DC' when 'COL' then 'Collected' when 'REU' then 'In Stock' else 'UnKnown' end as STATUS " +
								" from DP_REV_STOCK_INVENTORY_HIST a, DP_PRODUCT_MASTER b, VR_ACCOUNT_DETAILS cd,"+
								" DP_REV_COLLECTION_MST e,DP_REV_DEFECT_MST f"+
								" where a.CREATED_BY=cd.ACCOUNT_ID"+
								" and a.PRODUCT_ID=b.PRODUCT_ID"+
								" and a.COLLECTION_ID=e.COLLECTION_ID"+
								" and a.DEFECT_ID=f.DEFECT_ID"+
								" and a.CREATED_BY=?"+
								" AND (DATE(CREATED_ON)>=? AND DATE(CREATED_ON)<=?) order by coldate with ur";


	public static final String SQL_REV_LOG_PRODUCT = "select distinct PRODUCT_ID from DP_REV_STOCK_INVENTORY where CREATED_BY = ? union select distinct PRODUCT_ID "
				+" from DP_REV_STOCK_INVENTORY_HIST where CREATED_BY = ?";


//Updated by Shilpa for Critical Changes BFR 14
	public static final String INSERT_DC_CREATION_HDR="INSERT INTO DP_REV_DELIVERY_CHALAN_HDR(DC_NO, CIRCLE_ID, CREATED_BY, CREATED_ON, STATUS, REMARKS,COURIER_AGENCY,DOCKET_NUMBER, WH_CODE) VALUES(?, ?, ?, CURRENT TIMESTAMP, ?, ?,?,?, (select WH_CODE from DP_WH_DIST_MAP where DISTID=?))  with ur";

	public static final String UPDATE_REVERSE_STOCK_INVENTORY_LIST = "update DP_REV_STOCK_INVENTORY set STATUS='IDC', UPDATED_ON=CURRENT TIMESTAMP, UPDATED_BY=? where PRODUCT_ID=? and SERIAL_NO_COLLECT=? and CREATED_BY =? and STATUS IN ('COL','CAN','ERR','UPG')  with ur";
	public static final String SELECT_REVERSE_STOCK_INVENTORY_LIST = "select * from DP_REV_STOCK_INVENTORY  where PRODUCT_ID=? and SERIAL_NO_COLLECT=? and CREATED_BY =? and STATUS IN ('COL','CAN','ERR','UPG') with ur";
/*------ Added By Shilpa Khanna Ends--------*/

	/*------ Added By Shilpa Khanna --------*/
	public static final String GET_PRODUCT_TYPE_LIST = "SELECT * FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=4 WITH UR";
	
	public static final String GET_TRANSACTION_TYPE_LIST = "select a.CATEGORY_CODE,a.CATEGORY_NAME,b.REPORT_TYPE from  "
															+" (select CATEGORY_NAME,CATEGORY_CODE from DP_BUSINESS_CATEGORY_MASTER )a, " 
															+" (select REPORT_TYPE from REPORT_MASTER where REPORT_ID=? ) b with ur ";


	/*------ Added By Shilpa Khanna Ends--------*/

	/*------ Added By Shilpa Khanna For DC Status Change--------*/
	//public static final String GET_ALL_DCS_LIST = "select DC_NO,STATUS,CREATED_ON,WS_MESSAGE,REMARKS from DP_REV_DELIVERY_CHALAN_HDR where CREATED_BY=? order by CREATED_ON with ur";

	/*------ Added By for Validating Unique Oracle Item Code Karan on 6th June 2012 --------*/

	public static final String GET_ORACLE_ITEM = "SELECT ORACLE_ITEM_CODE FROM DP_PRODUCT_MASTER " +
			" WHERE CATEGORY_CODE=1 AND CIRCLE_ID= ? AND ORACLE_ITEM_CODE= ? with ur";

	public static final String EDIT_ORACLE_ITEM = "SELECT ORACLE_ITEM_CODE FROM DP_PRODUCT_MASTER " +
			" WHERE CATEGORY_CODE=1 AND CIRCLE_ID= ? AND ORACLE_ITEM_CODE = ? and PRODUCT_ID != ? with ur";

	/*------ Added By Karan Ends--------*/



	public static final String GET_ALL_DCS_LIST = "select COURIER_AGENCY, DOCKET_NUMBER,DC_NO, STATUS, TO_CHAR(CREATED_ON, 'dd/MM/yyyy') CREATE_DT, WS_MESSAGE, REMARKS, BT_REMARKS, " +
			" CASE STATUS WHEN 'ERROR' THEN 'ERROR IN DC' WHEN 'SUCCESS' THEN 'Sent To Warehouse' WHEN 'AIW' THEN '" + com.ibm.dp.common.Constants.DC_STATUS_COMP_RECEIVE + "' " +
			"  WHEN 'AIWM' THEN '"+com.ibm.dp.common.Constants.DC_STATUS_PARTIAL_RECEIVE+"' WHEN 'REJECT' THEN '"+com.ibm.dp.common.Constants.DC_STATUS_COMP_REJECT+"' WHEN 'CREATED' THEN 'Ready To Dispatch' WHEN 'INTRANSIT' THEN 'Ready To Dispatch' ELSE STATUS END  DC_STATUS " +
			" from DP_REV_DELIVERY_CHALAN_HDR where CREATED_BY=? AND DC_TYPE= 'REVERSE' order by CREATED_ON DESC with ur";
//	Updated by Shilpa for Critical Changes BFR 14
	public static final String GET_ALL_DCS_LIST_FRESH = "select COURIER_AGENCY, DOCKET_NUMBER,DC_NO, STATUS, TO_CHAR(CREATED_ON, 'dd/MM/yyyy') CREATE_DT, WS_MESSAGE, REMARKS, BT_REMARKS, " +
			" CASE STATUS WHEN 'ERROR' THEN 'ERROR IN DC' WHEN 'SUCCESS' THEN 'Sent To Warehouse' WHEN 'AIW' THEN '" + com.ibm.dp.common.Constants.DC_STATUS_COMP_RECEIVE + "' " +
			" WHEN 'AIWM' THEN '"+com.ibm.dp.common.Constants.DC_STATUS_PARTIAL_RECEIVE+"' WHEN 'REJECT' THEN '"+com.ibm.dp.common.Constants.DC_STATUS_COMP_REJECT+"' WHEN 'CREATED' THEN 'Ready To Dispatch' WHEN 'INTRANSIT' THEN 'Ready To Dispatch' ELSE STATUS END  DC_STATUS " +
			" from DP_REV_DELIVERY_CHALAN_HDR where CREATED_BY=? AND DC_TYPE= 'FRESH' order by CREATED_ON DESC with ur";


	public static final String DC_SR_NO_STATUS="select B.SERIAL_NO, PM.PRODUCT_NAME, CASE WHEN A.STATUS='DRAFT' THEN 'In Incomplete DC' WHEN B.STATUS='S2W' THEN 'Sent To Warehouse'" +
			" WHEN B.STATUS='AIW' THEN 'Accepted in Warehouse' WHEN B.STATUS='IDC' THEN 'Ready to Dispatch'" +
			" WHEN B.STATUS='ERR' THEN 'Error in Sending to Warehouse' WHEN B.STATUS='MSN' THEN 'Missing Serial Number'" +
			" WHEN B.STATUS='ABW' THEN 'Added By Warehouse' ELSE B.STATUS END AS STB_STATUS" +
			" From DP_REV_DELIVERY_CHALAN_HDR A INNER JOIN DP_REV_DELIVERY_CHALAN_DETAIL B ON A.DC_NO=B.DC_NO" +
			" inner join DP_PRODUCT_MASTER PM on B.PRODUCT_ID=PM.PRODUCT_ID where A.DC_NO=? with UR";


	public static final String SET_DCS_STATUS = "update DP_REV_DELIVERY_CHALAN_HDR set STATUS='"+com.ibm.dp.common.Constants.PUSH_DC_TO_BOTREE_CANCEL_STATUS+"' where DC_NO=? and STATUS='"+com.ibm.dp.common.Constants.PUSH_DC_TO_BOTREE_CREATED_STATUS+"'";
	/*------ Added By Shilpa Khanna Ends--------*/

	/*------ Added By Shilpa Khanna For Hierarchy Transfer Change--------*/
	//public static final String GET_ALL_DISTRIBUTOR_LIST = "select account_id, account_name from vr_account_details where PARENT_ACCOUNT=? with ur";
	public static final String GET_ALL_DISTRIBUTOR_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, (select count(ACCOUNT_ID) from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=AD.ACCOUNT_ID) RET_NO from VR_ACCOUNT_DETAILS AD where AD.IS_DISABLE='N' and  AD.PARENT_ACCOUNT=? with ur";
	public static final String GET_DISTRIBUTOR_LIST = "select account_id, account_name from vr_account_details where account_id=? with ur";
	/*---Ends Here ---*/

	/*--   Shillp __*/
	public static final String INSERT_HERARCHY_HEADER = "INSERT INTO DP_HEIRARCHY_TRNS_HDR(TR_NO, TRANS_TYPE, TRANS_SUB_TYPE, FROM_DIST, FROM_FSE, CIRCLE_ID, INIT_UNIT, TRANS_UNIT ,CREATED_BY, CREATED_ON) VALUES(?,?,?,?,?,?,?,0 ,?, current timestamp)";
	public static final String INSERT_HERARCHY_DETAIL = "INSERT INTO DP_HEIRARCHY_TRNS_DTL(TR_NO, TRNS_ACCOUNT_ID, TRNS_ACCOUNT_ROLE,  STATUS) VALUES(?,?,?, ?)";



	/*---Added By Shilpa Khanna for STB repair */

	public static final String SQL_PRODUCT_lIST = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER  WHERE circle_id=? and PRODUCT_TYPE = '"+Constants.COLLECTION_PRODUCT_TYPE_SWP+"' with ur ";
	/* ---Updated by Shilpa Khanna----
	 * public static final String INSERT_REV_STOCK_COLLECTION_HIST = "INSERT INTO DP_REV_STOCK_INVENTORY_HIST(COLLECTION_ID, DEFECT_ID, PRODUCT_ID, SERIAL_NO_COLLECT,  COLLECTION_DATE, REMARKS, CREATED_ON, CREATED_BY, CIRCLE_ID, STATUS, SCM_STATUS, ARCHIVED_DATE, REPAIR_PRODUCT_ID, REPAIR_REMARK)" +
			" VALUES(?, ?, ?, ?, ?,?,?,?,?, 'REP',  ?, current timestamp,?,?)";
 	*/
	public static final String INSERT_REV_STOCK_COLLECTION_HIST = "INSERT INTO DP_REV_STOCK_INVENTORY_HIST(COLLECTION_ID, DEFECT_ID, PRODUCT_ID, SERIAL_NO_COLLECT,  COLLECTION_DATE, REMARKS, CREATED_ON, CREATED_BY, CIRCLE_ID, STATUS, SCM_STATUS, REPAIR_PRODUCT_ID, REPAIR_REMARK, ARCHIVED_DATE,CUSTOMER_ID)" +
			" SELECT COLLECTION_ID, DEFECT_ID, PRODUCT_ID, SERIAL_NO_COLLECT,  COLLECTION_DATE, REMARKS, CREATED_ON, CREATED_BY, CIRCLE_ID, 'REP', SCM_STATUS, ?1, '?2', current timestamp,CUSTOMER_ID from DP_REV_STOCK_INVENTORY where PRODUCT_ID=?3 and SERIAL_NO_COLLECT='?4' and CREATED_BY =?5";
	public static final String UPDATE_REV_STOCK_COLLECTION = "update DP_REV_STOCK_INVENTORY set STATUS='REP',REPAIR_PRODUCT_ID=?,REPAIR_REMARK=?  where PRODUCT_ID=? and SERIAL_NO_COLLECT=? and CREATED_BY =?";
	public static final String DELETE_REV_STOCK_COLLECTION = "Delete from DP_REV_STOCK_INVENTORY where PRODUCT_ID=? and SERIAL_NO_COLLECT=? and CREATED_BY =?";

	/* -----Updaion  Ends Here ----*/
	public static final String INSERT_STOCK_COLLECTION="INSERT INTO DP_STOCK_INVENTORY(PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID,DISTRIBUTOR_PURCHASE_DATE,INV_NO,  STATUS) " +
			"VALUES(?,?, 'N', ?, current timestamp,  'REV-INV',5)";
	/*--Ends here ----*/


	/*---Added By Shilpa Khanna for SACK DISTRIBUTOR */
//	public static final String SELECT_ALL_TSM = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=5 and AD.CIRCLE_ID =? with ur";
	public static final String SELECT_ALL_TSM = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=5 with ur";
	public static final String SELECT_ALL_DISTRIBUTOR_LIST = "select AD.ACCOUNT_ID,AD.MOBILE_NUMBER,AD.ACCOUNT_NAME,AD.CONTACT_NAME,city.CITY_NAME,zon.ZONE_NAME from VR_ACCOUNT_DETAILS AD,VR_CITY_MASTER city,DP_ZONE_MASTER zon where AD.ZONE_ID=zon.ZONE_ID and AD.CITY_ID=city.CITY_ID  and AD.ACCOUNT_LEVEL =6 and AD.IS_DISABLE !='Y' with ur";
	public static final String SELECT_DISTRIBUTOR_LIST = "select AD.ACCOUNT_ID,AD.MOBILE_NUMBER,AD.ACCOUNT_NAME,AD.CONTACT_NAME,city.CITY_NAME,zon.ZONE_NAME from VR_ACCOUNT_DETAILS AD,VR_CITY_MASTER city,DP_ZONE_MASTER zon, DP_DISTRIBUTOR_MAPPING dm  where dm.dp_dist_id=ad.account_id and dm.TRANSACTION_TYPE_ID=2 and AD.ZONE_ID=zon.ZONE_ID and AD.CITY_ID=city.CITY_ID and dm.PARENT_ACCOUNT=? and AD.ACCOUNT_LEVEL =6 and AD.IS_DISABLE !='Y'  with ur"; //free me changed query by neetika
	public static final String CHECK_DISTRIBUTOR_STOCK = "select count(SERIAL_NO),'STOCK'  from DP_STOCK_INVENTORY where DISTRIBUTOR_ID=? UNION select count(ACCOUNT_ID),'FSE'  from VR_ACCOUNT_DETAILS where  PARENT_ACCOUNT=? with ur";
	public static final String UPDATE_DISTRIBUTOR_STATUS = "update VR_ACCOUNT_DETAILS set IS_DISABLE ='Y', DISABLE_REMARK=? where ACCOUNT_ID=?";

	/*--Ends here ----*/


   /*---Added By Shilpa Khanna for STB repair */

	public static final String CHECK_IS_VALID_FOR_REPAIR = "select IS_REPAIR from VR_ACCOUNT_DETAILS where ACCOUNT_ID=? with ur";
	/*--Ends here ----*/

 /*---Added By Shilpa Khanna for change DC Status */

	public static final String SLECT_REV_DC_DETAIL = "select SERIAL_NO,DIST_ID,PRODUCT_ID from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO in ( ?1";

	public static final String UPDATE_REV_STOCK_INV = "update DP_REV_STOCK_INVENTORY set STATUS='CAN' where PRODUCT_ID=? and SERIAL_NO_COLLECT =? and CREATED_BY=?";
	/*--Ends here ----*/

    /*---Added by Shilpa Khanna for change in Self Repair */

	public static final String GET_SELF_REPAIR_STOCK_INVENTORY_ALL_LIST = "SELECT COLL.COLLECTION_ID,COLL.COLLECTION_NAME,INV.COLLECTION_ID,INV.SERIAL_NO_COLLECT,INV.COLLECTION_DATE,INV.REMARKS,DEF.DEFECT_NAME,PRO.PRODUCT_NAME,PRO.PRODUCT_ID FROM DP_REV_STOCK_INVENTORY INV INNER JOIN DP_REV_COLLECTION_MST COLL ON INV.COLLECTION_ID = COLL.COLLECTION_ID INNER JOIN DP_REV_DEFECT_MST DEF ON INV.DEFECT_ID=DEF.DEFECT_ID INNER JOIN DP_PRODUCT_MASTER PRO ON INV.PRODUCT_ID=PRO.PRODUCT_ID  WHERE (INV.STATUS='COL' OR INV.STATUS='CAN') AND COLL.STATUS='A' AND COLL.REQ_IN_SR='A' AND  INV.CREATED_BY =? WITH UR";

	/*---- Ends Here  -------*/

	  /*---Added by Shilpa Khanna for Consumption Posting Detail Report */
	public static final String GET_ALL_DISTRIBUTOR_LIST_REPORT = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=? with ur";
	public static final String GET_CIRCLE_DISTRIBUTOR_LIST_REPORT = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=? and AD.CIRCLE_ID=? with ur";
	/*-- End Here __*/

	public static final String SQL_INSERT_SERIAL_NUMER	=	"INSERT INTO DP_C2S_BULK_UPLOAD VALUES(? , current date)";

	public static final String SQL_SELECT_SERIAL_NUMER	=	"select * from DP_C2S_BULK_UPLOAD where sr_no = ? with ur";


	/*--Added By Shilpa Khanna for Stock Summary Report--*/

	  public static final String SQL_ALL_PRODUCT_lIST_REPORT = "SELECT PRODUCT_ID, PRODUCT_NAME  FROM DP_PRODUCT_MASTER  with ur ";
	  
//	Commented by Nazim Hussain as it brongs InActive products also
//	  public static final String SQL_PRODUCT_lIST_REPORT = "SELECT PRODUCT_ID, PRODUCT_NAME  " +
//	  		"FROM DP_PRODUCT_MASTER  WHERE circle_id=?  with ur ";
	  //Changed by Nazim Hussain to get Active products only
	  public static final String SQL_PRODUCT_lIST_REPORT = "SELECT PRODUCT_ID, PRODUCT_NAME  " +
	  		"FROM DP_PRODUCT_MASTER  WHERE circle_id=? and CM_STATUS='A' and CATEGORY_CODE=? with ur ";
	  
	/*----Ends Here */
/*--  Added by SHilpa khanna forConsumption Posting Detail Report */
	  /*--  UPDATED by SHilpa khanna for Consumption Posting Detail Report */
	  public static final String GET_REPORT_LIST_ALL_DIST ="SELECT ST.SERIAL_NO,ST.ASSIGN_DATE,ST.CUSTOMER_ID,(SELECT ACC.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS ACC " +
		"	WHERE ST.DISTRIBUTOR_ID=ACC.ACCOUNT_ID ) DIST_NAME," +
		" (SELECT PRODUCT_NAME  FROM DP_PRODUCT_MASTER PM WHERE ST.PRODUCT_ID=PM.PRODUCT_ID) PRODUCT_NAME, "+
		" (SELECT CIRCLE_NAME  FROM VR_CIRCLE_MASTER CM WHERE ACC.CIRCLE_ID=CM.CIRCLE_ID) CIRCLE_NAME, "+
  		"  (SELECT ACC.CONTACT_NAME" +
  		"   FROM VR_ACCOUNT_DETAILS AS ACC WHERE ST.FSE_ID=ACC.ACCOUNT_ID ) FSE_NAME," +
  		"  (SELECT LOGIN.LOGIN_NAME" +
  		"  FROM VR_LOGIN_MASTER AS LOGIN WHERE ST.DISTRIBUTOR_ID=LOGIN.LOGIN_ID ) DIST_LOGIN_NAME, (SELECT PROD.ORACLE_ITEM_CODE   FROM DP_PRODUCT_MASTER AS PROD WHERE ST.PRODUCT_ID=PROD.PRODUCT_ID ) ITEM_CODE, " +
  		" (SELECT ACC.CONTACT_NAME  FROM VR_ACCOUNT_DETAILS AS ACC WHERE ST.RETAILER_ID=ACC.ACCOUNT_ID ) RETAILER_NAME" +
  		"  FROM DP_STOCK_INVENTORY_ASSIGNED AS ST ,VR_ACCOUNT_DETAILS AS ACC WHERE ST.DISTRIBUTOR_ID=ACC.ACCOUNT_ID AND DATE(ST.ASSIGN_DATE)  BETWEEN DATE(CAST(? AS VARCHAR(10))) AND DATE(CAST(? AS VARCHAR(10)))";

	public static final String SQL_SELECT_UPLOADED_COUNT	=	"select CONFIG_VALUE from DP_CONFIGURATION_MASTER where CONFIG_ID=6 and CONFIG_DESC = current date with ur";


	  public static final String GET_REPORT_LIST = "SELECT ST.SERIAL_NO,ST.ASSIGN_DATE,ST.CUSTOMER_ID,(SELECT ACC.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS ACC " +
	  		"	WHERE ST.DISTRIBUTOR_ID=ACC.ACCOUNT_ID ) DIST_NAME," +
	  		" (SELECT PRODUCT_NAME  FROM DP_PRODUCT_MASTER PM WHERE ST.PRODUCT_ID=PM.PRODUCT_ID) PRODUCT_NAME, "+
			" (SELECT CIRCLE_NAME  FROM VR_CIRCLE_MASTER CM WHERE ACC.CIRCLE_ID=CM.CIRCLE_ID) CIRCLE_NAME, "+
	  		"  (SELECT ACC.CONTACT_NAME" +
	  		"   FROM VR_ACCOUNT_DETAILS AS ACC WHERE ST.FSE_ID=ACC.ACCOUNT_ID ) FSE_NAME," +
	  		"  (SELECT LOGIN.LOGIN_NAME" +
	  		"  FROM VR_LOGIN_MASTER AS LOGIN WHERE ST.DISTRIBUTOR_ID=LOGIN.LOGIN_ID ) DIST_LOGIN_NAME,(SELECT PROD.ORACLE_ITEM_CODE   FROM DP_PRODUCT_MASTER AS PROD WHERE ST.PRODUCT_ID=PROD.PRODUCT_ID ) ITEM_CODE," +
	  		" (SELECT ACC.CONTACT_NAME  FROM VR_ACCOUNT_DETAILS AS ACC WHERE ST.RETAILER_ID=ACC.ACCOUNT_ID ) RETAILER_NAME" +
	  		"  FROM DP_STOCK_INVENTORY_ASSIGNED AS ST  ,VR_ACCOUNT_DETAILS AS ACC WHERE ST.DISTRIBUTOR_ID=ACC.ACCOUNT_ID AND ST.DISTRIBUTOR_ID=? AND date(ST.ASSIGN_DATE)  BETWEEN DATE(CAST(? AS VARCHAR(10))) AND DATE(CAST(? AS VARCHAR(10))) ";

	  /*-- End Here __*/
	  /*-- UPDATION  Ends Here __*/


/*--  Added by SHilpa khanna for Inter SSD Stock Transfer Report */
	  /*-- Updated by Shilpa Khanna For Inter SSD Stock Transfer Report Change -- */
	  public static final String GET_REPORT_LIST_INTER_SSD_STOCK_TRANSFER ="SELECT CM.CIRCLE_NAME,ST.CREATED_DATE,AD.CONTACT_NAME, (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.FROM_DIST_ID=AD.ACCOUNT_ID ) FROM_DIST, " +
	  		" (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE  AD.ACCOUNT_ID= (SELECT AD.PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.FROM_DIST_ID=AD.ACCOUNT_ID )) FROM_TSM,"+
	  		" (SELECT PM.PRODUCT_NAME FROM DP_PRODUCT_MASTER AS PM WHERE ST.PRODUCT_ID=PM.PRODUCT_ID) PRODUCT_NAME, REQ_TRANSFER_QTY,DC_DATE , (SELECT AD.CONTACT_NAME FROM" +
	  		" VR_ACCOUNT_DETAILS AS AD WHERE ST.TO_DIST_ID=AD.ACCOUNT_ID ) TO_DIST ," +
	  		" (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE  AD.ACCOUNT_ID= (SELECT AD.PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.TO_DIST_ID=AD.ACCOUNT_ID )) TO_TSM," +
			" TRANSFERRED_QTY,UPDATED_DATE" +
	  		" from DP_DIST_STOCK_TRANSFER ST,VR_ACCOUNT_DETAILS AD,VR_CIRCLE_MASTER CM where" +
	  		" AD.CIRCLE_ID = CM.CIRCLE_ID AND ST.CREATED_BY=AD.ACCOUNT_ID AND (AD.ACCOUNT_LEVEL=3 OR  AD.ACCOUNT_LEVEL=4) AND AD.CIRCLE_ID=?  AND DATE(ST.CREATED_DATE) BETWEEN DATE(CAST(? AS VARCHAR(10))) AND DATE(CAST(? AS VARCHAR(10)))  WITH UR";



	  public static final String GET_REPORT_LIST_INTER_SSD_STOCK_TRANSFER_ALL ="SELECT CM.CIRCLE_NAME,ST.CREATED_DATE,AD.CONTACT_NAME, (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.FROM_DIST_ID=AD.ACCOUNT_ID ) FROM_DIST, " +
	  	" (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE  AD.ACCOUNT_ID= (SELECT AD.PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.FROM_DIST_ID=AD.ACCOUNT_ID )) FROM_TSM,"+
	  	" (SELECT PM.PRODUCT_NAME FROM DP_PRODUCT_MASTER AS PM WHERE ST.PRODUCT_ID=PM.PRODUCT_ID) PRODUCT_NAME, REQ_TRANSFER_QTY,DC_DATE , (SELECT AD.CONTACT_NAME FROM" +
		" VR_ACCOUNT_DETAILS AS AD WHERE ST.TO_DIST_ID=AD.ACCOUNT_ID ) TO_DIST ," +
		" (SELECT AD.CONTACT_NAME FROM VR_ACCOUNT_DETAILS AS AD WHERE  AD.ACCOUNT_ID= (SELECT AD.PARENT_ACCOUNT FROM VR_ACCOUNT_DETAILS AS AD WHERE ST.TO_DIST_ID=AD.ACCOUNT_ID )) TO_TSM," +
		" TRANSFERRED_QTY,UPDATED_DATE" +
		" from DP_DIST_STOCK_TRANSFER ST,VR_ACCOUNT_DETAILS AD,VR_CIRCLE_MASTER CM where" +
		" AD.CIRCLE_ID = CM.CIRCLE_ID AND ST.CREATED_BY=AD.ACCOUNT_ID AND (AD.ACCOUNT_LEVEL=3 OR  AD.ACCOUNT_LEVEL=4)  AND DATE(ST.CREATED_DATE) BETWEEN DATE(CAST(? AS VARCHAR(10))) AND DATE(CAST(? AS VARCHAR(10)))  WITH UR";

	  /*-- Updation Ends Here ---*/
/*-- End Here ---*/

	  /*-- Added by SHilpa khanna for Stock Summary Report */
	  // Added by harbans
//	Updated by Shilpa Khanna to modify conditional Check in  DP_STOCK_INVENTORY_ASSIGNED Status =3
		public static final String GET_REPORT_LIST_ONE_DIST_ALL_PROD =" select 'STK_INV' AS DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY SI , DP_PRODUCT_MASTER DPM " +
	  		" where SI.DISTRIBUTOR_ID=? AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND " +
	  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10)))  AND SI.PRODUCT_ID=DPM.PRODUCT_ID AND DPM.CIRCLE_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'STK_INV_ASS' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY_ASSIGNED SI, DP_PRODUCT_MASTER DPM where SI.DISTRIBUTOR_ID=? AND STATUS=3 AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND" +
	  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10))) AND SI.PRODUCT_ID=DPM.PRODUCT_ID AND DPM.CIRCLE_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'STK_INV_OPN' AS DATA_TYPE, CPM.CPE_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=CPM.CPE_PRODUCT_ID) AS PRODUCT," +
	  		" CLOSING_STOCK AS STOCK_COUNT from DP_OPEN_STOCK_DTL SI, DP_CPE_RCV_PRODUCT_MAPPING CPM where SI.DIST_ID=? AND SI.PRODUCT_ID=RCV_PRODUCT_ID AND CPM.CIRCLE_ID=? " +
	  		" UNION " +
	  		" select 'STK_INV_REV' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY SI , DP_PRODUCT_MASTER DPM " +
	  		" where SI.CREATED_BY=? AND STATUS IN ('COL','ERR','IDC') AND DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND DATE(SI.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10))) AND SI.PRODUCT_ID=DPM.PRODUCT_ID AND DPM.CIRCLE_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'INV_CHANGE' DATA_TYPE, IC.NEW_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER" +
	  		" where PRODUCT_ID=IC.NEW_PRODUCT_ID) AS PRODUCT, count(NEW_SR_NO) AS STOCK_COUNT" +
	  		" from DP_REV_INVENTORY_CHANGE IC, DP_PRODUCT_MASTER DPM where NEW_DIST_D=? AND IC.NEW_PRODUCT_ID=DPM.PRODUCT_ID " +
	  		" AND STATUS='REC' AND (DATE(IC.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND DATE(IC.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10)))) AND DPM.CIRCLE_ID=? group by  IC.NEW_PRODUCT_ID"+
	  		" UNION " +
	  		" select 'STK_INV_REV_S2W' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY_HIST SI , DP_PRODUCT_MASTER DPM where SI.CREATED_BY=? AND DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND" +
	  		" DATE(SI.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10))) AND SI.PRODUCT_ID=DPM.PRODUCT_ID AND DPM.CIRCLE_ID=? AND STATUS IN ('AIW','MSN','S2W') group by  SI.PRODUCT_ID order by DATA_TYPE " ;


	  /*-- Ends  Here ---*/

	public static final String SQL_C2S_UPDATE_CONFIG_MASTER_NEW	=	"update DP_CONFIGURATION_MASTER set config_desc=current date , CONFIG_VALUE=? where CONFIG_ID=6";

	public static final String SQL_C2S_UPDATE_CONFIG_MASTER	=	"update DP_CONFIGURATION_MASTER set config_desc=current date , CONFIG_VALUE = char((int(CONFIG_VALUE) + ? ))  where CONFIG_ID=6";

	//added by saumya for PO report
/*	public static final String GET_PO_REPORT = "select (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PH.PR_DIST_ID) AS DIST_NAME, "
													+"(select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=PD.PRODUCT_ID) AS PRODUCT_NAME, "
														+"PH.PR_NO, TO_CHAR(PH.PR_DATE, 'dd/MM/yyyy') AS PR_DATE, POH.PO_NO, "
														+"TO_CHAR(POH.PO_DATE, 'dd/MM/yyyy') AS PO_DATE, CD.VALUE AS PO_STATUS, IH.INV_NO, "
														+"TO_CHAR(IH.INV_DATE, 'dd/MM/yyyy') AS INVOICE_DATE, IH.DC_NO, TO_CHAR(IH.DC_DT, 'dd/MM/yyyy') AS DC_DATE, "
														+"IH.DD_CHEQUE_NO, TO_CHAR(IH.DD_CHEQUE_DATE, 'dd/MM/yyyy') AS DD_CHEQUE_DATE, PD.RAISED_QTY, POD.PO_QTY, ID.INV_QTY, "
														+"IH.STATUS AS PR_STATUS "

														+"from DP_PR_HEADER PH, DP_PR_DETAILS PD, PO_HEADER POH, DP_CONFIGURATION_DETAILS CD, INVOICE_HEADER IH, "
														+"INVOICE_DETAILS ID, PO_DETAILS POD, VR_ACCOUNT_DETAILS VAD, VR_CIRCLE_MASTER VCM "

														+"where PH.PR_NO=PD.PR_NO AND PH.PR_NO=POH.PR_NO AND POH.PO_STATUS=CD.ID AND CD.CONFIG_ID=2 AND POH.PO_NO=IH.PO_NO "
														+"AND IH.INV_NO=ID.INV_NO AND POH.PO_NO=POD.PO_NO AND DATE(PH.PR_DATE) >=? AND DATE(PH.PR_DATE) <= ? "
														+"WITH UR";*/

	/*Commented by Nazim Hussain as incorrect data was fetched coz no product mapping at PR and PO details level
	public static final String GET_PO_REPORT = "  select ACCOUNT_NAME AS DIST_NAME, VLM.LOGIN_NAME, CIRCLE_NAME," +
			" (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=PD.PRODUCT_ID) AS PRODUCT_NAME," +
			" TO_CHAR(PH.PR_DATE, 'dd/MM/yyyy') AS PR_DATE, PH.PR_NO, POH.PO_NO, TO_CHAR(POH.PO_DATE, 'dd/MM/yyyy') AS PO_DATE," +
			" (select CD.VALUE from DP_CONFIGURATION_DETAILS CD where CD.ID=POH.PO_STATUS AND CD.CONFIG_ID=2) AS PO_STATUS," +
			" IH.DIST_ACTION_DATE AS PO_ACC_DATE, IH.INV_NO, TO_CHAR(IH.INV_DATE, 'dd/MM/yyyy') AS INVOICE_DATE, IH.DC_NO," +
			" TO_CHAR(IH.DC_DT, 'dd/MM/yyyy') AS DC_DATE, IH.DD_CHEQUE_NO, TO_CHAR(IH.DD_CHEQUE_DATE, 'dd/MM/yyyy') AS DD_CHEQUE_DATE," +
			" PD.RAISED_QTY, POD.PO_QTY, ID.INV_QTY, IH.STATUS AS PR_STATUS, POH.REMARKS," +
			" coalesce((select PRODUCT_UNIT from DP_PRODUCT_MASTER where PRODUCT_ID=PD.PRODUCT_ID), 'Z') AS UNIT" +
			" from VR_ACCOUNT_DETAILS  VAD, VR_CIRCLE_MASTER CM, VR_LOGIN_MASTER VLM, DP_PR_DETAILS PD, DP_PR_HEADER PH" +
			" left outer join PO_HEADER POH on POH.PR_NO=PH.PR_NO left outer join PO_DETAILS POD on POD.PO_NO=POH.PO_NO" +
			" left outer join INVOICE_HEADER IH on IH.PO_NO=POH.PO_NO left outer join INVOICE_DETAILS ID on ID.INV_NO=IH.INV_NO" +
			" where VLM.LOGIN_ID=PH.PR_DIST_ID AND PH.PR_NO=PD.PR_NO AND DATE(PH.PR_DATE) >=? AND DATE(PH.PR_DATE) <= ?" +
			" AND ACCOUNT_ID=PH.PR_DIST_ID AND VAD.CIRCLE_ID=CM.CIRCLE_ID ";*/
//ended by saumya
	//Added by Nazim hussain for Po Status report

	public static final String GET_PO_REPORT = " select PH.PR_NO, VAD.ACCOUNT_NAME AS DIST_NAME, VLM.LOGIN_NAME, CM.CIRCLE_NAME, PM.PRODUCT_NAME, TO_CHAR(PH.PR_DATE, 'dd/MM/yyyy') AS PR_DATE, PH.PR_NO, PO.PO_NO" +
		" , TO_CHAR(PO.PO_DATE, 'dd/MM/yyyy') AS PO_DATE, (select CD.VALUE from DP_CONFIGURATION_DETAILS CD where CD.ID=PO.PO_STATUS AND CD.CONFIG_ID=2) AS PO_STATUS" +
		" ,IH.DIST_ACTION_DATE AS PO_ACC_DATE, IH.INV_NO, TO_CHAR(IH.INV_DATE, 'dd/MM/yyyy') AS INVOICE_DATE, IH.DC_NO, TO_CHAR(IH.DC_DT, 'dd/MM/yyyy') AS DC_DATE," +
		" IH.DD_CHEQUE_NO, TO_CHAR(IH.DD_CHEQUE_DATE, 'dd/MM/yyyy') AS DD_CHEQUE_DATE, PD.RAISED_QTY, POD.PO_QTY, ID.INV_QTY, IH.STATUS AS PR_STATUS, PO.REMARKS," +
		" coalesce((select PRODUCT_UNIT from DP_PRODUCT_MASTER where PRODUCT_ID=PD.PRODUCT_ID), 'Z') AS UNIT" +
		" from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, VR_CIRCLE_MASTER CM,  DP_PRODUCT_MASTER PM, DP_PR_HEADER PH, DP_PR_DETAILS PD" +
		" left outer join PO_HEADER PO on PD.PR_NO=PO.PR_NO left outer join PO_DETAILS POD on PO.PO_NO=POD.PO_NO AND POD.EXT_PRODUCT_ID=PD.EXT_PRODUCT_ID" +
		" left outer join INVOICE_HEADER IH on POD.PO_NO=IH.PO_NO left outer join INVOICE_DETAILS ID on IH.INV_NO=ID.INV_NO AND ID.EXT_PRODUCT_ID=POD.EXT_PRODUCT_ID" +
		" where PH.PR_DIST_ID=VAD.ACCOUNT_ID AND VAD.ACCOUNT_ID=VLM.LOGIN_ID AND VAD.CIRCLE_ID=CM.CIRCLE_ID" +
		" AND PD.PRODUCT_ID=PM.PRODUCT_ID AND PH.PR_NO=PD.PR_NO AND (DATE(PH.PR_DATE) >=? AND DATE(PH.PR_DATE) <= ?) ";
//	 added By naveen
	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_DIST = "SELECT VLM.LOGIN_NAME,VAD.ACCOUNT_NAME,VAD.CONTACT_NAME,VAD.DISTRIBUTOR_LOCATOR,VAD.LAPU_MOBILE_NO   "
																+" ,CM.CIRCLE_NAME,VAD.ACCOUNT_ADDRESS,CTM.CITY_NAME,VAD.PIN_NUMBER,DM.EXT_DIST_ID,VAD.EMAIL,VAD.MOBILE_NUMBER,  "
																+" (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS A WHERE A.ACCOUNT_ID=VAD.PARENT_ACCOUNT) AS PARENT_NAME,  "
																+" (SELECT LOGIN_NAME FROM VR_LOGIN_MASTER A WHERE A.LOGIN_ID=VAD.PARENT_ACCOUNT) AS PARENT_LOGIN ,VAD.ACCOUNT_ID "
																+" FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM,DP_DISTRIBUTOR_MAPPING DM,  "
																+" VR_CIRCLE_MASTER CM , VR_CITY_MASTER CTM  "
																+" WHERE VAD.ACCOUNT_LEVEL =6   "
																+" AND VAD.ACCOUNT_ID=VLM.LOGIN_ID  "
																+" AND DM.DP_DIST_ID=VAD.ACCOUNT_ID  "
																+" AND VAD.CIRCLE_ID=CM.CIRCLE_ID  "
																+" AND VAD.CITY_ID=CTM.CITY_ID  "
																+" AND VAD.PARENT_ACCOUNT = ?  ORDER BY ACCOUNT_NAME "
																+" WITH UR";
	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_DIST_ALL = "SELECT VLM.LOGIN_NAME,VAD.ACCOUNT_NAME,VAD.CONTACT_NAME,VAD.DISTRIBUTOR_LOCATOR,VAD.LAPU_MOBILE_NO   "
																		+" ,CM.CIRCLE_NAME,VAD.ACCOUNT_ADDRESS,CTM.CITY_NAME,VAD.PIN_NUMBER,DM.EXT_DIST_ID,VAD.EMAIL,VAD.MOBILE_NUMBER,  "
																		+" (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS A WHERE A.ACCOUNT_ID=VAD.PARENT_ACCOUNT) AS PARENT_NAME,  "
																		+" (SELECT LOGIN_NAME FROM VR_LOGIN_MASTER A WHERE A.LOGIN_ID=VAD.PARENT_ACCOUNT) AS PARENT_LOGIN ,VAD.ACCOUNT_ID "
																		+" FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM,DP_DISTRIBUTOR_MAPPING DM,  "
																		+" VR_CIRCLE_MASTER CM , VR_CITY_MASTER CTM  "
																		+" WHERE VAD.ACCOUNT_LEVEL =?   "
																		+" AND VAD.ACCOUNT_ID=VLM.LOGIN_ID  "
																		+" AND DM.DP_DIST_ID=VAD.ACCOUNT_ID  "
																		+" AND VAD.CIRCLE_ID=CM.CIRCLE_ID  "
																		+" AND VAD.CITY_ID=CTM.CITY_ID ORDER BY ACCOUNT_NAME "
																		+" WITH UR";

	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_DIST_ALL_TSM_ALL = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_LEVEL =? and CIRCLE_ID = ? with ur ";
	
	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and vad.IS_DISABLE='N' and vad.ACCOUNT_LEVEL = ? with ur";
	
//	Added by Shilpa to get All TSM list including Inactive also

	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_FROM_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vad.ACCOUNT_LEVEL = ? with ur";
	
	//	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_TSM_NOT_ALL = "select account_id, account_name from vr_account_details where IS_DISABLE='N' and ACCOUNT_LEVEL = ? AND CIRCLE_ID = ?  with ur";
	
	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_TSM_NOT_ALL = "select a.account_id, a.account_name  " 
																				+" from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm  "
																				+" where a.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and a.ACCOUNT_ID=b.ACCOUNT_ID "
																				+" and a.IS_DISABLE='N' and a.ACCOUNT_LEVEL = ? " 
																				+" AND b.CIRCLE_ID = ?  with ur";
	

//	Added by Shilpa to get All TSM list under selected circle including Inactive also
	
	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_FROM_TSM_NOT_ALL = "select a.account_id, a.account_name  " 
		+" from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm  "
		+" where a.account_id = vlm.LOGIN_ID and a.ACCOUNT_ID=b.ACCOUNT_ID "
		+" and a.ACCOUNT_LEVEL = ? " 
		+" AND b.CIRCLE_ID = ?  with ur";
	

	public static final String GET_ACCOUNT_DETAILS_VIEW_HIERARCHY_TSM = "SELECT VLM.LOGIN_NAME,VAD.ACCOUNT_NAME,VAD.CONTACT_NAME,VAD.DISTRIBUTOR_LOCATOR,VAD.LAPU_MOBILE_NO   "
																	+"  ,CM.CIRCLE_NAME,VAD.ACCOUNT_ADDRESS,CTM.CITY_NAME,VAD.PIN_NUMBER,DM.EXT_DIST_ID,VAD.EMAIL,VAD.MOBILE_NUMBER,  "
																	+"  (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS A WHERE A.ACCOUNT_ID=VAD.PARENT_ACCOUNT) AS PARENT_NAME,  "
																	+"  (SELECT LOGIN_NAME FROM VR_LOGIN_MASTER A WHERE A.LOGIN_ID=VAD.PARENT_ACCOUNT) AS PARENT_LOGIN ,VAD.ACCOUNT_ID "
																	+"  FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM,DP_DISTRIBUTOR_MAPPING DM,  "
																	+"  VR_CIRCLE_MASTER CM , VR_CITY_MASTER CTM  "
																	+"  WHERE VAD.ACCOUNT_LEVEL =?  "
																	+"  AND VAD.CIRCLE_ID = ?  "
																	+"  AND VAD.ACCOUNT_ID=VLM.LOGIN_ID  "
																	+"  AND DM.DP_DIST_ID=VAD.ACCOUNT_ID  "
																	+"  AND VAD.CIRCLE_ID=CM.CIRCLE_ID  "
																	+"  AND VAD.CITY_ID=CTM.CITY_ID  ORDER BY ACCOUNT_NAME "
																	+"  WITH UR";
	public static final String GET_VIEW_HIERARCHY_DISABLE_TSM_DIST= "select ACCOUNT_NAME,ACCOUNT_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID in( select PARENT_ACCOUNT from VR_ACCOUNT_DETAILS a, VR_LOGIN_MASTER b where a.ACCOUNT_ID = b.LOGIN_ID and b.LOGIN_ID = ? ) with UR";

	/*public static final String GET_HIERARCHY_DIST= "SELECT VLM.LOGIN_NAME,VAD.ACCOUNT_NAME,VAD.LAPU_MOBILE_NO "
													+" FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM "
													+" WHERE VAD.ACCOUNT_ID=? "
													+" AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
													+" WITH UR ";

	public static final String GET_HIERARCHY_FSE="	SELECT VAD.ACCOUNT_NAME,VAD.LAPU_MOBILE_NO,VAD.ACCOUNT_ID  "
												+" FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM "
												+" WHERE VAD.PARENT_ACCOUNT=? "
												+" AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
												+" WITH UR ";

	public static final String GET_HIERARCHY_RETAILER="	SELECT VAD.ACCOUNT_NAME,VAD.LAPU_MOBILE_NO,VAD.ACCOUNT_ID  "
		+" FROM VR_ACCOUNT_DETAILS VAD ,VR_LOGIN_MASTER VLM "
		+" WHERE VAD.PARENT_ACCOUNT=? "
		+" AND VAD.ACCOUNT_ID=VLM.LOGIN_ID "
		+" WITH UR ";
	*/
	public static final String GET_HIERARCHY ="select (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.account_id) as DIST_ACCOUNT_NAME,  "
											+" (select LOGIN_NAME from VR_LOGIN_MASTER where LOGin_ID=a.account_id) as DIST_LOGIN_NAME, "
											+" (select LAPU_MOBILE_NO from VR_ACCOUNT_DETAILS where ACCOUNT_ID=a.account_id) as DIST_LAPU_MOBILE_NO, "
											+" (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FSE.account_id) as FSE_ACCOUNT_NAME, "
											+" (select LAPU_MOBILE_NO from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FSE.account_id) as FSE_LAPU_MOBILE_NO, "
											+" (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=RET.account_id) as RET_ACCOUNT_NAME, "
											+" (select LAPU_MOBILE_NO from VR_ACCOUNT_DETAILS where ACCOUNT_ID=RET.account_id) as RET_LAPU_MOBILE_NO "
											+" from VR_ACCOUNT_DETAILS a left outer join "
											+" (select c.* from VR_ACCOUNT_DETAILS b , VR_ACCOUNT_DETAILS c where  b.ACCOUNT_ID=c.PARENT_ACCOUNT and b.ACCOUNT_LEVEL=6) FSE "
											+" on a.ACCOUNT_ID=FSE.PARENT_ACCOUNT  left outer join "
											+" (select f.* from VR_ACCOUNT_DETAILS d , VR_ACCOUNT_DETAILS e,VR_ACCOUNT_DETAILS f where  d.ACCOUNT_ID=e.PARENT_ACCOUNT and d.ACCOUNT_LEVEL=6 and e.account_id=f.parent_account) RET "
											+" on FSE.ACCOUNT_ID=RET.PARENT_ACCOUNT "
											+" where a.ACCOUNT_LEVEL=6 and a.ACCOUNT_ID=? "
											+" order by DIST_ACCOUNT_NAME ,FSE_ACCOUNT_NAME,RET_ACCOUNT_NAME ";


	public static final String GET_LAST_PO ="select max(a.PR_NO) as PR_NO ,b.PR_DIST_ID,VCM.CIRCLE_NAME,VLM.LOGIN_NAME,VAD.DISTRIBUTOR_LOCATOR  "
											+" ,VAD.ACCOUNT_NAME,VAD1.ACCOUNT_NAME as TSM_ACCOUNT_NAME"
											+" from DP_PR_DETAILS a , DP_PR_HEADER b,VR_ACCOUNT_DETAILS VAD,VR_CIRCLE_MASTER VCM, "
											+" VR_LOGIN_MASTER VLM , VR_ACCOUNT_DETAILS VAD1 "
											+" where a.PR_NO=b.pr_no "
											+" and VAD.ACCOUNT_ID=b.PR_DIST_ID "
											+" and VCM.CIRCLE_ID=VAD.CIRCLE_ID "
											+" and VLM.LOGIN_ID=VAD.ACCOUNT_ID and VAD1.ACCOUNT_ID=VAD.PARENT_ACCOUNT" ;


	public static final String GET_LAST_PO_DETAILS="select a.DP_OPEN_STOCK,a.DP_QTY,a.RAISED_QTY,b.PRODUCT_NAME ,DATE(PH.PO_DATE) as PO_DATE,a.INHAND_QTY  "
													+" from   DP_PRODUCT_MASTER b ,DP_PR_HEADER c , DP_PR_DETAILS a  left outer join PO_HEADER PH  on  PH.PR_NO=a.PR_NO "
													+" where a.PR_NO=? "
													+" and a.PRODUCT_ID=b.PRODUCT_ID and a.PR_NO=c.PR_NO  ";

	public static final String GET_STOCK_SUMM_DIST_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, " +
									"(SELECT ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=AD.PARENT_ACCOUNT ) AS PARENT_NAME" +
									" from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_ID=?";

	 /*-- Added by SHilpa khanna for Stock Summary Report */
//	Updated by Shilpa Khanna to modify conditional Check in  DP_STOCK_INVENTORY_ASSIGNED Status =3
	public static final String GET_REPORT_LIST_ONE_DIST_ONE_PROD =" select 'STK_INV' AS DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY SI" +
	  		" where SI.DISTRIBUTOR_ID=? AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND " +
	  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10))) AND SI.PRODUCT_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'STK_INV_ASS' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY_ASSIGNED SI where SI.DISTRIBUTOR_ID=? AND STATUS=3 AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND" +
	  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10)))  AND SI.PRODUCT_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'STK_INV_OPN' AS DATA_TYPE, CPM.CPE_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=CPM.CPE_PRODUCT_ID) AS PRODUCT," +
	  		" CLOSING_STOCK AS STOCK_COUNT from DP_OPEN_STOCK_DTL SI, DP_CPE_RCV_PRODUCT_MAPPING CPM where SI.DIST_ID=? AND SI.PRODUCT_ID=RCV_PRODUCT_ID  AND CPM.CPE_PRODUCT_ID=? " +
	  		" UNION " +
	  		" select 'STK_INV_REV' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY SI" +
	  		" where SI.CREATED_BY=? AND STATUS IN ('COL','ERR','IDC') AND  DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND DATE(SI.CREATED_ON) <=DATE(CAST(? AS VARCHAR(10)))  AND SI.PRODUCT_ID=? group by  SI.PRODUCT_ID" +
	  		" UNION " +
	  		" select 'INV_CHANGE' DATA_TYPE, IC.NEW_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER" +
	  		" where PRODUCT_ID=IC.NEW_PRODUCT_ID) AS PRODUCT, count(NEW_SR_NO) AS STOCK_COUNT" +
	  		" from DP_REV_INVENTORY_CHANGE IC where NEW_DIST_D=? AND STATUS='REC' AND (DATE(IC.CREATED_ON) >= " +
	  		" DATE(CAST(? AS VARCHAR(10))) AND DATE(IC.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10)))) AND IC.NEW_PRODUCT_ID=? group by  IC.NEW_PRODUCT_ID"+
	  		" UNION " +
	  		" select 'STK_INV_REV_S2W' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
	  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY_HIST SI where SI.CREATED_BY=? AND DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND" +
	  		" DATE(SI.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10)))  AND SI.PRODUCT_ID=? AND STATUS IN ('AIW','MSN','S2W') group by  SI.PRODUCT_ID order by DATA_TYPE ";


	  // Add by harbans for MSI Report
	//Updated by Shilpa Khanna to modify conditional Check in  DP_STOCK_INVENTORY_ASSIGNED Status =3
	  public static final String GET_REPORT_LIST_ONE_DIST_ALL_PROD_PAN_INDIA =" select 'STK_INV' AS DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY SI" +
  		" where SI.DISTRIBUTOR_ID=? AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND " +
  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10))) group by  SI.PRODUCT_ID" +
  		" UNION " +
  		" select 'STK_INV_ASS' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
  		" count(SI.SERIAL_NO) AS STOCK_COUNT from DP_STOCK_INVENTORY_ASSIGNED SI where SI.DISTRIBUTOR_ID=? AND STATUS=3 AND DATE(SI.DISTRIBUTOR_PURCHASE_DATE) >= DATE(CAST(? AS VARCHAR(10))) AND" +
  		" DATE(SI.DISTRIBUTOR_PURCHASE_DATE) <= DATE(CAST(? AS VARCHAR(10))) group by SI.PRODUCT_ID" +
  		" UNION " +
  		" select 'STK_INV_OPN' AS DATA_TYPE, CPM.CPE_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=CPM.CPE_PRODUCT_ID) AS PRODUCT," +
  		" CLOSING_STOCK AS STOCK_COUNT from DP_OPEN_STOCK_DTL SI, DP_CPE_RCV_PRODUCT_MAPPING CPM where SI.DIST_ID=? AND SI.PRODUCT_ID=RCV_PRODUCT_ID  " +
  		" UNION " +
  		" select 'STK_INV_REV' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY SI" +
  		" where SI.CREATED_BY=? AND STATUS IN ('COL','ERR','IDC') AND DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND DATE(SI.CREATED_ON) <=DATE(CAST(? AS VARCHAR(10))) group by SI.PRODUCT_ID" +
  		" UNION " +
  		" select 'INV_CHANGE' DATA_TYPE, IC.NEW_PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER" +
  		" where PRODUCT_ID=IC.NEW_PRODUCT_ID) AS PRODUCT, count(NEW_SR_NO) AS STOCK_COUNT" +
  		" from DP_REV_INVENTORY_CHANGE IC where NEW_DIST_D=? " +
  		" AND STATUS='REC' AND (DATE(IC.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND DATE(IC.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10)))) group by  IC.NEW_PRODUCT_ID"+
  		" UNION " +
  		" select 'STK_INV_REV_S2W' DATA_TYPE, SI.PRODUCT_ID AS PRODUCT_ID, (select PRODUCT_NAME from DP_PRODUCT_MASTER where PRODUCT_ID=SI.PRODUCT_ID) AS PRODUCT," +
  		" count(SI.SERIAL_NO_COLLECT) AS STOCK_COUNT from DP_REV_STOCK_INVENTORY_HIST SI where SI.CREATED_BY=? AND DATE(SI.CREATED_ON) >= DATE(CAST(? AS VARCHAR(10))) AND" +
  		" DATE(SI.CREATED_ON) <= DATE(CAST(? AS VARCHAR(10))) AND STATUS IN ('AIW','MSN','S2W') group by  SI.PRODUCT_ID order by DATA_TYPE " ;



	  public static final String GET_STOCK_CIRCLE_DIST_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, " +
		"(SELECT ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=AD.PARENT_ACCOUNT ) AS PARENT_NAME" +
		" from VR_ACCOUNT_DETAILS AD where AD.CIRCLE_ID=? and AD.ACCOUNT_LEVEL=6";

	  public static final String GET_STOCK_ALL_DIST_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, " +
		"(SELECT ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=AD.PARENT_ACCOUNT ) AS PARENT_NAME" +
		" from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=6";

	  public static final String GET_STOCK_ALL_DIST_ONE_TSM_LIST = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, " +
		"(SELECT ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=AD.PARENT_ACCOUNT ) AS PARENT_NAME" +
		" from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=6 and AD.CIRCLE_ID=? and AD.PARENT_ACCOUNT=?";

	  public static final String GET_STOCK_ALL_DIST_ONE_TSM_LIST_All_CR = "select AD.ACCOUNT_ID, AD.ACCOUNT_NAME, " +
		"(SELECT ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=AD.PARENT_ACCOUNT ) AS PARENT_NAME" +
		" from VR_ACCOUNT_DETAILS AD where AD.ACCOUNT_LEVEL=6 and AD.PARENT_ACCOUNT=?";

	  /*-- Ends  Here ---*/
	  /*-- Added by Shilpa Khanna for STB Status Web Service*/
	  public static final String SR_NO_AVAILABLE_CHECK = "Select count(SERIAL_NO_COLLECT) SR_NUM from DP_REV_STOCK_INVENTORY_HIST  where SERIAL_NO_COLLECT=? with ur";
	  public static final String CONFIG_STATUS_CHECK = "Select CONFIG_ID,ID,VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID=7 with ur";
	  public static final String UPDATE_REV_STOCK_STATUS = "update DP_REV_STOCK_INVENTORY_HIST set STATUS = ? where SERIAL_NO_COLLECT=?";
	  /*--Ends Here  --- */

	  /*--Added by Shilpa khanna for Shipment Error correction*/
	  public static final String GET_DC_NOS_LIST = "select distinct(DC_NO),INV_NO from DP_WRONG_SHIP_DETAIL where ASSIGNED_TO=? AND TSM_DECISION is null with ur";


	  /*--Ends Here  --- */
	  /*--Added by Shilpa khanna for Shipment Error correction*/
	  public static final String UPDATE_INVOICE_HEADER = "UPDATE INVOICE_HEADER SET STATUS=?, ACCEPT_DATE=? WHERE INV_NO=?";


	  /*--Ends Here  --- */
	  /*--Added by Shilpa khanna for In hand Quantity Exception Report*/
	  public static final String GET_EXCEPTION_PO ="select a.PR_NO as PR_NO ,b.PR_DIST_ID,VCM.CIRCLE_NAME,VLM.LOGIN_NAME,VAD.DISTRIBUTOR_LOCATOR  "
			+" ,VAD.ACCOUNT_NAME,VAD1.ACCOUNT_NAME as TSM_ACCOUNT_NAME"
			+" from DP_PR_DETAILS a , DP_PR_HEADER b,VR_ACCOUNT_DETAILS VAD,VR_CIRCLE_MASTER VCM, "
			+" VR_LOGIN_MASTER VLM , VR_ACCOUNT_DETAILS VAD1 "
			+" where a.PR_NO=b.pr_no "
			+" and VAD.ACCOUNT_ID=b.PR_DIST_ID "
			+" and VCM.CIRCLE_ID=VAD.CIRCLE_ID "
			+" and VLM.LOGIN_ID=VAD.ACCOUNT_ID and VAD1.ACCOUNT_ID=VAD.PARENT_ACCOUNT" ;
	  /*--Ends Here  --- */
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_ALL_CIRCLE_ALL_TSM = "select VAD.ACCOUNT_ID,VAD.account_name from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_LEVEL =? and CIRCLE_ID = ? with ur ";
//Updated by Shilpa Khanna for STB Status in DP_REV_DELIVERY_CHALAN_DETAIL
	public static final String UPDATE_REV_DEL_DETL_STATUS = "update DP_REV_DELIVERY_CHALAN_DETAIL set STATUS = ? where SERIAL_NO=?";
	public static final String GET_SR_COUNT = "Select count(SERIAL_NO) from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=? with ur";
//Commented by Shilpa Khanna for Status updation
	//	public static final String GET_STATUS_COUNT = "Select count(STATUS) from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=? and (STATUS ='MSN' or STATUS ='AIW') with ur ";
	public static final String GET_STATUS_COUNT = "Select count(STATUS) from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=? and STATUS ='AIW' with ur ";
//Ends Here

//	Updated by Shilpa Khanna for Reverse Stock Collection Validation
	public static final String REV_STOK_INV_CHK="Select SERIAL_NO_COLLECT from DP_REV_STOCK_INVENTORY where SERIAL_NO_COLLECT=? with ur";
	public static final String REV_STOK_INV_HIST_CHK="Select STATUS from DP_REV_STOCK_INVENTORY_HIST where SERIAL_NO_COLLECT=? with ur";
    //Updated By Shilpa Khanna for Product Mapping Check
	//public static final String STOK_INV_CHK="Select SERIAL_NO, PRODUCT_ID, FSE_ID from DP_STOCK_INVENTORY where SERIAL_NO=? with ur";
	public static final String STOK_INV_CHK="Select INV.SERIAL_NO, INV.PRODUCT_ID, INV.FSE_ID,(Select PM.PRODUCT_TYPE from  DP_PRODUCT_MASTER PM where PM.PRODUCT_ID =INV.PRODUCT_ID) PRODUCT_TYPE,(Select PM.PRODUCT_ID from  DP_PRODUCT_MASTER PM where PM.PARENT_PRODUCT_ID =INV.PRODUCT_ID and PM.PRODUCT_ID != INV.PRODUCT_ID)PM_PARENT_ID from DP_STOCK_INVENTORY INV  where INV.SERIAL_NO=? AND MARK_DAMAGED='N' with ur";
	//public static final String STOK_INV_ASSIGN_CHK="Select PRODUCT_ID,ASSIGN_DATE from DP_STOCK_INVENTORY_ASSIGNED where SERIAL_NO=? with ur";
	public static final String STOK_INV_ASSIGN_CHK="Select ASG.PRODUCT_ID,ASG.ASSIGN_DATE, (Select PM.PRODUCT_ID  from  DP_PRODUCT_MASTER PM where PM.PARENT_PRODUCT_ID =ASG.PRODUCT_ID and PM.PRODUCT_ID != ASG.PRODUCT_ID)PM_PARENT_ID from DP_STOCK_INVENTORY_ASSIGNED ASG where ASG.SERIAL_NO=? with ur ";
	//Updated By Shilpa Khanna Ends here
//	Commented by Nazim Hussain as 30 day validation failed
//	public static final String STOK_INV_ASSIGN_DOA_CHK="Select PRODUCT_ID,ASSIGN_DATE from DP_STOCK_INVENTORY_ASSIGNED where SERIAL_NO=? and" +
//			" DAYS(current timestamp)  <= DAYS(ASSIGN_DATE)+30 with ur";
	//Modified by nazim hussain to implement 30 days validation check in DOA
	//Modified by Shilpa Khanna for Product Mapping Check
	//public static final String STOK_INV_ASSIGN_DOA_CHK="select PRODUCT_ID, CASE  WHEN (DAYS(current_timestamp) <= (DAYS(ASSIGN_DATE)+30)) THEN 1" +
	//		" ELSE 2 end case from (Select PRODUCT_ID, ASSIGN_DATE from DP_STOCK_INVENTORY_ASSIGNED where SERIAL_NO=?) records WITH UR";

	public static final String GET_TSM_DIST_TRANSACTION_INAC= "select VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, DP_DISTRIBUTOR_MAPPING DDM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and VLM.STATUS='I' and DDM.DP_DIST_ID = VLM.LOGIN_ID and DDM.PARENT_ACCOUNT = ? and VAD.CIRCLE_ID= ? with ur";
	
	public static final String STOK_INV_ASSIGN_DOA_CHK="select records.PRODUCT_ID, (Select PM.PRODUCT_TYPE from  DP_PRODUCT_MASTER PM where PM.PRODUCT_ID=records.PRODUCT_ID) PRODUCT_TYPE, " +
			"(Select PM.PRODUCT_ID  from  DP_PRODUCT_MASTER PM where PM.PARENT_PRODUCT_ID =records.PRODUCT_ID and PM.PRODUCT_ID != records.PRODUCT_ID)PM_PARENT_ID, CASE  WHEN (DAYS(current_timestamp) <= (DAYS(records.ASSIGN_DATE)+30)) THEN 1 " +
			"ELSE 2 end case from (Select PRODUCT_ID, ASSIGN_DATE from DP_STOCK_INVENTORY_ASSIGNED where SERIAL_NO=?) records WITH UR";

	public static final String C2S_BULK_UPLOAD_CHK="Select SR_NO from DP_C2S_BULK_UPLOAD where SR_NO=? with ur";

	// Ends Here
//Added By shilpa Khanna for DP_STOCK_INVENTORY_ASSIGNED check for C2S
	public static final String STOK_INV_ASSIGN_CHK_C2S="Select ASG.PRODUCT_ID, (Select PM.PRODUCT_ID  from  DP_PRODUCT_MASTER PM where PM.PARENT_PRODUCT_ID =ASG.PRODUCT_ID and PM.PRODUCT_ID != ASG.PRODUCT_ID)PM_PARENT_ID from DP_STOCK_INVENTORY_ASSIGNED ASG where ASG.SERIAL_NO=? with ur ";

//Added by Shilpa Khanna for Reverse collection of SWAP type
	public static final String MOVE_RECORDS_STOCK_INVENTORY_SWAP_SERIAL_NO = " INSERT INTO DP_STOCK_INVENTORY_ASSIGNED(PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, STATUS, ASSIGN_DATE) "
		+" SELECT PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, FSE_ID, FSE_PURCHASE_DATE, RETAILER_ID, RETAILER_PURCHASE_DATE, DAMAGE_REMARKS, DAMAGED_BY, DAMAGE_COST, INV_NO, REMARKS, MSISDN, TRANSACTION_ID, "+Constants.STOCK_STATUS_ASSIGNED_SWAP_COLLECTION+", CURRENT_TIMESTAMP ASSIGN_DATE "
		+" FROM DP_STOCK_INVENTORY WHERE PRODUCT_ID = ? AND SERIAL_NO = ? AND DISTRIBUTOR_ID=? "
		+" WITH UR ";

	public static final String UPDATE_RECORDS_INVENTORY_CHANGE = "UPDATE DP_REV_INVENTORY_CHANGE set STATUS=?, UPDATED_ON =current timestamp where DEFECTIVE_SR_NO=? and DEFECTIVE_PRODUCT_ID=? ";


//	Added by Shilpa Khanna to get product category list
	public static final String GET_PRODUCT_CATEGORY_LIST = " SELECT VALUE as PRODUCT_CATEGORY, ID FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID in ( ? ) with ur ";
	public static final String GET_PRODUCT_CATEGORY_LIST_RECO = " SELECT VALUE as PRODUCT_CATEGORY, ID FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=8 with ur ";
	public static final String GET_PRODUCT_CATEGORY_LIST_AJAX = " SELECT VALUE as PRODUCT_CATEGORY, ID FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID in (?) ";
	//public static final String GET_PRODUCT_CATEGORY_LIST = " SELECT VALUE as PRODUCT_CATEGORY, ID FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=8";

//	Added by Shilpa Khanna to get GET INVENTORY CHANGE LIST
	/*public static final String GET_INVENTORY_CHANGE_LIST = "Select INV.COLLECTION_ID,(Select CM.COLLECTION_NAME from DP_REV_COLLECTION_MST CM" +
	" where CM.COLLECTION_ID= Smallint( INV.COLLECTION_ID)) COLLECTION_TYPE, INV.DEFECTIVE_SR_NO,INV.DEFECTIVE_PRODUCT_ID,(Select PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM" +
	" where PM.PRODUCT_ID= INV.DEFECTIVE_PRODUCT_ID) DEFECT_PRODUCT_NAME, INV.NEW_SR_NO," +
	" INV.NEW_PRODUCT_ID, (Select PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM" +
	" where PM.PRODUCT_ID= INV.NEW_PRODUCT_ID) NEW_PRODUCT_NAME, (DAYS(current_date) - DAYS(INV.INV_CHANGE_DATE)) AEGING," +
	" INV.STATUS, INV.INV_CHANGE_DATE, INV.CUSTOMER_ID,INV.defect_id,(select defect_name from DP_REV_DEFECT_MST where defect_id=INV.defect_id),INV.REQ_ID from DP_REV_INVENTORY_CHANGE INV where INV.COLLECTION_ID=? and INV.NEW_DIST_D =? and INV.STATUS='REC' and INV.ERROR_STATUS!='ERR' ORDER BY AEGING DESC WITH UR";*/
//Neetika BFR 9	
	public static final String GET_INVENTORY_CHANGE_LIST = "Select INV.COLLECTION_ID,(Select CM.COLLECTION_NAME from DP_REV_COLLECTION_MST CM" +
	" where CM.COLLECTION_ID= Smallint( INV.COLLECTION_ID)) COLLECTION_TYPE, INV.DEFECTIVE_SR_NO,INV.DEFECTIVE_PRODUCT_ID,(Select PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM" +
	" where PM.PRODUCT_ID= INV.DEFECTIVE_PRODUCT_ID fetch first 1 rows only) DEFECT_PRODUCT_NAME, INV.NEW_SR_NO," +
	" INV.NEW_PRODUCT_ID, (Select PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM" +
	" where PM.PRODUCT_ID= INV.NEW_PRODUCT_ID fetch first 1 rows only) NEW_PRODUCT_NAME, (DAYS(current_date) - DAYS(INV.INV_CHANGE_DATE)) AEGING," +
	" INV.STATUS, INV.INV_CHANGE_DATE, INV.CUSTOMER_ID,INV.defect_id,(select defect_name from DP_REV_DEFECT_MST where defect_id=INV.defect_id),INV.REQ_ID,INV.REJECTED_DC from DP_REV_INVENTORY_CHANGE INV where INV.COLLECTION_ID=? and INV.NEW_DIST_D =? and INV.STATUS='REC' and INV.ERROR_STATUS!='ERR' ORDER BY AEGING DESC WITH UR";

//	Added by Shilpa Khanna to Check Product Business , Parent , Product Type unique combination check

	public static final String SQL_PRODUCT_BUSINESS_PARENT_TYPE_CHECK = "Select product_name from DP_PRODUCT_MASTER where CATEGORY_CODE=? and circle_id=? and PRODUCT_CATEGORY=? and PRODUCT_TYPE =? with ur";
//	Added by Shilpa Khanna to Check whether the product is already parent to any other project
	public static final String SQL_PRODUCT_PARENT_CHECK = "Select product_name from DP_PRODUCT_MASTER where PARENT_PRODUCT_ID = ?  and PRODUCT_ID != ? with ur";
//	Added by Shilpa Khanna to Check Product Business , Parent , Product Type unique combination check for Edit
	public static final String SQL_PRODUCT_BUSINESS_PARENT_TYPE_CHECK_EDIT = "Select product_name from DP_PRODUCT_MASTER where CATEGORY_CODE=? and circle_id=? and PRODUCT_CATEGORY=? and PRODUCT_TYPE =?  and PRODUCT_ID <> ?  with ur";
//	Added by Shilpa Khanna to Check whether the product is already parent to any other project in Edit
	public static final String SQL_PRODUCT_PARENT_CHECK_EDIT = "Select product_name from DP_PRODUCT_MASTER where PARENT_PRODUCT_ID = ?  and PRODUCT_ID != ? and PRODUCT_ID <> ? with ur";
//	Added by Shilpa Khanna to 23-09-2011
	public static final String SQL_STOCK_INVENTORY_ASSIGN_CHECK = "Select PRODUCT_ID,SERIAL_NO,DISTRIBUTOR_ID from DP_STOCK_INVENTORY_ASSIGNED where SERIAL_NO=?";

	public static final String SQL_STOCK_INVENTORY_ASSIGN_UPDATE = "update DP_STOCK_INVENTORY_ASSIGNED set STATUS=11 where PRODUCT_ID=? and SERIAL_NO =? and DISTRIBUTOR_ID =?";
//Added by SHilpa Khanna 26-09-2011 to get count of ALL status
	public static final String GET_ALL_STATUS_COUNT = "Select count(STATUS), 'MSN_COUNT' from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=? " +
			" and STATUS ='MSN'" +
			" UNION" +
			" Select count(STATUS) , 'AIW_COUNT' from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=?" +
			" and STATUS ='AIW' " +
			" UNION" +
			" Select count(STATUS) , 'ABW_COUNT' from DP_REV_DELIVERY_CHALAN_DETAIL where DC_NO=?" +
			" and STATUS ='ABW'  with ur ";

	//Added by Nazim Hussain to fetch MIS Report Drop-Downs
	public static final String GET_ALL_CIRCLES = "SELECT CIRCLE_ID, CIRCLE_NAME FROM VR_CIRCLE_MASTER where STATUS=? ORDER BY CIRCLE_ID";
	public static final String GET_ALL_ACCOUNTS = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_LEVEL=? and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	public static final String GET_ALL_ACCOUNTS_SINGLE_CIRCLE = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_LEVEL=? and CIRCLE_ID=? and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	
	public static final String GET_ALL_ACCOUNTS_SINGLE_CIRCLE_MULTIPLE_CIRCLE = "select distinct a.ACCOUNT_ID, ACCOUNT_NAME " 
																				+" from VR_ACCOUNT_DETAILS a,DP_ACCOUNT_CIRCLE_MAP b "
																				+" where ACCOUNT_LEVEL=?  "
																				+" and b.CIRCLE_ID=? "
																				+" and a.ACCOUNT_ID=b.ACCOUNT_ID "
																				+" and (IS_DISABLE='N' or IS_DISABLE is null) " 
																				+" ORDER BY ACCOUNT_NAME with ur";
	
	
	public static final String GET_ALL_ACCOUNTS_MULTIPLE_CIRCLE = "select distinct a.ACCOUNT_ID, ACCOUNT_NAME " 
																+" from VR_ACCOUNT_DETAILS a,DP_ACCOUNT_CIRCLE_MAP b "
																+" where ACCOUNT_LEVEL=?  "
																+" and b.circle_id in(select distinct circle_id from DP_ACCOUNT_CIRCLE_MAP where account_id= ? ) "
																+" and a.ACCOUNT_ID=b.ACCOUNT_ID "
																+" and (IS_DISABLE='N' or IS_DISABLE is null) " 
																+" ORDER BY ACCOUNT_NAME with ur";
	

	
																					
	public static final String GET_ALL_ACCOUNTS_MULTIPLE_CIRCLES = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_LEVEL=? and CIRCLE_ID in (?2) and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	public static final String GET_ALL_ACCOUNTS_UNDER_SINGLE_ACCOUNT = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=? and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	public static final String GET_ALL_ACCOUNTS_UNDER_MULTIPLE_ACCOUNTS = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT in (?1) and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	public static final String GET_ALL_PRODUCTS_SINGLE_CIRCLE = "select PRODUCT_ID, PRODUCT_NAME from DP_PRODUCT_MASTER where CM_STATUS='A' and CATEGORY_CODE=? and CIRCLE_ID=? ORDER BY PRODUCT_NAME with ur";
	public static final String GET_ALL_ACCOUNT = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where (IS_DISABLE='N' or IS_DISABLE is null) ";
	public static final String GET_ALL_ACCOUNT_GENERIC_REPORT = "select distinct a.ACCOUNT_ID , ACCOUNT_NAME from VR_ACCOUNT_DETAILS a,DP_ACCOUNT_CIRCLE_MAP b where (IS_DISABLE='N' or IS_DISABLE is null) and a.ACCOUNT_ID=b.ACCOUNT_ID  ";
	public static final String GET_ALL_ACCOUNT_CIRCLES = "select circle_id from DP_ACCOUNT_CIRCLE_MAP  where ACCOUNT_ID=? with ur  "; //aDded by neetika for Reports incident where circles are not getting set for multicircle user
// Added By Naveen for PO Acceptance Bulk...

	public static final String GET_ALL_SERIALS_NO_PRODUCT = "SELECT SERIAL_NO,INV_NO,DPM.PRODUCT_ID,DPM.PRODUCT_NAME "
											+"	FROM DP_STOCK_INVENTORY DSI, VR_ACCOUNT_DETAILS VAD ,DP_PRODUCT_MASTER DPM "
											+"	 WHERE  "
											+"	DSI.MARK_DAMAGED='I' AND "
											+"	DSI.DISTRIBUTOR_ID=VAD.ACCOUNT_ID "
											+"	AND VAD.CIRCLE_ID=? "
											+" AND (DSI.INV_NO=? OR DSI.INV_NO=?) "
											+"	and DPM.PRODUCT_ID=DSI.PRODUCT_ID "
											+"	WITH UR";
	
	public static final String GET_ALL_SERIALS_NO_PRODUCT_MISSING = "SELECT SERIAL_NO,inv.INV_NO,inv.DC_NO "
																+" FROM DP_STOCK_INVENTORY DSI, INVOICE_HEADER inv "
																+" WHERE   "
																+" DSI.MARK_DAMAGED='I' "  
																+" and DSI.INV_NO=inv.INV_NO "
																+" AND inv.DC_NO= ? "
																+" WITH UR"; //changed query Neetika 0n 9 sept 2013
	
	
	
	/** Added by ARTI **/

	public static final String SQL_SELECT_WH_DISTID ="select LM.login_id as OLM_ID ,  WM.wh_code as WAREHOUSE_CODE from DP_WH_MASTER WM,VR_LOGIN_MASTER LM , VR_ACCOUNT_DETAILS AD where  WM.circle_id = AD.circle_id  and LM.LOGIN_ID=AD.Account_id  and LM.LOGIN_NAME = ? and WM.is_active = '1' and WM.wh_code like ?";

	public static final String SQL_SELECT_DISTID ="select AD.ACCOUNT_ID, AD.DISTRIBUTOR_LOCATOR,PM.PRODUCT_ID,PM.ORACLE_ITEM_CODE,PM.PRODUCT_TYPE from VR_LOGIN_MASTER LM, VR_ACCOUNT_DETAILS AD " +
	" left outer join DP_PRODUCT_MASTER PM on UPPER(PRODUCT_NAME)=? and PM.CIRCLE_ID=AD.CIRCLE_ID AND CM_STATUS='A'" +
	" where LM.LOGIN_ID=AD.ACCOUNT_ID and LM.LOGIN_NAME=? with ur";

	public static final String SQL_SELECT_ST_DISTID ="select AD.ACCOUNT_ID,PM.PRODUCT_ID from VR_LOGIN_MASTER LM, VR_ACCOUNT_DETAILS AD " +
	" left outer join DP_PRODUCT_MASTER PM on UPPER(PRODUCT_NAME)=? and PM.CIRCLE_ID=AD.CIRCLE_ID AND CM_STATUS='A'" +
	" where LM.LOGIN_ID=AD.ACCOUNT_ID and LM.LOGIN_NAME=? with ur";

	public static final String SQL_SELECT_OLMID =  "select count(*)  from VR_LOGIN_MASTER where LOGIN_NAME =  ? and GROUP_ID =7  with ur";
	public static final String SQL_SELECT_OLMID_BY_ACCOUNT_NAME =  "select count(*)  from VR_LOGIN_MASTER LM , VR_ACCOUNT_DETAILS AD where LM.LOGIN_NAME =  ? and LM.GROUP_ID =7 and AD.ACCOUNT_ID=LM.LOGIN_ID  with ur";
	public static final String SQL_SELECT_OPEN_STOCK_LEVEL="select count(*) from DP_DIST_STOCK_LEVEL where DIST_ID = ? and PRODUCT_ID = ?  with ur" ;
	public static final String SQL_UPDATE_STOCK_LEVEL = "update DP_DIST_STOCK_LEVEL set MIN_DAYS = ? ,MAX_DAYS =? ,updated_on = ?  where DIST_ID = ? and PRODUCT_ID = ?";
	public static final String SQL_INSERT_STOCK_LEVEL =  "INSERT INTO DP_DIST_STOCK_LEVEL(DIST_ID, DIST_OLM_ID, PRODUCT_ID, MIN_DAYS, MAX_DAYS, CREATED_ON) VALUES(?, ?, ?, ?, ?, ?)";
	public static final String SQL_ALL_SELECT_STOCK_LEVEL = "select VM.LOGIN_NAME as DIST_OLM_ID, PM.PRODUCT_NAME, (select circle_name from VR_CIRCLE_MASTER where circle_id = AD.circle_id) CIRCLE_NAME, coalesce(MIN_DAYS, 0) AS MIN_DAYS, coalesce(MAX_DAYS, 0) AS MAX_DAYS" +
	" from VR_ACCOUNT_DETAILS AD inner join VR_LOGIN_MASTER VM on AD.ACCOUNT_ID=VM.LOGIN_ID AND AD.IS_DISABLE='N' and AD.ACCOUNT_LEVEL=6" +
	" inner join DP_PRODUCT_MASTER PM on AD.CIRCLE_ID=PM.CIRCLE_ID AND PM.CM_STATUS='A' and PM.CATEGORY_CODE=1 " +
	" left outer join DP_DIST_STOCK_LEVEL DSL on DSL.DIST_ID=AD.ACCOUNT_ID AND PM.PRODUCT_ID=DSL.PRODUCT_ID " +
	" order by AD.circle_id,DIST_OLM_ID,PM.PRODUCT_TYPE Desc,PM.PRODUCT_NAME with ur";
	public static final String SQL_SELECT_SECURITY_OLMID =  "select login_id  from VR_LOGIN_MASTER where LOGIN_NAME =  ? and GROUP_ID =7";

	public static final String SQL_ALL_SELECT_SECURITY =  "select vm.LOGIN_NAME as DIST_OLM_ID, ad.ACCOUNT_NAME,(select circle_name from VR_CIRCLE_MASTER where circle_id = ad.circle_id) CIRCLE_NAME, coalesce(ds.SECURITY_AMOUNT, 0) as SECURITY_AMOUNT, coalesce(ds.LOAN_AMOUNT, 0) as LOAN_AMOUNT" +
	" from VR_ACCOUNT_DETAILS ad inner join VR_LOGIN_MASTER vm on ad.ACCOUNT_ID=vm.LOGIN_ID and ad.IS_DISABLE='N' and ad.ACCOUNT_LEVEL=6 left outer join DP_DIST_SECURITY_LOAN ds on ds.DIST_ID=ad.ACCOUNT_ID with ur";

	public static final String SQL_SELECT_SECURITY_LOAN="SELECT count(*) FROM DPDTH.DP_DIST_SECURITY_LOAN where DIST_ID = ?  with ur";
	public static final String SQL_UPDATE_SECURITY_LOAN = "update DP_DIST_SECURITY_LOAN set SECURITY_AMOUNT = ? ,LOAN_AMOUNT = ? ,UPDATED_BY = ?,UPDATED_ON = ? where DIST_ID = ? ";
	public static final String SQL_INSERT_SECURITY_LOAN_TRANS =  "INSERT INTO DP_DIST_SECURITY_LOAN_TRANS(DIST_ID, DIST_OLM_ID, SECURITY_AMOUNT, LOAN_AMOUNT, UPDATED_BY, UPDATED_ON) VALUES(?, ?, ?, ?, ?, ?)";
	public static final String  SQL_INSERT_SECURITY_LOAN= "INSERT INTO DP_DIST_SECURITY_LOAN(DIST_ID, DIST_OLM_ID, SECURITY_AMOUNT, LOAN_AMOUNT, CREATED_BY, CREATED_ON)VALUES(?, ?, ?, ?, ?, ?)";

	public static final String  SQL_Fetch_Circle_ID= "select circle_id from vr_circle_master where CIRCLE_CODE = ?  with ur";

	public static final String  SQL_INSERT_WHT_MST= "INSERT INTO DPDTH.DP_WH_MASTER(WH_CODE, WH_NAME, WH_ADDRESS1, WH_ADDRESS2, WH_PHONE, WH_FAX, TIN_NUMBER, WH_TYPE, CIRCLE_ID, COMP_CODE, AREA, SUB_AREA, SRC_TYPE, DEFECTIVE_COMP_CODE, DEFECTIVE_AREA, DEFECTIVE_SUB_AREA, DEFECTIVE_SRC_TYPE, CHURN_COMP_CODE, CHURN_AREA, CHURN_SUB_AREA, CHURN_SRC_TYPE, INTRANSIT_COMP_CODE, INTRANSIT_AREA, INTRANSIT_SUB_AREA, INTRANSIT_SRC_TYPE, NON_REP_COMP_CODE, NON_REP_AREA, NON_REP_SUB_AREA, NON_REP_SRC_TYPE, IS_ACTIVE, ACTIVATION_DATE, LAST_UPADTED_ON, IS_EDIT, WH_EMPLOYEE) "+
	 " VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

	public static final String  SQL_UPDATE_WHT_MST=  "UPDATE DP_WH_MASTER "+
	" SET WH_NAME=?, WH_ADDRESS1=?, WH_ADDRESS2=?, WH_PHONE=?, WH_FAX=?, TIN_NUMBER=?, WH_TYPE=?, CIRCLE_ID=?, COMP_CODE=?, AREA=?, SUB_AREA=?, SRC_TYPE=?, DEFECTIVE_COMP_CODE=?, DEFECTIVE_AREA=?, DEFECTIVE_SUB_AREA=?, DEFECTIVE_SRC_TYPE=?, CHURN_COMP_CODE=?, CHURN_AREA=?, CHURN_SUB_AREA=?, CHURN_SRC_TYPE=?, INTRANSIT_COMP_CODE=?, INTRANSIT_AREA=?, INTRANSIT_SUB_AREA=?, INTRANSIT_SRC_TYPE=?, NON_REP_COMP_CODE=?, NON_REP_AREA=?, NON_REP_SUB_AREA=?, NON_REP_SRC_TYPE=?, IS_ACTIVE=?, LAST_UPADTED_ON=?, IS_EDIT=?, WH_EMPLOYEE=? "+
	 " WHERE WH_CODE=?";
	public static final String  SQL_CHECK_WH_MASTER="select DISTID from DP_WH_DIST_MAP  where WH_CODE=? with ur";
	

	public static final String  SQL_DELETE_WHE_MST= "DELETE FROM DP_WH_EMPLOYEE_MAP where WH_CODE = ?";
	public static final String  SQL_INSERT_WHE_MST= "INSERT INTO DP_WH_EMPLOYEE_MAP(WH_CODE, WH_EMPLOYEE) VALUES(?, ?)";



//	End by ARTI
	public static final String SQL_UPDATE_PRODUCT_SECURITY = "UPDATE DP_PRODUCT_SECURITY SET  PRODUCT_SECURITY=?,UPDATED_BY=?, UPDATED_ON=? WHERE PRODUCT_CATEGORY=? and PRODUCT_TYPE=?";
	public static final String SQL_ALL_SELECT_PRODUCT_SECURITY = "SELECT CASE WHEN PRODUCT_TYPE='1' THEN PRODUCT_CATEGORY ELSE PRODUCT_CATEGORY || ' SWAP' END as PRODUCT_CATEGORY" +
			" , PRODUCT_SECURITY FROM DP_PRODUCT_SECURITY  order by PRODUCT_TYPE desc with ur";
	public static final String SQL_SELECT_PRODUCT_SECURITY = "SELECT count(1) FROM DP_PRODUCT_SECURITY where upper(PRODUCT_CATEGORY) = ?  with ur";
	public static final String SQL_SELECT_OPEN_STOCK="Select OPENING_STOCK , SALE from DP_OPEN_STOCK_DTL where DIST_ID = ? and PRODUCT_ID=? with ur";
	public static final String SQL_UPDATE_OPEN_STOCK="Update DP_OPEN_STOCK_DTL set RECO_QTY =?, LAST_UPDATE_DATE=current date, CLOSING_STOCK=? where  DIST_ID = ? and PRODUCT_ID=? ";
	public static final String SQL_INSERT_OPEN_STOCK="INSERT INTO DP_OPEN_STOCK_DTL(DIST_ID, DIST_ORACLE_LOCATOR_CODE, PRODUCT_ID," +
			" OPENING_STOCK, SALE, CLOSING_STOCK, LAST_UPDATE_DATE, ORACLE_PRODUCT_CODE, PRODUCT_TYPE, RECO_QTY, inv_change)" +
			" VALUES(?, ?, ?, ?, ?, ?, current date, ?, ?, ?, 0)";
	//ADDED BY SUGANDHA to download data for nonserilized bulkupload by dth admin 
	public static final String SQL_SELECT_BULKUPLOAD_STOCK="select LM.LOGIN_NAME, PM.PRODUCT_NAME, coalesce(OS.CLOSING_STOCK, 0) as CLOSING_STOCK "+
				"	from VR_ACCOUNT_DETAILS AD inner join VR_LOGIN_MASTER LM on AD.ACCOUNT_ID=LM.LOGIN_ID and LM.GROUP_ID=7 "+
				"	inner join DP_PRODUCT_MASTER PM on AD.CIRCLE_ID=PM.CIRCLE_ID and PM.CATEGORY_CODE=1 "+
				"	left outer join DP_OPEN_STOCK_DTL OS on OS.DIST_ID=AD.ACCOUNT_ID and PM.PRODUCT_ID=OS.PRODUCT_ID with ur";
	//ADDED BY SUGANDHA ENDS HERE
	//Added by shilpa khanna for Inter SSD Transfer by DTH Admin
	public static final String SQL_SELECT_CIRCLES = " SELECT CIRCLE_ID ,CIRCLE_NAME FROM VR_CIRCLE_MASTER WHERE STATUS='A' and CIRCLE_ID!=0 with ur";
	public static final String SQL_GET_SERIAL_NO ="Select SERIAL_NO from DP_STOCK_INVENTORY where PRODUCT_ID = ? and DISTRIBUTOR_ID =? and FSE_ID is null and MARK_DAMAGED='N' with ur";
	public static final String SQL_UPDATE_STOCK_INVENTORY ="Update DP_STOCK_INVENTORY set DISTRIBUTOR_ID =? where SERIAL_NO=?";

	public static final String SQL_SELECT_LOGIN_NAME ="Select CONTACT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=? with ur";
	public static final String SQL_PRODUCT_LIST ="Select RD.PRODUCT_ID ,PM.PRODUCT_NAME from DP_RECO_DIST_DETAILS RD, DP_PRODUCT_MASTER PM where RD.PRODUCT_ID = PM.PRODUCT_ID and RD.RECO_ID= ? and RD.DIST_ID= ? and RD.CREATED_BY = 0 and RD.RECO_STATUS !='SUCCESS' ";
	//public static final String SQL_SELECT_LOGIN_NAME ="Select LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID=? with ur";
	//Added by Shilpa Khanna for Reco Details
	//public static final String SQL_RECO_PERIOD_LIST = " Select ID,FROM_DATE,TO_DATE from DP_RECO_PERIOD where (current date) > TO_DATE and IS_RECO_START =1  and IS_RECO_CLOSED !=1  AND FROM_DATE >= (select date(CREATED_DT) from VR_ACCOUNT_DETAILS where account_id=?)  order by ID with ur";//need to change this for BFR 10 neetika on 7feb 2013
	public static final String SQL_RECO_PERIOD_LIST = " Select ID,FROM_DATE,TO_DATE from DP_RECO_PERIOD where (current date) > TO_DATE and IS_RECO_START =1  and IS_RECO_CLOSED !=1  AND TO_DATE >= (select date(CREATED_DATE) from dp_distributor_mapping where dp_dist_id=? and TRANSACTION_TYPE_ID=2 )  order by ID with ur";
	public static final String SQL_RECO_PRODUCT_LIST = "Select RD.PRODUCT_TYPE,RD.RECO_ID,RD.DIST_ID,RD.PRODUCT_ID,RD.PRODUCT_TYPE,RD.CREATED_BY,RD.SER_OPEN_STOCK,RD.NSER_OPEN_STOCK,RD.DEFECTIVE_OPEN_STOCK, " +
								"RD.UPGRADE_OPEN_STOCK,RD.CHURN_OPEN_STOCK,RD.RECEIVED_WH,RD.PENDING_PO_CLOSING, RD.PENDING_PO_OPENING,RD.PENDING_DC_OPENING, "+
								"RD.RECEIVED_INTER_SSD_OK,RD.RECEIVED_INTER_SSD_DEF,RD.RECEIVED_HIERARCHY_TRANS,RD.RECEIVED_UPGRADE,RD.RECEIVED_CHURN,RD.INVENTORY_CHANGE, "+
								"RD.RETURNED_FRESH,RD.PENDING_DC_CLOSING,RD.RETURNED_INTER_SSD_OK,RD.RETURNED_HIERARCHY_TRANS,RD.RETURNED_INTER_SSD_DEF,RD.RETURNED_DOA_BI,RD.RETURNED_DOA_AI, "+
								"RD.RETURNED_C2S,RD.RETURNED_CHURN,RD.RETURNED_SWAP,RD.FLUSH_OUT_OK,RD.FLUSH_OUT_DEFECTIVE,RD.RECO_QTY, "+
								"RD.SER_ACTIVATION,RD.NSER_ACTIVATION,RD.SER_CLOSING_STOCK,RD.NSER_CLOSING_STOCK,RD.DEF_CLOSING_STOCK, "+
								"RD.UPGRADE_CLOSING_STOCK,RD.CHURN_CLOSING_STOCK,case when RD.CREATED_BY=0 then 'SUCCESS' else RD.RECO_STATUS end as RECO_STATUS,PM.PRODUCT_NAME from DP_RECO_DIST_DETAILS RD, " +
								" DP_PRODUCT_MASTER PM where RD.PRODUCT_ID = PM.PRODUCT_ID and RD.RECO_ID=? and RD.DIST_ID=?"; 
	public static final String SQL_RECO_PRODUCT_LIST_ = "Select RD.PRODUCT_TYPE,RD.RECO_ID,RD.DIST_ID,RD.PRODUCT_ID,RD.PRODUCT_TYPE,RD.CREATED_BY,RD.SER_OPEN_STOCK,RD.NSER_OPEN_STOCK,RD.DEFECTIVE_OPEN_STOCK, " +
	"RD.UPGRADE_OPEN_STOCK,RD.CHURN_OPEN_STOCK,RD.RECEIVED_WH,RD.PENDING_PO_CLOSING, RD.PENDING_PO_OPENING,RD.PENDING_DC_OPENING, "+
	"RD.RECEIVED_INTER_SSD_OK,RD.RECEIVED_INTER_SSD_DEF,RD.RECEIVED_HIERARCHY_TRANS,RD.RECEIVED_UPGRADE,RD.RECEIVED_CHURN,RD.INVENTORY_CHANGE, "+
	"RD.RETURNED_FRESH,RD.PENDING_DC_CLOSING,RD.RETURNED_INTER_SSD_OK,RD.RETURNED_HIERARCHY_TRANS,RD.RETURNED_INTER_SSD_DEF,RD.RETURNED_DOA_BI,RD.RETURNED_DOA_AI, "+
	"RD.RETURNED_C2S,RD.RETURNED_CHURN,RD.RETURNED_SWAP,RD.FLUSH_OUT_OK,RD.FLUSH_OUT_DEFECTIVE,RD.RECO_QTY, "+
	"RD.SER_ACTIVATION,RD.NSER_ACTIVATION,RD.SER_CLOSING_STOCK,RD.NSER_CLOSING_STOCK,RD.DEF_CLOSING_STOCK, "+
	"RD.UPGRADE_CLOSING_STOCK,RD.CHURN_CLOSING_STOCK,RD.RECO_STATUS,PM.PRODUCT_NAME from DP_RECO_DIST_DETAILS RD, " +
	" DP_PRODUCT_MASTER PM where RD.PRODUCT_ID = PM.PRODUCT_ID and RD.RECO_ID=? and RD.DIST_ID=? and RD.CREATED_BY=0"; // Adding by pratap and RD.CREATED_BY=0 

	
	public static final String SQL_RECO_SUCCESS_PRODUCT_LIST_ = "SELECT RD.SER_CLOSING_STOCK,RD.NSER_CLOSING_STOCK,RD.DEF_CLOSING_STOCK, "+
	"RD.UPGRADE_CLOSING_STOCK,RD.CHURN_CLOSING_STOCK ,RD.PENDING_DC_CLOSING from DP_RECO_DIST_DETAILS RD, " +
	" DP_PRODUCT_MASTER PM where RD.PRODUCT_ID = PM.PRODUCT_ID and RD.RECO_ID = ? AND RD.DIST_ID = ? AND RD.PRODUCT_ID = ? AND  RD.CREATED_BY  > 0 AND RD.RECO_STATUS ='SUCCESS' with ur";
	
	
	public static final String SQL_RECO_STATUS= "SELECT count(reco_status) FROM DP_RECO_DIST_DETAILS where reco_id in (select id from "+
												"DP_RECO_PERIOD where ((TO_DATE + grace_period days -1 days) <current date) and IS_RECO_CLOSED=0 "+
												" ) and dist_id=? and reco_status='INITIATE' ";


	public static final String SQL_UPDATE_RECO_DETAIL="UPDATE DP_RECO_DIST_DETAILS SET  SER_OPEN_STOCK=?, NSER_OPEN_STOCK=?,DEFECTIVE_OPEN_STOCK=?,UPGRADE_OPEN_STOCK=?,CHURN_OPEN_STOCK =?, "+
							" RECEIVED_WH=?,PENDING_PO_CLOSING=?, RECEIVED_INTER_SSD_OK=?,RECEIVED_INTER_SSD_DEF=?,RECEIVED_HIERARCHY_TRANS=?, RECEIVED_UPGRADE=?, RECEIVED_CHURN=?, RETURNED_FRESH=?, "+
			 				" INVENTORY_CHANGE=?,PENDING_DC_CLOSING=?,RETURNED_INTER_SSD_DEF=?,RETURNED_INTER_SSD_OK=?,RETURNED_HIERARCHY_TRANS=?, RETURNED_DOA_BI=?, RETURNED_DOA_AI=?, RETURNED_SWAP=?,RETURNED_CHURN=?, "+
			 				" RETURNED_C2S=?, SER_ACTIVATION=?, NSER_ACTIVATION=?, SER_CLOSING_STOCK=?,NSER_CLOSING_STOCK=?,DEF_CLOSING_STOCK=?,UPGRADE_CLOSING_STOCK=?,CHURN_CLOSING_STOCK=?,PENDING_PO_OPENING=?,PENDING_DC_OPENING=?," +
			 				" FLUSH_OUT_OK =? ,FLUSH_OUT_DEFECTIVE=?,RECO_QTY=?, RECO_STATUS=?, "+
			 				" UPDATED_ON=current timestamp,RECO_TYPE=? , REMARKS=? WHERE  RECO_ID=? and DIST_ID=? and PRODUCT_ID=? and CREATED_BY=? ";

/*
	public static final String SQL_UPDATE_RECO_DETAIL="UPDATE DP_RECO_DIST_DETAILS SET  SER_OPEN_STOCK=?, NSER_OPEN_STOCK=?, RECEIVED_WH=?," +
			" RECEIVED_INTRANSIT=?, RECEIVED_INTER_SSD=?, RECEIVED_UPGRADE=?, RECEIVED_CHURN=?, RETURNED_FRESH=?," +
			" RETURNED_INTRANSIT=?, RETURNED_INTER_SSD=?, RETURNED_DOA_BI=?, RETURNED_DOA_AI=?, RETURNED_SWAP=?," +
			" RETURNED_C2S=?, SER_ACTIVATION=?, NSER_ACTIVATION=?, CLOSING_STOCK=?, RECO_STATUS=?," +
			" UPDATED_ON=current timestamp WHERE  RECO_ID=? and DIST_ID=? and PRODUCT_ID=? and CREATED_BY=?";
*/
	public static final String SQL_UPDATE_RECO_STATUS="UPDATE DP_RECO_DIST_DETAILS SET RECO_STATUS=?,UPDATED_ON=current timestamp WHERE  RECO_ID=? and DIST_ID=? and PRODUCT_ID=? and CREATED_BY=? ";


	public static final String SQL_RECO_COMPLETE_STATUS= "select count(DTL.reco_status) from DP_RECO_DIST_DETAILS DTL, DP_RECO_PERIOD PRD where DTL.RECO_ID = PRD.ID and DTL.DIST_ID=? and DTL.RECO_ID = ? and" +
			" DTL.RECO_STATUS='INITIATE' and PRD.IS_RECO_START =1  and PRD.IS_RECO_CLOSED !=1 with ur";

// ********************** added by RAM for reco enhancement ************************
	public static final String SQL_INSERT_DP_RECO_CERTIFICATE_DETAIL= "INSERT INTO DP_RECO_CERTIFICATE_DETAIL(CERTIFICATE_ID, PRODUCT_ID, QUANTITY) VALUES(?,?, ?)";
	public static final String SQL_SELECT_DP_RECO_CERTIFICATE_DETAIL= "Select RD.CERTIFICATE_ID,RH.REF_NO,RD.PRODUCT_ID,RD.QUANTITY,PM.PRODUCT_NAME,RECO.TO_DATE from DP_RECO_CERTIFICATE_DETAIL RD,DP_RECO_CERTIFICATE_HDR RH,DP_PRODUCT_MASTER PM,DP_RECO_PERIOD RECO where RH.RECO_ID=RECO.ID AND  RD.PRODUCT_ID=PM.PRODUCT_ID and RH.CERTIFICATE_ID = RD.CERTIFICATE_ID and RD.CERTIFICATE_ID=? with ur";
	public static final String SQL_SELECT_DP_RECO_Go_LIVE_DATE= "SELECT case when (date(value) < (SELECT date(from_date)  FROM DP_RECO_PERIOD WHERE ID in (?) AND IS_RECO_START=1))  then 'true' else 'false' end as RESPONSE FROM dp_configuration_details WHERE CONFIG_ID=27 with ur";
	public static final String SQL_SELECT_DP_RECO_OPENING_PENDING_PO_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.PO_NO,PPO.DISTRIBUTOR_PURCHASE_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PO_DATE, PPO.DC_NO,PPO.DC_DATE,PPO.DISPATCHED_QTY_PER_PO, CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS FROM RECO_PENDING_PO PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur";
	public static final String SQL_SELECT_DP_RECO_OPENING_PENDING_DC_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.DISPATCHED_QTY_PER_DC,PPO.SERIAL_NO,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS FROM RECO_PENDING_DC PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND  CM.COLLECTION_ID=PPO.COLLECTION_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur";
	public static final String SQL_SELECT_DP_RECO_OPENING_SERIALIZED_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PM.PRODUCT_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.RETAILER_ID) AS RETAILER_NAME,PPO.RETAILER_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.FSE_ID) AS LOGIN_NAME, PPO.STATUS_DESCRIPTION FROM RECO_SERIALIZED_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE " +
			" PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur"; // to be changed in case if it is flushed out from system then opening stock should be reduced.. same applies for count.. for new reco after go live date the counts will be updated in system gen and partner figure //Neetika
	public static final String SQL_SELECT_DP_RECO_OPENING_DEFECTIVE_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM RECO_DEFECTIVE_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PPO.DEFECT_ID=DM.DEFECT_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur";
	public static final String SQL_SELECT_DP_RECO_OPENING_UPGRAGE_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM, RECO_UPGRADE_STOCK PPO left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur"; // AND PPO.DEFECT_ID=DM.DEFECT_ID
	public static final String SQL_SELECT_DP_RECO_OPENING_CHURN_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PPO.COLLECTED_ON,PPO.AGEING FROM RECO_CHURN_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.FROM_DATE)-1 DAY AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID  AND (PPO.FLUSHOUT_FLAG!='Y' or PPO.FLUSHOUT_FLAG is null) with ur";
	public static final String SQL_SELECT_DP_RECO_RECEIVED_RCV_WH_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PO_NO,PPO.PO_DATE, CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS,PPO.LAST_PO_ACTION_DATE,sd.STATUS_DESCRIPTION" +
			" FROM RECO_RECEIVED_WH PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DPDTH.DP_CPE_STATUS_MASTER sd WHERE PPO.PR_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.PR_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID and  PPO.STB_STATUS = sd.STATUS_ID  with ur";
	
	public static final String SQL_SELECT_DP_RECO_RECEIVED_INTERSSD_OK_STOCK_DETAILS_LIST= "SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.TRANSFER_TYPE,PPO.DC_NO,PM.PRODUCT_NAME,PPO.SERIAL_NO,DD.CIRCLE_NAME,PPO.INITIATION_DATE,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE FROM" +
			" RECO_RECEIVED_INTERSSD_OK PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD WHERE " +
			" PPO.TO_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.TO_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID with ur";
	public static final String SQL_SELECT_DP_RECO_RECEIVED_INTERSSD_DEFECTIVE_STOCK_DETAILS_LIST= "SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.INV_CHANGE_DATE,PM.PRODUCT_NAME,PPO.SERIAL_NO,DD.CIRCLE_NAME,PPO.INITIATION_DATE,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,DM.DEFECT_NAME FROM RECO_RECEIVED_INTERSSD_DEFECTIVE PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.TO_DIST_ID=? and PPO.PRODUCT_ID_OLD=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.TO_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_NEW AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND DM.DEFECT_ID=PPO.DEFECT_ID with ur";
	public static final String SQL_SELECT_DP_RECO_RECEIVED_UPGRADE_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.OLD_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.NEW_SR_NO,DM.DEFECT_NAME,PPO.INV_CHANGE_DATE,PPO.COLLECTION_DATE FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,RECO_RECEIVED_UPGRADE PPO left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID " +
			" WHERE PPO.NEW_DIST_D=? and PPO.PRODUCT_ID_OLD= ? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.NEW_DIST_D=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_OLD AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur"; //AND PPO.DEFECT_ID=DM.DEFECT_ID 
	public static final String SQL_SELECT_DP_RECO_RECEIVED_CHURN_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NUMBER,PPO.COLLECTION_DATE,PPO.AGEING FROM RECO_RECEIVED_CHURN PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur";
	public static final String SQL_SELECT_DP_RECO_RETURNED_INTERSSD_OK_DETAILS_LIST= "SELECT (select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) as FROM_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST_ID) AS FROM_DIST_NAME,(select DISTRIBUTOR_OLM_ID from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_ID,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST_ID) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.TRANSFER_TYPE,PPO.DC_NO,PPO.SERIAL_NO,PM.PRODUCT_NAME,DD.CIRCLE_NAME,PPO.TRANSFER_DATE,PPO.ACCEPTANCE_DATE,PPO.INITIATION_DATE FROM RECO_RETURNED_INTERSSD_OK PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD WHERE PPO.FROM_DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.FROM_DIST_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  with ur";
	public static final String SQL_SELECT_DP_RECO_RETURNED_CHURNED_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NUMBER,PPO.DC_NO,PPO.WH_RECEIVED_DATE,PPO.DC_DATE FROM RECO_RETURNED_CHURN PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur";
	public static final String SQL_SELECT_DP_RECO_RETURNED_INTERSSD_DEFECTIVE_DETAILS_LIST= "SELECT (select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST) as FROM_DIST,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.FROM_DIST) AS FROM_DIST_NAME,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST) as TO_DIST,(select DISTRIBUTOR_NAME from DP_DIST_DETAILS where DISTRIBUTOR_ID= PPO.TO_DIST) AS TO_DIST_NAME,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.CREATED_BY) AS INITIATOR_NAME,PPO.SERIAL_NO,PM.PRODUCT_NAME,DD.CIRCLE_NAME,PPO.TRANSFER_DATE,PPO.INITIATION_DATE,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,PPO.INVENTORY_CHANGE_DATE,PPO.SERIAL_NO,DM.DEFECT_NAME FROM RECO_RETURNED_INTERSSD_DEFECTIVE PPO,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_DIST_DETAILS DD,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST=? and PPO.DEFECTED_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND DD.DISTRIBUTOR_ID=PPO.FROM_DIST  AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PM.PRODUCT_ID=PPO.DEFECTED_PRODUCT_ID AND DM.DEFECT_ID=PPO.DEFECT_ID with ur";
	public static final String SQL_SELECT_DP_RECO_RETURNED_COLLECTION_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.COLLECTED_ON,PPO.DC_NO,PPO.DC_DATE,PPO.WH_RECEIVED_DATE FROM RECO_RETURNED_COLLECTION PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.TO_DISTRIBUTOR=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.TO_DISTRIBUTOR=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID and PPO.COLLECTION_ID=?  with ur";
	public static final String SQL_SELECT_DP_RECO_RETURNED_OK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.DC_NO,PPO.DC_DATE,PPO.WH_RECEIVED_DATE,(case PPO.DC_STATUS when 'DRAFT' then 'Incomplete' when 'CREATED' then 'Ready To Dispatch' when 'INTRANSIT' then 'Ready To Dispatch' " +
			" when 'ERROR' then 'Error in Sending to Warehouse' when 'SUCCESS' then 'Sent To Warehouse' when 'AIW' then 'Accepted in Warehouse' " +
			" when 'AIWM' then 'Accepted in Warehouse with Modifications' when 'REJECT' then 'REJECT' end)  as DC_STATUS,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS " +
			" FROM RECO_RETURNED_OK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DIST_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between RP.FROM_DATE AND RP.TO_DATE AND RP.ID=? AND PPO.DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID and PPO.COLLECTION_ID=?  with ur";
	public static final String SQL_SELECT_DP_RECO_ACTIVATION_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,(SELECT LOGIN_NAME FROM VR_LOGIN_MASTER WHERE LOGIN_ID=PPO.FSE_ID) AS FSE_NAME,(SELECT LOGIN_NAME FROM VR_LOGIN_MASTER WHERE LOGIN_ID=PPO.RETAILER_ID) AS RETAILER_NAME,PM.PRODUCT_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PPO.ACCEPT_DATE,PPO.ACTIVATION_DATE,PPO.STB_STATUS FROM RECO_ACTIVATION PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) between DATE(RP.FROM_DATE) AND DATE(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  with ur";
	public static final String SQL_SELECT_DP_RECO_ACTIVATED_INVENTORY_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.OLD_SR_NO,PPO.NEW_SR_NO,PM.PRODUCT_NAME,CM.COLLECTION_NAME,PPO.COLLECTION_DATE,PPO.INV_CHANGE_DATE,DM.DEFECT_NAME,PPO.AGEING FROM RECO_RECEIVED_INVENTORY PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.OLD_DIST_ID =? and PPO.PRODUCT_ID_OLD=? AND (PPO.RUNNING_SCHEDULER_DATE) between DATE(RP.FROM_DATE) AND DATE(RP.TO_DATE) AND RP.ID=? AND PPO.OLD_DIST_ID =DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID_OLD AND PPO.COLLECTION_ID= CM.COLLECTION_ID AND PPO.DEFECT_ID= DM.DEFECT_ID with ur";
	public static final String SQL_SELECT_DP_RECO_ADJUSTMENT_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_NAME AS DIST_NAME,CM.CIRCLE_NAME,PM.PRODUCT_NAME AS PRODCUT_NAME,PPO.SERIAL_NO AS SR_NO,PPO.PR_NO,PPO.PO_NO,(SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID= PPO.FSE_ID) AS FSE_NAME, (SELECT ACCOUNT_NAME FROM VR_ACCOUNT_DETAILS WHERE ACCOUNT_ID= PPO.RETAILER_ID) AS RETAILER_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE,PPO.RETAILER_PURCHASE_DATE,'' AS NEW_SR_NO,'' AS NEW_PRODUCT_NAME,	CAST(NULL AS DATE)AS INV_CHANGE_DATE,CAST(NULL AS DATE)AS COLLECTED_ON,'' AS DEFECT_NAME,'1'  AS flag FROM	RECO_FLUSHED_OK PPO,DP_RECO_PERIOD RP,DP_DIST_DETAILS DD,VR_CIRCLE_MASTER CM,DP_PRODUCT_MASTER PM WHERE	PPO.DISTRIBUTOR_ID =? AND PPO.PRODUCT_ID=? AND	(PPO.RUNNING_SCHEDULER_DATE) BETWEEN DATE(RP.FROM_DATE) AND	DATE(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND CM.CIRCLE_ID=PPO.CIRCLE_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID UNION SELECT DD.DISTRIBUTOR_NAME AS DIST_NAME,CM.CIRCLE_NAME,PM.PRODUCT_NAME AS PRODCUT_NAME,PPPO.DEFECTIVE_SR_NO AS SR_NO,''  AS PR_NO,''  AS PO_NO,''  AS FSE_NAME,'' AS RETAILER_NAME ,CAST(NULL AS TIMESTAMP) AS DISTRIBUTOR_PURCHASE_DATE,CAST(NULL AS TIMESTAMP) FSE_PURCHASE_DATE,"+
	" CAST(NULL AS TIMESTAMP)   AS RETAILER_PURCHASE_DATE,PPPO.NEW_SR_NO,(SELECT PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE PRODUCT_ID=PPPO.NEW_PRODUCT_ID )AS NEW_PRODUCT_NAME,PPPO.INV_CHANGE_DATE,PPPO.COLLECTED_ON,DM.DEFECT_NAME AS DEFECT_NAME,'2' AS flag FROM RECO_FLUSHED_DEF PPPO,DP_RECO_PERIOD RRP,DP_DIST_DETAILS DD,VR_CIRCLE_MASTER CM,DP_PRODUCT_MASTER PM,DP_REV_DEFECT_MST DM WHERE PPPO.FROM_DIST_ID =? AND PPPO.DEFECTIVE_PRODUCT_ID=? AND (PPPO.RUNNING_SCHEDULER_DATE) BETWEEN DATE(RRP.FROM_DATE) AND	DATE(RRP.TO_DATE) AND RRP.ID=? AND PPPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND CM.CIRCLE_ID=PPPO.CIRCLE_ID AND PM.PRODUCT_ID=PPPO.DEFECTIVE_PRODUCT_ID AND DM.DEFECT_ID=PPPO.DEFECT_ID ORDER BY flag WITH ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_SERIALIZED_STOCK_DETAILS_LIST=  //FSE
		" SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.SERIAL_NO,PPO.PR_NO,PPO.PO_NO,PM.PRODUCT_NAME,PPO.DISTRIBUTOR_PURCHASE_DATE,PPO.FSE_PURCHASE_DATE, " +
		" (SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.RETAILER_ID) AS RETAILER_ID,PPO.RETAILER_PURCHASE_DATE,(SELECT Account_name from VR_ACCOUNT_DETAILS where ACCOUNT_ID=PPO.FSE_ID) AS LOGIN_NAME,PPO.STATUS_DESCRIPTION FROM RECO_SERIALIZED_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID  AND PPO.RECO_ID= RP.ID with ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_DEFECTIVE_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM RECO_DEFECTIVE_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM,DP_REV_DEFECT_MST DM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE)= date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID AND PPO.DEFECT_ID=DM.DEFECT_ID AND PPO.RECO_ID=RP.ID with ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_UPGRADE_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,DM.DEFECT_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PM.PRODUCT_NAME," +
			" PPO.COLLECTED_ON,PPO.INV_CHANGE_DATE,PPO.NEW_SR_NO,PPO.AGEING FROM DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM , RECO_UPGRADE_STOCK PPO " +
			" left outer join DP_REV_DEFECT_MST DM  on  PPO.DEFECT_ID=DM.DEFECT_ID  WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? " +
			" AND (PPO.RUNNING_SCHEDULER_DATE)=  date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID  with ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_CHURN_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PM.PRODUCT_NAME,PPO.DEFECTIVE_SR_NO,CM.COLLECTION_NAME,PPO.COLLECTED_ON,PPO.AGEING FROM RECO_CHURN_STOCK PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.FROM_DIST_ID=? and PPO.DEFECTIVE_PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.FROM_DIST_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.DEFECTIVE_PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_PENDINGPO_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.PO_NO,PPO.DISTRIBUTOR_PURCHASE_DATE,PM.PRODUCT_NAME,PPO.PO_DATE, PPO.DC_NO,PPO.DC_DATE,PPO.DISPATCHED_QTY_PER_PO,PPO.SERIAL_NO,CASE WHEN PPO.PO_STATUS  IS NULL THEN 'PR CREATED' ELSE (SELECT VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =2 and ID = PPO.PO_STATUS) END as PO_STATUS FROM RECO_PENDING_PO PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID with ur";
	public static final String SQL_SELECT_DP_RECO_CLOSING_PENDINGDC_STOCK_DETAILS_LIST= "SELECT DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,DD.CIRCLE_NAME,PPO.DC_NO,PPO.DC_DATE,CM.COLLECTION_NAME,PM.PRODUCT_NAME,PPO.DISPATCHED_QTY_PER_DC,PPO.SERIAL_NO ,case PPO.DC_STB_STATUS when 'AIW' then 'Received' when 'ABW' then 'Added by WH' when 'MSN' then 'Not Received' when 'S2W' then 'Sent To WH' when 'IDC' then 'In Transit DC' else PPO.DC_STB_STATUS end as DC_STB_STATUS FROM RECO_PENDING_DC PPO,DP_DIST_DETAILS DD,DP_RECO_PERIOD RP,DP_PRODUCT_MASTER PM,DP_REV_COLLECTION_MST CM WHERE PPO.DISTRIBUTOR_ID=? and PPO.PRODUCT_ID=? AND (PPO.RUNNING_SCHEDULER_DATE) = date(RP.TO_DATE) AND RP.ID=? AND PPO.DISTRIBUTOR_ID=DD.DISTRIBUTOR_ID AND PM.PRODUCT_ID=PPO.PRODUCT_ID AND PPO.COLLECTION_ID=CM.COLLECTION_ID with ur";
	// ******************* end of adding by RAM for reco enhancement ******************* 
	/*public static final String SQL_SELECT_DP_RECO_CERTIFICATE_DETAIL_RECO= "Select ACCOUNT_NAME,log.LOGIN_NAME,RD.CERTIFICATE_ID,RH.REF_NO,RD.PRODUCT_ID,RD.QUANTITY,PM.PRODUCT_NAME,RECO.TO_DATE   " 
																+" from DP_RECO_CERTIFICATE_DETAIL RD,DP_RECO_CERTIFICATE_HDR RH,DP_PRODUCT_MASTER PM,DP_RECO_PERIOD RECO "
																+" ,VR_ACCOUNT_DETAILS ACC, VR_LOGIN_MASTER log "
																+" where RH.RECO_ID=RECO.ID AND  RD.PRODUCT_ID=PM.PRODUCT_ID  "
																+" and RH.CERTIFICATE_ID = RD.CERTIFICATE_ID  "
																+" and RECO.ID=? "
																+" and RH.DIST_ID=? "
																+" and acc.ACCOUNT_ID=RH.DIST_ID "
																+" and acc.ACCOUNT_ID=log.login_id "
																+" with ur";
	*/
	/*public static final String SQL_SELECT_DP_RECO_CERTIFICATE_DETAIL_RECO="Select ACCOUNT_NAME,log.LOGIN_NAME,RD.CERTIFICATE_ID,RH.REF_NO,RD.PRODUCT_ID,RD.QUANTITY,PM.PRODUCT_NAME,RECO.TO_DATE  "    
																+" from  "
																+" VR_ACCOUNT_DETAILS ACC inner join VR_LOGIN_MASTER log on ACC.ACCOUNT_ID=log.LOGIN_ID "
																+" left outer join DP_RECO_CERTIFICATE_HDR RH on RH.DIST_ID=log.LOGIN_ID and RH.RECO_ID=? "
																+" left outer join DP_RECO_PERIOD RECO on RECO.ID=RH.RECO_ID "
																+" left outer join DP_RECO_CERTIFICATE_DETAIL RD on RD.CERTIFICATE_ID=RH.CERTIFICATE_ID "
																+" left outer join DP_PRODUCT_MASTER PM on PM.PRODUCT_ID=RD.PRODUCT_ID "
																+" where ACC.ACCOUNT_ID=? "
																+" with ur";
	
	*/
	
	//changed by aman for showing submitted reco details only
	
	public static final String SQL_SELECT_DP_RECO_CERTIFICATE_DETAIL_RECO="Select distinct(ACCOUNT_NAME),log.LOGIN_NAME,RD.CERTIFICATE_ID,RH.REF_NO,RD.PRODUCT_ID,RD.QUANTITY,PM.PRODUCT_NAME,RECO.TO_DATE,PM.PRODUCT_TYPE    "    
		+" from  "
		+" VR_ACCOUNT_DETAILS ACC inner join VR_LOGIN_MASTER log on ACC.ACCOUNT_ID=log.LOGIN_ID "
		+" left outer join DP_RECO_CERTIFICATE_HDR RH on RH.DIST_ID=log.LOGIN_ID and RH.RECO_ID=? "
		+" left outer join DP_RECO_PERIOD RECO on RECO.ID=RH.RECO_ID "
		+" left outer join DP_RECO_CERTIFICATE_DETAIL RD on RD.CERTIFICATE_ID=RH.CERTIFICATE_ID "
		+" left outer join DP_PRODUCT_MASTER PM on PM.PRODUCT_ID=RD.PRODUCT_ID, DP_RECO_DIST_DETAILS DD "
		+" where ACC.ACCOUNT_ID=? AND ACC.ACCOUNT_ID=DD.DIST_ID and DD.CREATED_BY!=0 and DD.RECO_ID=RECO.ID "//AND DD.RECO_STATUS !='INITIATE'  query changed by neetika two more conditions added
		+" order by PM.PRODUCT_TYPE,PM.PRODUCT_NAME with ur";
	
	public static final String SQL_SELECT_DP_RECO_CERTIFICATE_DETAIL_RECO1="Select distinct(ACCOUNT_NAME),log.LOGIN_NAME,RD.CERTIFICATE_ID,RH.REF_NO,RD.PRODUCT_ID,RD.QUANTITY,PM.PRODUCT_NAME,RECO.TO_DATE ,PM.PRODUCT_TYPE "    
		+" from  "
		+" VR_ACCOUNT_DETAILS ACC inner join VR_LOGIN_MASTER log on ACC.ACCOUNT_ID=log.LOGIN_ID "
		+" left outer join DP_RECO_CERTIFICATE_HDR RH on RH.DIST_ID=log.LOGIN_ID and RH.RECO_ID=? "
		+" left outer join DP_RECO_PERIOD RECO on RECO.ID=RH.RECO_ID "
		+" left outer join DP_RECO_CERTIFICATE_DETAIL RD on RD.CERTIFICATE_ID=RH.CERTIFICATE_ID "
		+" left outer join DP_PRODUCT_MASTER PM on PM.PRODUCT_ID=RD.PRODUCT_ID, DP_RECO_DIST_DETAILS DD  "
		+" where ACC.ACCOUNT_ID =? AND ACC.ACCOUNT_ID=DD.DIST_ID and DD.CREATED_BY!=0 and DD.RECO_ID=RECO.ID "//AND DD.RECO_STATUS!='INITIATE'  query changed by neetika two more conditions added
		+" order by PM.PRODUCT_TYPE,PM.PRODUCT_NAME with ur";
	
	
	
	
	public static final String SQL_DELETE_FROM_TEMP="DELETE FROM RECO_CLOSINGSTOCK_TEMP WHERE DIST_ID= ? and RECO_PERIOD_ID=? AND PRODUCT_ID=?";
	public static final String SQL_GET_CERTIFICATE_ID= "Select CERTIFICATE_ID from DP_RECO_CERTIFICATE_HDR where RECO_ID=? and DIST_ID=? with ur";
	public static final String SQL_PO_DETAIL_REPORT= "";
	public static final String SQL_COLLECTION_DETAIL_REPORT= " Select DD.DISTRIBUTOR_OLM_ID,DD.DISTRIBUTOR_NAME,DD.TSM_NAME,"+
															  " DD.CIRCLE_NAME,CD.COLLECTION_TYPE,CD.PRODUCT_NAME,CD.INVENTORY_CHANGE_DATE,"+
															  "CD.RECOVERED_STB_NUM, CD.INSTALLED_STB_NUM, CD.DC_NO,CD.STATUS from "+
															  " DP_COLLECTION_DETAIL CD,DP_DIST_DETAILS DD where DD.DISTRIBUTOR_ID = CD.DIST_ID and CD.DIST_ID in (?1) and"+
															  " CD.PRODUCT_ID in (?2) and cd.collection_id in (?3) and date(cd.collection_date) between ? and ? and cd.status in "+
															  "(?4)";

	public static final String SQL_INTERSSD_DETAIL_REPORT= "";


	public static final String SQL_ACTIVATION_DETAIL_REPORT= "";
	public static final String SQL_PO_STATUS_LIST= "Select ID,VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID=2 with ur";
	//Added by Shilpa for Stock Reco Summary Report
	public static final String SQL_STOCK_RECO_SUMMARY_REPORT= "Select RECO.DIST_ID,RECO.product_id, RECO.PRODUCT_NAME, DIST.DISTRIBUTOR_OLM_ID,DIST.DISTRIBUTOR_NAME,DIST.TSM_NAME,DIST.CIRCLE_NAME," +
			//" (select CLOSING_STOCK from DP_RECO_DIST_DETAILS where CREATED_ON >= PREVDATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID order by CREATED_ON asc fetch first row only)OPEN_STOCK," +
			" (select SER_OPEN_STOCK + nser_open_stock from DP_RECO_DIST_DETAILS where CREATED_ON >= PREVDATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID order by CREATED_ON asc fetch first row only)OPEN_STOCK," +
			" (select CLOSING_STOCK from  DP_RECO_DIST_DETAILS where CREATED_ON<=TODATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID order by CREATED_ON desc fetch first row only )CLOSE_STOCK," +
			" (select sum(RECEIVED_WH) from DP_RECO_DIST_DETAILS  where CREATED_ON between FROMDATE and TODATE" +
			" and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RECEIVED_WH," +
			" (select sum(RECEIVED_INTER_SSD) from DP_RECO_DIST_DETAILS  where  CREATED_ON between FROMDATE and TODATE" +
			" and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RECEIVED_INTER_SSD,(select sum(RECEIVED_UPGRADE) from DP_RECO_DIST_DETAILS  where" +
			"  CREATED_ON between FROMDATE and TODATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RECEIVED_UPGRADE," +
			" (select sum(RECEIVED_CHURN) from DP_RECO_DIST_DETAILS  where CREATED_ON between FROMDATE and TODATE" +
			" and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RECEIVED_CHURN,(select sum(RETURNED_DOA_BI) from DP_RECO_DIST_DETAILS  where" +
			"  CREATED_ON between FROMDATE and TODATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RETURNED_DOA_BI," +
			" (select sum(RETURNED_DOA_AI) from DP_RECO_DIST_DETAILS  where CREATED_ON between FROMDATE and TODATE" +
			" and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RETURNED_DOA_AI,(select sum(RETURNED_SWAP) from DP_RECO_DIST_DETAILS  where" +
			" CREATED_ON between FROMDATE and TODATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RETURNED_SWAP," +
			" (select sum(RETURNED_C2S) from DP_RECO_DIST_DETAILS  where CREATED_ON between FROMDATE and TODATE" +
			" and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) RETURNED_C2S,(select sum(SER_ACTIVATION+NSER_ACTIVATION) from DP_RECO_DIST_DETAILS  where" +
			" CREATED_ON between FROMDATE and TODATE and DIST_ID =RECO.DIST_ID and PRODUCT_ID =RECO.PRODUCT_ID) ACTIVATION" +
			" from DP_RECO_DIST_DETAILS RECO , DP_DIST_DETAILS DIST where RECO.DIST_ID =DIST.DISTRIBUTOR_ID ";

//	Added by priya for PO status update
	public static final String UPDATE_PO_HEADER = "Update PO_HEADER set PO_STATUS =?, STATUS_DATE=?, REMARKS=? where  PO_NO=? ";
	public static final String GET_PO = "SELECT PO_NO FROM PO_HEADER where PO_NO = ?";

/*	Changes by Karan 26-May-2012 UPDATE_PO_STATUS_AUDIT_TRAIL Query Changed, One more parameter added to the insert
	Query for PO TAT and new query added SELECT_PO_STATUS_DATE to get latest PO Status Date in the DAO Impl*/

	public static final String INSERT_PO_STATUS_AUDIT_TRAIL= "Insert into PO_STATUS_AUDIT_TRAIL(PO_NO, PO_STATUS, PO_STATUS_DATE, CREATED_ON, TAT) values(?,?,?,current timestamp,?)";



	//Added by Shilpa for DIST STB Mapping Webservice
	public static final String SQL_SELECT_DIST_ID= "select ACCOUNT_ID from VR_ACCOUNT_DETAILS  where ACCOUNT_ID = (Select LOGIN_ID from VR_LOGIN_MASTER where Upper(LOGIN_NAME)=? fetch first 1 row only) with ur";
	public static final String SQL_SELECT_STB_STATUS= "Select STATUS,DISTRIBUTOR_ID from DP_STOCK_INVENTORY where MARK_DAMAGED='N' and SERIAL_NO=? with ur";


	public static final String SQL_STB_SERIALZED_STOCK_PART1="select c.LOGIN_NAME,b.ACCOUNT_NAME,e.ACCOUNT_NAME as TSM_NAME ,d.CIRCLE_NAME,f.PRODUCT_NAME,a.SERIAL_NO, "
															+" g.PR_NO,h.PO_NO,to_char(a.DISTRIBUTOR_PURCHASE_DATE,'dd/MM/yyyy') as DISTRIBUTOR_PURCHASE_DATE , "
															+" (select VAD.ACCOUNT_NAME as FSE_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.FSE_ID),a.FSE_ID,to_char(a.FSE_PURCHASE_DATE,'dd/MM/yyyy') as FSE_PURCHASE_DATE , "
															+" (select VAD.ACCOUNT_NAME as RET_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.retailer_id),a.retailer_id,to_char(a.RETAILER_PURCHASE_DATE ,'dd/MM/yyyy' ) as RETAILER_PURCHASE_DATE , "
															+" k.STATUS_DESCRIPTION "
															+" from DP_STOCK_INVENTORY a ,VR_ACCOUNT_DETAILS b,VR_LOGIN_MASTER c, "
															+" VR_CIRCLE_MASTER d,VR_ACCOUNT_DETAILS e,DP_PRODUCT_MASTER f,DP_PR_HEADER g,PO_HEADER h, "
															+" VR_LOGIN_MASTER i,INVOICE_HEADER j,DP_CPE_STATUS_MASTER k "
															+" where a.DISTRIBUTOR_ID=b.ACCOUNT_ID "
															+" and b.ACCOUNT_ID=c.LOGIN_ID "
															+" and b.CIRCLE_ID=d.CIRCLE_ID "
															+" and b.PARENT_ACCOUNT=e.ACCOUNT_ID "
															+" and e.ACCOUNT_ID=i.LOGIN_ID "
															+" and a.PRODUCT_ID=f.PRODUCT_ID "
															+" and g.PR_NO=h.PR_NO "
															+" and j.PO_NO=h.PO_NO "
															+" and j.INV_NO=a.INV_NO "
															+" and a.STATUS=k.STATUS_ID "
															+" and a.INV_NO !='REV-INV'";

	public static final String SQL_STB_SERIALZED_STOCK_PART2="select c.LOGIN_NAME,b.ACCOUNT_NAME,e.ACCOUNT_NAME as TSM_NAME,d.CIRCLE_NAME,f.PRODUCT_NAME,a.SERIAL_NO,   "
															+" 0 as PR_NO,'' as PO_NO,to_char(a.DISTRIBUTOR_PURCHASE_DATE,'dd/MM/yyyy') as DISTRIBUTOR_PURCHASE_DATE, "
															+" (select VAD.ACCOUNT_NAME as FSE_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.FSE_ID),a.FSE_ID,to_char(a.FSE_PURCHASE_DATE,'dd/MM/yyyy') as FSE_PURCHASE_DATE , "
															+" (select VAD.ACCOUNT_NAME as RET_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.retailer_id),a.retailer_id,to_char(a.RETAILER_PURCHASE_DATE ,'dd/MM/yyyy' ) as RETAILER_PURCHASE_DATE , "
															+" k.STATUS_DESCRIPTION "
															+" from DP_STOCK_INVENTORY a ,VR_ACCOUNT_DETAILS b,VR_LOGIN_MASTER c, "
															+" VR_CIRCLE_MASTER d,VR_ACCOUNT_DETAILS e,DP_PRODUCT_MASTER f, "
															+" VR_LOGIN_MASTER i,DP_CPE_STATUS_MASTER k "
															+" where a.DISTRIBUTOR_ID=b.ACCOUNT_ID "
															+" and b.ACCOUNT_ID=c.LOGIN_ID "
															+" and b.CIRCLE_ID=d.CIRCLE_ID "
															+" and b.PARENT_ACCOUNT=e.ACCOUNT_ID "
															+" and e.ACCOUNT_ID=i.LOGIN_ID "
															+" and a.PRODUCT_ID=f.PRODUCT_ID "
															+" and a.STATUS=k.STATUS_ID "
															+" and a.INV_NO ='REV-INV'";

	public static final String SQL_STB_SERIALZED_STOCK_PART3="select c.LOGIN_NAME,b.ACCOUNT_NAME,e.ACCOUNT_NAME as TSM_NAME ,d.CIRCLE_NAME,f.PRODUCT_NAME,a.SERIAL_NO, "
															+" g.PR_NO,h.PO_NO,to_char(a.DISTRIBUTOR_PURCHASE_DATE,'dd/MM/yyyy') as DISTRIBUTOR_PURCHASE_DATE , "
															+" (select VAD.ACCOUNT_NAME as FSE_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.FSE_ID),a.FSE_ID,to_char(a.FSE_PURCHASE_DATE,'dd/MM/yyyy') as FSE_PURCHASE_DATE, "
															+" (select VAD.ACCOUNT_NAME as RET_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.retailer_id),a.retailer_id,to_char(a.RETAILER_PURCHASE_DATE ,'dd/MM/yyyy' ) as RETAILER_PURCHASE_DATE , "
															+" k.STATUS_DESCRIPTION "
															+" from DP_STOCK_INVENTORY_ASSIGNED a ,VR_ACCOUNT_DETAILS b,VR_LOGIN_MASTER c, "
															+" VR_CIRCLE_MASTER d,VR_ACCOUNT_DETAILS e,DP_PRODUCT_MASTER f,DP_PR_HEADER g,PO_HEADER h, "
															+" VR_LOGIN_MASTER i,INVOICE_HEADER j,DP_CPE_STATUS_MASTER k "
															+" where a.DISTRIBUTOR_ID=b.ACCOUNT_ID "
															+" and b.ACCOUNT_ID=c.LOGIN_ID "
															+" and b.CIRCLE_ID=d.CIRCLE_ID "
															+" and b.PARENT_ACCOUNT=e.ACCOUNT_ID "
															+" and e.ACCOUNT_ID=i.LOGIN_ID "
															+" and a.PRODUCT_ID=f.PRODUCT_ID "
															+" and g.PR_NO=h.PR_NO "
															+" and j.PO_NO=h.PO_NO "
															+" and j.INV_NO=a.INV_NO "
															+" and a.STATUS=k.STATUS_ID "
															+" and a.INV_NO !='REV-INV'";

	public static final String SQL_STB_SERIALZED_STOCK_PART4="select c.LOGIN_NAME,b.ACCOUNT_NAME,e.ACCOUNT_NAME as TSM_NAME,d.CIRCLE_NAME,f.PRODUCT_NAME,a.SERIAL_NO,   "
															+" 0 as PR_NO,'' as PO_NO,to_char(a.DISTRIBUTOR_PURCHASE_DATE,'dd/MM/yyyy') as DISTRIBUTOR_PURCHASE_DATE, "
															+" (select VAD.ACCOUNT_NAME as FSE_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.FSE_ID),a.FSE_ID,to_char(a.FSE_PURCHASE_DATE,'dd/MM/yyyy') as FSE_PURCHASE_DATE , "
															+" (select VAD.ACCOUNT_NAME as RET_NAME from VR_ACCOUNT_DETAILS VAD where VAD.ACCOUNT_ID=a.retailer_id),a.retailer_id,to_char(a.RETAILER_PURCHASE_DATE ,'dd/MM/yyyy' ) as RETAILER_PURCHASE_DATE , "
															+" k.STATUS_DESCRIPTION "
															+" from DP_STOCK_INVENTORY_ASSIGNED a ,VR_ACCOUNT_DETAILS b,VR_LOGIN_MASTER c, "
															+" VR_CIRCLE_MASTER d,VR_ACCOUNT_DETAILS e,DP_PRODUCT_MASTER f, "
															+" VR_LOGIN_MASTER i,DP_CPE_STATUS_MASTER k "
															+" where a.DISTRIBUTOR_ID=b.ACCOUNT_ID "
															+" and b.ACCOUNT_ID=c.LOGIN_ID "
															+" and b.CIRCLE_ID=d.CIRCLE_ID "
															+" and b.PARENT_ACCOUNT=e.ACCOUNT_ID "
															+" and e.ACCOUNT_ID=i.LOGIN_ID "
															+" and a.PRODUCT_ID=f.PRODUCT_ID "
															+" and a.STATUS=k.STATUS_ID "
															+" and a.INV_NO ='REV-INV'";

	public static final String SQL_STB_SERIALIZED_STOCK_ALL=" select distinct D.DISTRIBUTOR_NAME AS ACCOUNT_NAME,D.DISTRIBUTOR_OLM_ID as LOGIN_NAME,d.TSM_NAME, "
															+" d.CIRCLE_NAME,f.PRODUCT_NAME,e.SERIAL_NO,b.PR_NO,b.PO_NO,to_char(e.DISTRIBUTOR_PURCHASE_DATE,'dd/MM/yyyy') as DISTRIBUTOR_PURCHASE_DATE, "
															+" e.FSE_ID,e.fse_name,to_char(e.FSE_PURCHASE_DATE,'dd/MM/yyyy') as FSE_PURCHASE_DATE,e.RETAILER_ID,e.retailer_name as RET_NAME, "
															+" to_char(e.RETAILER_PURCHASE_DATE,'dd/MM/yyyy') as RETAILER_PURCHASE_DATE, "
															+" CASE e.STATUS when 1 then 'Unassigned Complete' when 3 then 'Assigned' when 4 then 'Repair' "
															+" when 5 then 'Restricted' when 10 then 'Unassigned Pending' when 12 then 'Returned as SWAP' "
															+" when 11 then 'Returned as DOA' when 13 then 'Added By Warehouse' when 14 then 'Returned To Warehouse' ELSE '' END STATUS_DESCRIPTION "
															+" from PO_PRODUCT_SUMMARY a,PO_SUMMARY b,PO_STB_SUMMARY c,DP_DIST_DETAILS d, "
															+" DP_STOCK_INVENTORY e,DP_PRODUCT_MASTER f "
															+" where  a.PR_NO=b.PR_NO  and b.DIST_ID=e.DISTRIBUTOR_ID   "
															+" and e.DISTRIBUTOR_ID=d.DISTRIBUTOR_ID  and e.PRODUCT_ID=f.PRODUCT_ID "
															+" and e.PRODUCT_ID=c.PRODUCT_ID  "
															+" and a.PRODUCT_ID=c.product_id "
															+" and c.product_id=e.product_id "
															+" and e.INV_NO=c.INV_NO "
															+" and c.PR_NO=a.PR_NO "
															+" and c.pr_no=b.pr_no  "
															+" and c.STB_NO=e.SERIAL_NO ";


	public static final String GET_INVOICE_ON_PO = "select INV_NO from INVOICE_HEADER where PO_NO=? with ur";
	public static final String DELETE_STOCK_INVENTORY_SRNO = "delete from DP_STOCK_INVENTORY where INV_NO=? with ur";
	public static final String INSERT_INVOICE_DETAILS = "INSERT INTO INVOICE_HEADER (PO_NO, INV_NO, INV_DATE, CREATE_DATE, STATUS) VALUES(?, ?, ?, CURRENT_TIMESTAMP, ?)";
	public static final String SQL_INSERT_DIST_DETAIL = "INSERT INTO DP_OPEN_STOCK_DTL( ID,DIST_ID, DIST_ORACLE_LOCATOR_CODE, PRODUCT_ID, ORACLE_PRODUCT_CODE, OPENING_STOCK, SALE, CLOSING_STOCK, "
														+" LAST_UPDATE_DATE, PRODUCT_TYPE, PARENT_PRODUCT_ID, RECO_QTY) VALUES"
														+" ( ?,?, ?,?, (select ORACLE_ITEM_CODE from DP_PRODUCT_MASTER where PRODUCT_ID=?), 0, 0, 0, null, (select PRODUCT_TYPE from DP_PRODUCT_MASTER where PRODUCT_ID=?),"
														+" (select PARENT_PRODUCT_ID from DP_PRODUCT_MASTER where PRODUCT_ID=?), 0) ";

	//Added by Shilpa Khanna on 2-05-12 for UAT Observation
	public static final String SQL_RECOS_COMPLETE_STATUS= "select count(DTL.reco_status) from DP_RECO_DIST_DETAILS DTL, DP_RECO_PERIOD PRD where DTL.RECO_ID = PRD.ID and DTL.DIST_ID=? and DTL.RECO_ID < ? and" +
	" DTL.RECO_STATUS='INITIATE' and PRD.IS_RECO_START =1  and PRD.IS_RECO_CLOSED !=1 with ur";
	//Ends here


	//Added By Harpreet for getting POStatus
	public static final String SQL_SELECT_PO_STATUS = "SELECT VALUE,ID  FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=13";



	/*--   Amit Mishra__*/
	public static final String INSERT_HERARCHY_HEADERS = "INSERT INTO DP_HEIRARCHY_TRANS_HEADER(TR_NO,TRANS_TYPE,FROM_DIST,TO_DIST,TRANS_SUB_TYPE,TRANS_ACCOUNT_ID,FROM_FSE,TO_FSE,CIRCLE_ID,CREATED_BY,CREATED_ON) VALUES(?,?,?,?,?,?,?,?,?,?,current timestamp)";
																// to resolve the retailer transfer issue.
	public static final String UPDATE_ACCOUNT_DETAILS_HERARCHY = "UPDATE VR_ACCOUNT_DETAILS SET PARENT_ACCOUNT = ?, ROOT_LEVEL_ID = ? where ACCOUNT_ID =?";
	public static final String UPDATE_STOCK_INVENTORY_HERARCHY = "UPDATE DP_STOCK_INVENTORY SET DISTRIBUTOR_ID =? WHERE FSE_ID=?";
	public static final String UPDATE_STOCK_INVENTORY_HERARCHY_RET = "UPDATE DP_STOCK_INVENTORY SET DISTRIBUTOR_ID =? ,FSE_ID= ?  WHERE RETAILER_ID=?";
	public static final String SELECT_STOCK_INVENTORY_HERARCHY ="select PRODUCT_ID,SERIAL_NO,DISTRIBUTOR_ID,FSE_ID,RETAILER_ID from DP_STOCK_INVENTORY Where DISTRIBUTOR_ID=? and FSE_ID in (";
	public static final String SELECT_STOCK_INVENTORY_HERARCHY_RET ="select SI.PRODUCT_ID,SI.SERIAL_NO,SI.DISTRIBUTOR_ID,SI.FSE_ID,SI.RETAILER_ID from DP_STOCK_INVENTORY SI inner Join DP_PRODUCT_MASTER PM on SI.PRODUCT_ID=PM.PRODUCT_ID   Where PM.CATEGORY_CODE='1' and DISTRIBUTOR_ID=? and FSE_ID =? and RETAILER_ID in( ";
	public static final String INSERT_STOCK_INVENTORY_HERARCHY ="insert into DP_HIERARCHY_TRANS_STOCK(SERIAL_NO,PRODUCT_ID, FROM_DIST,TO_DIST,FROM_FSE,TRANSFER_BY,TRANSFER_DATE,TRANS_ID) " +
									" values(?,?,?,?,?,?,current timestamp,?) ";
	public static final String INSERT_STOCK_INVENTORY_HERARCHY_RET ="insert into DP_HIERARCHY_TRANS_STOCK(SERIAL_NO,PRODUCT_ID, FROM_DIST,TO_DIST,FROM_FSE,TO_FSE, FROM_RETAILER,TRANSFER_BY,TRANSFER_DATE,TRANS_ID) " +
	" values(?,?,?,?,?,?,?,?,current timestamp,?) ";

	public static final String SELECT_DISTRIBUTOR_DETAILS= "select login_id,login_name,lm.status,group_id,account_id,ad.CIRCLE_ID,CONTACT_NAME,ACCOUNT_NAME,cm.NSER_ACTIVATION_STATUS,cm.SER_ACTIVATION_STATUS,cm.INV_CHANGE_NSER_STATUS,cm.INV_CHANGE_SER_STATUS " +
			                                                          " from VR_LOGIN_MASTER lm,VR_ACCOUNT_DETAILS ad,VR_CIRCLE_MASTER cm	" +
			                                                          "where lm.LOGIN_ID = ad.ACCOUNT_ID and ad.CIRCLE_ID = cm.CIRCLE_ID and cm.STATUS='A' and lm.STATUS='A'" +
			                                                          "	and lm.LOGIN_NAME =? fetch first 1 row only";

	public static final String SQL_SELECT_STB_STATUS_WODAMAGED= "Select STATUS,DISTRIBUTOR_ID from DP_STOCK_INVENTORY where SERIAL_NO=? ";
	//Neetika
	public static final String SQL_SELECT_STB_STATUS_PROD= "select PRODUCT_CATEGORY from DP_PRODUCT_MASTER pm, DP_STOCK_INVENTORY si where si.PRODUCT_ID=pm.PRODUCT_ID and SERIAL_NO=? with ur ";
	public static final String GET_SECURITY_AND_LOAN_AMOUNT = "Select SECURITY_AMOUNT, LOAN_AMOUNT from DP_DIST_SECURITY_LOAN where DIST_ID=? WITH UR ";

	public static final String GET_PRODUCT_CATEGORY = "Select PRODUCT_CATEGORY FROM DP_PRODUCT_MASTER where PRODUCT_ID=?";

	//public static final String GET_PRODUCT_COST= "Select PRODUCT_COST FROM DP_PRODUCT_COST where PRODUCT_CATEGORY=?";

	public static final String GET_PRODUCT_COST= "select OVER_ALL_RECORDS.DISTRIBUTOR_ID,OVER_ALL_RECORDS.STOCK_SECURITY, (OVER_ALL_RECORDS.DIST_SECURITY- sum(OVER_ALL_RECORDS.STOCK_SECURITY)) as CURRENT_SECURITY,OVER_ALL_RECORDS.cost from " +
			"(select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security, all_record.cost" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security ,records.cost" +
			" from (select a.DISTRIBUTOR_ID, a.PRODUCT_ID, count(a.SERIAL_NO) cnt,  (case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end) as cost" +
			" from DP_STOCK_INVENTORY a inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" group by DISTRIBUTOR_ID, a.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.PRODUCT_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount,cost) all_record" +
			"	 Union All" +
			"	 select all_record.DIST_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security,all_record.cost" +
			"	 from (select records.DIST_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security ,records.cost" +
			" from (select a.DIST_ID, a.PRODUCT_ID, a.CLOSING_STOCK as cnt,  (case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end) as cost" +
			" from DP_OPEN_STOCK_DTL a inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" group by DIST_ID, a.PRODUCT_ID, PRODUCT_SECURITY, CLOSING_STOCK) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DIST_ID and records.PRODUCT_ID=?" +
			"	 group by records.DIST_ID, SECURITY_AMOUNT,loan_amount,cost) all_record" +
			"	 UNION ALL" +
			"	 select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security ,all_record.cost" +
			"" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security ,records.cost" +
			" from (select a.NEW_DIST_D as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.DEFECTIVE_SR_NO) cnt, ( case when c.PRODUCT_SECURITY is null then 0" +
			"				 else c.PRODUCT_SECURITY end) as cost" +
			"			 from DP_REV_INVENTORY_CHANGE a" +
			"		 inner join DP_PRODUCT_MASTER b on a.DEFECTIVE_PRODUCT_ID=b.PRODUCT_ID" +
			"	 left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			"	 and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" where a.STATUS='REC'" +
			" group by NEW_DIST_D, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.PRODUCT_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount,cost) all_record" +
			"	 UNION ALL" +
			"		 select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security ,all_record.cost" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security ,records.cost" +
			" from (select a.CREATED_BY as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.SERIAL_NO_COLLECT) cnt, ( case when c.PRODUCT_SECURITY is null then 0" +
			"	 else c.PRODUCT_SECURITY end) as cost" +
			"	 from DP_REV_STOCK_INVENTORY a" +
			" inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			"	 group by a.CREATED_BY, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.PRODUCT_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount,cost) all_record" +
			" union all" +
			"	 select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security ,all_record.cost" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security ,records.cost" +
			" from (select a.CREATED_BY as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.SERIAL_NO_COLLECT) cnt,  (case when c.PRODUCT_SECURITY is null then 0 " +
			" else c.PRODUCT_SECURITY end) as cost " +
			"	 from DP_REV_STOCK_INVENTORY_HIST a" +
			"	 inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY where a.STATUS='S2W'" +
			" group by a.CREATED_BY, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.PRODUCT_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount,cost) all_record)" +
			" OVER_ALL_RECORDS" +
			" group by DISTRIBUTOR_ID,STOCK_SECURITY, DIST_SECURITY ,cost";

	public static final String GET_TOTAL_COST ="select OVER_ALL_RECORDS.DISTRIBUTOR_ID, (OVER_ALL_RECORDS.DIST_SECURITY- sum(OVER_ALL_RECORDS.STOCK_SECURITY)) as CURRENT_SECURITY from" +
			//"(--Security Calculation agaimst Serialized Stock" +
			" (select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security" +
			//"--(all_record.dist_security-all_record.STOCK_security) as CURRENT_SECURITY" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security" +
			" from (select a.DISTRIBUTOR_ID, a.PRODUCT_ID, count(a.SERIAL_NO) cnt,  case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end cost" +
			" from DP_STOCK_INVENTORY a" +
			" inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" group by DISTRIBUTOR_ID, a.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.DISTRIBUTOR_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount) all_record" +
			" Union All" +
			//"--Security Calculation agaimst Non Serialized Stock" +
			" select all_record.DIST_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security" +
			//"--(all_record.dist_security-all_record.STOCK_security) as CURRENT_SECURITY" +
			" from (select records.DIST_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security" +
			" from (select a.DIST_ID, a.PRODUCT_ID, a.CLOSING_STOCK as cnt,  case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end cost" +
			" from DP_OPEN_STOCK_DTL a" +
			" inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" group by DIST_ID, a.PRODUCT_ID, PRODUCT_SECURITY, CLOSING_STOCK) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DIST_ID and records.DIST_ID=?" +
			" group by records.DIST_ID, SECURITY_AMOUNT,loan_amount) all_record" +
			" UNION ALL" +
			//"--Security Calculation agaimst inventory change pending stock (not received yet)" +
			" select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security" +
			//"--(all_record.dist_security-all_record.STOCK_security) as CURRENT_SECURITY" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security" +
			" from (select a.NEW_DIST_D as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.DEFECTIVE_SR_NO) cnt,  case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end cost" +
			" from DP_REV_INVENTORY_CHANGE a" +
			" inner join DP_PRODUCT_MASTER b on a.DEFECTIVE_PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" where a.STATUS='REC'" +
			" group by NEW_DIST_D, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.DISTRIBUTOR_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount) all_record" +
			" UNION ALL" +
			//"--Security Calculation agaimst received stock (No DC generated yet)" +
			" select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security" +
			//"--(all_record.dist_security-all_record.STOCK_security) as CURRENT_SECURITY" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security" +
			" from (select a.CREATED_BY as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.SERIAL_NO_COLLECT) cnt,  case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end cost" +
			" from DP_REV_STOCK_INVENTORY a" +
			" inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY" +
			" group by a.CREATED_BY, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.DISTRIBUTOR_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount) all_record" +
			" union all" +
			//"--Security Calculation agaimst stock sent to WH (Not accepted in WH yet)" +
			" select all_record.DISTRIBUTOR_ID as DISTRIBUTOR_ID, all_record.STOCK_security, all_record.dist_security" +
			//"--(all_record.dist_security-all_record.STOCK_security) as CURRENT_SECURITY" +
			" from (select records.DISTRIBUTOR_ID, sum ((records.cnt*records.cost)) as STOCK_security" +
			" ,(ds.SECURITY_AMOUNT+ds.loan_amount) as dist_security" +
			" from (select a.CREATED_BY as DISTRIBUTOR_ID, b.PRODUCT_ID, count(a.SERIAL_NO_COLLECT) cnt,  case when c.PRODUCT_SECURITY is null then 0" +
			" else c.PRODUCT_SECURITY end cost" +
			" from DP_REV_STOCK_INVENTORY_HIST a" +
			" inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID" +
			" left outer join DP_PRODUCT_SECURITY c on b.PRODUCT_TYPE=b.PRODUCT_TYPE" +
			" and c.PRODUCT_CATEGORY=b.PRODUCT_CATEGORY where a.STATUS='S2W'" +
			" group by a.CREATED_BY, b.PRODUCT_ID, PRODUCT_SECURITY) records, DP_DIST_SECURITY_LOAN ds" +
			" where ds.DIST_ID=records.DISTRIBUTOR_ID and records.DISTRIBUTOR_ID=?" +
			" group by records.DISTRIBUTOR_ID, SECURITY_AMOUNT,loan_amount) all_record)" +
			" OVER_ALL_RECORDS" +
			" group by DISTRIBUTOR_ID, DIST_SECURITY" +
			"  with ur";

	public static final String ACCEPTED_STOCK_DETAIL = "select count(1) as ACCEPTED_QTY, PRODUCT_ID, INV_NO from DP_STOCK_INVENTORY where INV_NO=? and MARK_DAMAGED='N' group by PRODUCT_ID, INV_NO with ur";
	public static final String UPDATE_INVOICE_DETAILS = "UPDATE INVOICE_DETAILS SET ACCEPTED_QTY= ? WHERE INV_NO = ? and PRODUCT_ID=?";
	
	
	public static final String SELECT_PO_NUMBER = "select PO_NO from Invoice_header where inv_no=? with ur ";
	
//	public static final String INSERT_AUDIT_TRAIL = "INSERT INTO PO_STATUS_AUDIT_TRAIL " +
//	"(PO_NO, PO_STATUS, PO_STATUS_DATE, CREATED_ON, TAT)  " +
//	"VALUES((select PO_NO from INVOICE_HEADER where INV_NO=?) , ?, current_timestamp, current_timestamp, ?) ";

	public static final String INSERT_AUDIT_TRAIL = "INSERT INTO PO_STATUS_AUDIT_TRAIL (PO_NO, PO_STATUS, PO_STATUS_DATE, CREATED_ON, TAT)" +
			" VALUES((select PO_NO from INVOICE_HEADER where INV_NO=?) , ?, current_timestamp, current_timestamp," +
			" timestampdiff(8, char(current_timestamp-(select STATUS_DATE from PO_HEADER" +
			" where PO_No=(select PO_NO from INVOICE_HEADER where INV_NO=?)))))";

	public static final String UPDATE_PO_HEADER_INACTIVE = "UPDATE PO_HEADER SET IS_ACTIVE=? , " +
	 "INACTIVE_DATE=?, PO_STATUS=?, STATUS_DATE=current_timestamp WHERE PO_NO = (select PO_NO from INVOICE_HEADER where INV_NO=?) ";

	public static final String UPDATE_PR_HEADER_INACTIVE = "UPDATE DP_PR_HEADER SET IS_ACTIVE=? , " +
		"INACTIVE_DATE=? WHERE PR_NO = (select PR_NO from PO_HEADER where PO_NO =" +
		" (select PO_NO from INVOICE_HEADER where INV_NO=?)) ";

	//Added by Shah
	public static final String GET_ALL_DCS_LIST_CHURN = "Select drch.DC_NO, CASE drch.DC_STATUS WHEN 'DRAFT' THEN 'Incomplete' WHEN 'CREATED' THEN 'Ready To Dispatch' WHEN 'SUCCESS' THEN 'Sent To Warehouse'" +
			" WHEN 'AIW' THEN 'Accepted in Warehouse' WHEN 'AIWM' THEN 'DC Accepted with Modification' WHEN 'REJECT' THEN 'Rejected' WHEN 'ERROR' THEN 'Error in DC' ELSE drch.DC_STATUS END DC_STATUS," +
			" drch.COURIER_AGENCY, drch.DOCKET_NO, drch.DC_REMARK, TO_CHAR(drch.DC_DRAFT_DATE, 'dd/MM/yyyy') AS DC_DRAFT_DATE, TO_CHAR(drch.DC_FINAL_DATE, 'dd/MM/yyyy') AS DC_FINAL_DATE, drch.WS_MESSAGE, TO_CHAR(drch.DC_DATE, 'dd/MM/yyyy') AS DC_DATE," +
			" drch.BOTREE_REMARK from DP_REV_CHURN_DC_HEADER drch where drch.DIST_ID=? order by DC_NO DESC with ur";

	public static final String DC_SR_NO_STATUS_CHURN="Select drcd.SERIAL_NUMBER, dpm.PRODUCT_NAME, CASE WHEN drch.DC_STATUS='DRAFT' and drcd.STATUS='IDC' THEN 'In Incomplete DC'" +
			" WHEN drch.DC_STATUS='CREATED' and drcd.STATUS='IDC' THEN 'Ready To Dispatch'" +
			" WHEN drcd.STATUS='S2W' THEN 'Sent To Warehouse'" +
			" WHEN drcd.STATUS='AIW' THEN 'Accepted in Warehouse'" +
			" WHEN drcd.STATUS='ABW' THEN 'Added By Warehouse'" +
			" WHEN drcd.STATUS='MSN' THEN 'Missing Serial Number'" +
			" WHEN drcd.STATUS='ERR' THEN 'Error in Sending to WareHouse' ELSE drcd.STATUS END DC_STATUS" +
			" From DP_REV_CHURN_DC_Detail drcd inner JOIN DP_REV_CHURN_DC_HEADER drch ON(drcd.DC_NO=drch.DC_NO)" +
			" LEFT OUTER JOIN DP_PRODUCT_MASTER dpm ON (drcd.PRODUCT_ID=dpm.PRODUCT_ID) Where   drch.DC_NO=? with UR";


	public static final String GET_DC_CHURN_DETAILS = "Select DRCH.DC_STATUS , DRCH.DC_REMARK, DRCH.COURIER_AGENCY,  DRCH.DOCKET_NO," +
			" AD.ACCOUNT_NAME, AD.CONTACT_NAME, AD.MOBILE_NUMBER, CM.CITY_NAME, SM.STATE_NAME as CIRCLE_NAME," +
			" DWM.WH_NAME,DWM.WH_ADDRESS1,DWM.WH_ADDRESS2, DWM.WH_PHONE, 'MAIN' AS QUERY_TYPE" +
			" from DP_REV_CHURN_DC_HEADER DRCH inner join VR_ACCOUNT_DETAILS AD on drch.DIST_ID=ad.ACCOUNT_ID" +
			" inner join VR_CITY_MASTER CM on AD.CITY_ID=CM.CITY_ID inner join DP_STATES_MASTER SM" +
			" on AD.STATE_ID=SM.STATE_ID inner join DP_WH_DIST_MAP DWDM on DWDM.DISTID=AD.ACCOUNT_ID inner join DP_WH_MASTER DWM" +
			" on DWM.WH_CODE=DWDM.WH_CODE where DRCH.DC_NO=? with ur";

	public static final String GET_DC_DETAILS_CHURN ="Select b.SI_ID, b.SERIAL_NUMBER, pm.PRODUCT_NAME , b.VC_ID, b.CUSTOMER_ID, b.AGEING , TO_CHAR(b.CHURN_DECLARE_DT, 'dd/MM/yyyy') AS DC_DATE," +
			" b.REMARK From DP_REV_CHURN_DC_HEADER a inner join DP_REV_CHURN_DC_DETAIL b on a.DC_NO=b.DC_NO and b.STATUS != 'ABW'" +
			" inner JOIN DP_PRODUCT_MASTER pm ON b.PRODUCT_ID=pm.PRODUCT_ID Where a.DC_NO=? ";
   //	Finish by Shah

	public static final String GET_DIST_LOCATOR = "select DISTRIBUTOR_LOCATOR from VR_ACCOUNT_DETAILS " +
			" where ACCOUNT_LEVEL=6 and  DISTRIBUTOR_LOCATOR = ?";

	public static final String GET_DIST_LOCATOR_EDIT = "select DISTRIBUTOR_LOCATOR from VR_ACCOUNT_DETAILS " +
	" where ACCOUNT_LEVEL=6 and  DISTRIBUTOR_LOCATOR = ? and ACCOUNT_ID !=?";

	public static final String UPDATE_PO_STATUS_AUDIT_TRAIL = "Insert into PO_STATUS_AUDIT_TRAIL(PO_NO ,PO_STATUS ,PO_STATUS_DATE ,CREATED_ON,TAT) values(?,?,?,current timestamp,?)";
	public static final String SQL_STB_STATUS_LIST = " SELECT SI.SERIAL_NO AS SERIAL_NO, PRODUCT_NAME ,  "+
	"  (SELECT STATUS_DESCRIPTION  FROM DP_CPE_STATUS_MASTER WHERE STATUS_ID = SI.STATUS ) AS STATUS, "+
	"  case when INV_NO like 'REV-%' then 'REVERSE-PO' else (SELECT PO_NO FROM INVOICE_HEADER WHERE  SI.INV_NO = INV_NO ) end AS PO_NO,  "+
	"   case when INV_NO like 'REV-%' then '' else (SELECT value FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID = 2 AND ID =  "+
	"   (select PO_STATUS from PO_HEADER where PO_NO = (select PO_NO from INVOICE_HEADER where INV_NO = SI.INV_NO))) end AS PO_STATUS ,  "+
	"   case when INV_NO like 'REV-%' then '' else (SELECT DC_NO FROM INVOICE_HEADER WHERE  INV_NO = SI.INV_NO ) end AS DC_NO,  "+
	"   case when INV_NO like 'REV-%' then '' else (SELECT DPDTH.DATE_CHAR(DC_DT) FROM INVOICE_HEADER WHERE INV_NO = SI.INV_NO ) end AS DC_DT,  '' as INV_CHANGE_DT , '' as  RECEIVED_ON, "+
	"   case when INV_NO like 'REV-%' then DPDTH.DATE_CHAR(SI.DISTRIBUTOR_PURCHASE_DATE) else (SELECT DPDTH.DATE_CHAR(ACCEPT_DATE) FROM INVOICE_HEADER WHERE INV_NO = SI.INV_NO ) end AS ACCEPT_DATE, "+
	"  DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME,DPDTH.DATE_CHAR(current timestamp) as CURRENTDATE  "+
	"  from DP_STOCK_INVENTORY SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM  "+
	"  where SI.DISTRIBUTOR_ID = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID  "+
	"  AND SERIAL_NO in (?) "+
	" UNION "+
	" SELECT SERIAL_NO_COLLECT as SERIAL_NO, PRODUCT_NAME , STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT, DPDTH.DATE_CHAR(INV_CHANGE_DT) as INV_CHANGE_DT, "+
	"  DPDTH.DATE_CHAR(timestamp_iso(COLLECTION_DATE)) AS RECEIVED_ON, DPDTH.DATE_CHAR(timestamp_iso(COLLECTION_DATE)) AS ACCEPT_DATE, "+
	" DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, DPDTH.DATE_CHAR(current timestamp) as CURRENTDATE "+
	" from DP_REV_STOCK_INVENTORY SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM  "+
	" where SI.CREATED_BY = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID "+
	" AND SERIAL_NO_COLLECT in (?)  "+
	" UNION "+
	" SELECT DEFECTIVE_SR_NO as SERIAL_NO, PRODUCT_NAME , STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) as INV_CHANGE_DT, "+
	"  DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) AS RECEIVED_ON, DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) AS ACCEPT_DATE, "+
	" DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, DPDTH.DATE_CHAR(current timestamp) as CURRENTDATE "+
	" from DP_REV_INVENTORY_CHANGE SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM  "+
	" where SI.NEW_DIST_D = DD.DISTRIBUTOR_ID  AND SI.DEFECTIVE_PRODUCT_ID = PM.PRODUCT_ID "+
	" AND DEFECTIVE_SR_NO in (?)  "+
	" UNION "+
	" SELECT SERIAL_NUMBER as SERIAL_NO, PRODUCT_NAME , STATUS, '' as PO_NO , '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  DPDTH.DATE_CHAR(CREATED_ON) as INV_CHANGE_DT, "+
	"  DPDTH.DATE_CHAR(CREATED_ON) AS RECEIVED_ON, DPDTH.DATE_CHAR(ACTION_DATE) AS ACCEPT_DATE, "+
	" DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, DPDTH.DATE_CHAR(current timestamp) as CURRENTDATE "+
	" from DP_REV_CHURN_INVENTORY SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM  "+
	" where SI.CREATED_BY = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID "+
	" AND SERIAL_NUMBER in (?)  "+
	" UNION "+
	" SELECT DISTINCT SERIAL_NO , PRODUCT_NAME, CASE STB_STATUS WHEN 'REC' THEN 'PENDING TO BE RECEIVED' WHEN 'ERR' THEN 'ERROR IN SENDING TO WH' "+
	" WHEN 'MSN' THEN 'NOT ACCEPTED IN WH' else STB_STATUS END AS STATUS, '' as PO_NO ,  "+
	" '' as PO_STATUS, '' as DC_NO, '' as DC_DT,  DPDTH.DATE_CHAR(timestamp_iso(INV_CHANGE_DATE)) as INV_CHANGE_DT, "+
	" DPDTH.DATE_CHAR(CREATED_ON) AS RECEIVED_ON, '' AS ACCEPT_DATE,   "+
	" DD.DISTRIBUTOR_ID, DD.DISTRIBUTOR_OLM_ID,  DD.DISTRIBUTOR_NAME, 'DP_ERROR_REV_DETAILS' as TABLENAME "+
	" from DP_ERROR_REV_DETAILS SI, DP_DIST_DETAILS DD ,  DP_PRODUCT_MASTER PM    "+
	" where SI.DIST_ID = DD.DISTRIBUTOR_ID  AND SI.PRODUCT_ID = PM.PRODUCT_ID   "+
	" AND SERIAL_NO in (?) "+
	" order by PRODUCT_NAME with ur ";

	public static final String MOVE_ERROR_PO_HIST = "INSERT INTO DP_ERROR_PO_DETAIL_HIST" +
												" (ERROR_ID, SERIAL_NO, PRODUCT_ID, DIST_ID, PR_NO, PO_NO, PO_DATE, DC_NO, DC_DATE, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, HIST_DATE)" +
												" (SELECT ERROR_ID, SERIAL_NO, PRODUCT_ID, DIST_ID, PR_NO, PO_NO, PO_DATE, DC_NO, DC_DATE, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, CURRENT_TIMESTAMP " +
												" FROM DP_ERROR_PO_DETAIL where PO_NO=?)";

	public static final String DELETE_ERROR_PO = "delete from DP_ERROR_PO_DETAIL where PO_NO=?";

	public static final String MOVE_ERROR_REV_HIST = "INSERT INTO DP_ERROR_REV_DETAILS_HIST" +
												" (ERROR_ID, SERIAL_NO, PRODUCT_ID, INV_CHANGE_DATE, COLLECTION_ID, DEFECT_ID, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, HIST_DATE)" +
												" (SELECT  ERROR_ID, SERIAL_NO, PRODUCT_ID, INV_CHANGE_DATE, COLLECTION_ID, DEFECT_ID, CONF_STATUS, CREATED_ON, OLD_PO_NO, OLD_PO_ACCEPT_DT, OLD_PRODUCT_ID, OLD_DIST_ID, OLD_STB_STATUS, OLD_INV_CHANGE_DT, OLD_COLLECTION_ID, OLD_DEFECT_ID, OLD_REV_COLL_DT, OLD_REV_DC_NO, OLD_REV_DC_DATE, CURRENT_TIMESTAMP" +
												" FROM DP_ERROR_REV_DETAILS where OLD_PO_NO=?)";

	public static final String DELETE_ERROR_REV = "delete from DP_ERROR_REV_DETAILS where OLD_PO_NO=?";

	public static final String GET_CHURN_PENDING_LIST = "Select ci.REQ_ID, pm.PRODUCT_NAME, ci.SERIAL_NUMBER, ci.VC_ID, ci.CUSTOMER_ID, ci.SI_ID, ci.CREATED_ON from DP_REV_CHURN_INVENTORY ci inner join DP_PRODUCT_MASTER pm on ci.PRODUCT_ID=pm.PRODUCT_ID and ci.STATUS='REC' AND ci.CREATED_BY = ? with ur";
	public static final String INSERT_CHURN_HIST = "INSERT INTO DP_REV_CHURN_INVENTORY_HIST " +
			" (REQ_ID, SERIAL_NUMBER, PRODUCT_ID, VC_ID, CUSTOMER_ID, SI_ID, AGEING, REMARK, STATUS, CIRCLE_ID, CREATED_ON, CREATED_BY, ACTION_DATE," +
			" HIST_DATE, PURCHASE_DT, SERVICE_START_DT, FLUSHOUT_FLAG, IS_SCM, ERROR_STATUS)" +
			" (SELECT REQ_ID, SERIAL_NUMBER, PRODUCT_ID, VC_ID, CUSTOMER_ID, SI_ID, AGEING, REMARK, STATUS, CIRCLE_ID, CREATED_ON, CREATED_BY, ACTION_DATE," +
			" CURRENT_TIMESTAMP, PURCHASE_DT, SERVICE_START_DT, 0, IS_SCM, ERROR_STATUS FROM DP_REV_CHURN_INVENTORY WHERE STATUS='REU' )";

	public static final String DELETE_CHURN_INVENTORY = "delete from DP_REV_CHURN_INVENTORY where STATUS='REU' ";
	public static final String GET_PENDING_FOR_DC_CHURN = "Select b.PRODUCT_NAME, a.SERIAL_NUMBER, a.VC_ID, a.CUSTOMER_ID, a.SI_ID, a.CREATED_ON, a.REQ_ID" +
			" from DP_REV_CHURN_INVENTORY a inner join DP_PRODUCT_MASTER b on a.PRODUCT_ID=b.PRODUCT_ID AND a.STATUS in " +
			" ('"+Constants.COLLECTION_STATUS_TYPE_COL+"','"+Constants.COLLECTION_STATUS_TYPE_ERR+"') and a.CREATED_BY=? ";

	public static final String INSERT_CHURN_DC_HEADER = "INSERT INTO DP_REV_CHURN_DC_HEADER(DC_NO, DC_STATUS, DC_REMARK, COURIER_AGENCY, DOCKET_NO, DC_DRAFT_DATE, DC_FINAL_DATE, CIRCLE_ID, DC_DATE, DIST_ID, WH_CODE)" +
			" VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, (select WH_CODE from DP_WH_DIST_MAP where DISTID=?))";

	public static final String INSERT_CHURN_DC_DETAIL = "INSERT INTO DP_REV_CHURN_DC_DETAIL(DC_NO, REQ_ID, SERIAL_NUMBER, PRODUCT_ID, VC_ID, CUSTOMER_ID, SI_ID, AGEING, REMARK, STATUS, CIRCLE_ID, DIST_ID, PURCHASE_DT, SERVICE_START_DT, CHURN_DECLARE_DT)" +
			" VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
	public static final String GET_SELECTED_CHURN_RECORDS = " select REQ_ID, SERIAL_NUMBER, PRODUCT_ID, VC_ID, CUSTOMER_ID, SI_ID, AGEING, REMARK, STATUS," +
					" CIRCLE_ID, PURCHASE_DT, SERVICE_START_DT, CREATED_ON from DP_REV_CHURN_INVENTORY where REQ_ID in ";

	public static final String UPDATE_CHURN_STOCK = "Update DP_REV_CHURN_INVENTORY set status =? Where REQ_ID in ";

	public static final String GET_CHURN_STB_DETAIL = "select PRODUCT_ID, SERIAL_NUMBER from DP_REV_CHURN_INVENTORY where REQ_ID=? with ur";

//	public static final String SQL_REPORT_CHURN_ADDTOSTOCK = "INSERT INTO DP_REV_CHURN_INVENTORY_HIST (REQ_ID,SERIAL_NUMBER,PRODUCT_ID,VC_ID,CUSTOMER_ID,SI_ID, AGEING,REMARK,STATUS, CIRCLE_ID,CREATED_ON,CREATED_BY, ACTION_DATE, HIST_DATE, PURCHASE_DT, SERVICE_START_DT, FLUSHOUT_FLAG, IS_SCM, ERROR_STATUS)" +
//	"  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";

	public static final String SQL_REPORT_CHURN_HDR = "Update DP_REV_CHURN_INVENTORY  set STATUS=?, REMARK=?, ACTION_DATE=? where REQ_ID= ? ";

	public static final String CHECK_ERROR_STATUS="SELECT STATUS,ERROR_STATUS FROM DP_REV_STOCK_INVENTORY where SERIAL_NO_COLLECT=? ";
	public static final String CHECK_ERROR_STATUS_CHURN="SELECT STATUS,ERROR_STATUS  FROM DP_REV_CHURN_INVENTORY where SERIAL_NUMBER=?";
	public static final String INSERT_INV_CHANGE_HIST = "INSERT INTO DP_REV_INVENTORY_CHANGE_HIST(" +
			" REQ_ID, DEFECTIVE_SR_NO, DEFECTIVE_PRODUCT_ID, DEFECTIVE_DIST_ID, NEW_SR_NO, NEW_PRODUCT_ID, NEW_DIST_D, INV_CHANGE_DATE, COLLECTION_ID," +
			" STATUS, CREATED_ON, UPDATED_ON, ARCHIVED_DATE, IS_SCM, ORIGINAL_DIST_ID, CUSTOMER_ID, DEFECT_ID, FLUSHOUT_FLAG, ERROR_STATUS)" +
			" SELECT " +
			" REQ_ID, DEFECTIVE_SR_NO, DEFECTIVE_PRODUCT_ID, DEFECTIVE_DIST_ID, NEW_SR_NO, NEW_PRODUCT_ID, NEW_DIST_D, INV_CHANGE_DATE, COLLECTION_ID," +
			" 'REU', CREATED_ON, UPDATED_ON, CURRENT_TIMESTAMP, IS_SCM, ORIGINAL_DIST_ID, CUSTOMER_ID, DEFECT_ID, FLUSHOUT_FLAG, ERROR_STATUS" +
			" FROM DP_REV_INVENTORY_CHANGE WHERE DEFECTIVE_SR_NO=? AND DEFECTIVE_PRODUCT_ID=? AND STATUS='COL' AND COLLECTION_ID='5' WITH UR";

	public static final String DELETE_INV_CHANGE = "DELETE from DP_REV_INVENTORY_CHANGE WHERE DEFECTIVE_SR_NO=? AND DEFECTIVE_PRODUCT_ID=? AND STATUS='COL' AND COLLECTION_ID='5' ";
	public static final String INSERT_INSERT_REV_INV_CHANGE_HIST = "INSERT INTO DP_REV_INVENTORY_CHANGE_HIST" +
			" (REQ_ID, DEFECTIVE_SR_NO, DEFECTIVE_PRODUCT_ID, DEFECTIVE_DIST_ID, NEW_SR_NO, NEW_PRODUCT_ID, NEW_DIST_D, INV_CHANGE_DATE, COLLECTION_ID, STATUS, CREATED_ON," +
			" UPDATED_ON, ARCHIVED_DATE, IS_SCM, ORIGINAL_DIST_ID, CUSTOMER_ID, DEFECT_ID, FLUSHOUT_FLAG, ERROR_STATUS)" +
			" select REQ_ID, DEFECTIVE_SR_NO, DEFECTIVE_PRODUCT_ID, DEFECTIVE_DIST_ID, NEW_SR_NO, NEW_PRODUCT_ID, NEW_DIST_D, INV_CHANGE_DATE, COLLECTION_ID, 'REP', CREATED_ON," +
			" UPDATED_ON, CURRENT_TIMESTAMP, IS_SCM, ORIGINAL_DIST_ID, CUSTOMER_ID, DEFECT_ID, FLUSHOUT_FLAG, ERROR_STATUS from DP_REV_INVENTORY_CHANGE where STATUS='COL' and DEFECTIVE_SR_NO=? with ur";
	public static final String DELETE_REV_INV_CHANGE = "DELETE from DP_REV_INVENTORY_CHANGE where STATUS='COL' and DEFECTIVE_SR_NO=? with ur";;
	public static final String SQL_SELECT_PWD_EXPIRY_KEY ="select timestampdiff( 16,char(current timestamp - (IPWD_CHANGED_DT))) as DATEDIFF from VR_LOGIN_MASTER where LOGIN_NAME =? with ur";

	
	public static final String SQL_SELECT_ACCOUNT_LEVEL_FOR_IT_HELP = " SELECT  LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID  FROM VR_ACCOUNT_LEVEL_MASTER "
		+"where level_id in ("+Constants.ACCESS_LEVEL_IDS_IT_HELP+")  with ur";
	
	public static final String SQL_SELECT_FOR_PARENT_ACC_COUNT_DTH_CIRCLE = "Select count(*) from VR_ACCOUNT_DETAILS DETAILS,VR_LOGIN_MASTER VLM where account_level=? AND VLM.STATUS = 'A'  AND DETAILS.account_id = VLM.login_id "; 

	public static final String SQL_SELECT_IS_NEW_USER_KEY ="select count(*) as result from VR_PASSWORD_HISTORY where LOGIN_ID =? with ur";
	//changed by aman for finance user
	public static final String SQL_ROLE_LIST = "Select * from VR_GROUP_DETAILS where (GROUP_ID<? or GROUP_ID=15)  and GROUP_ID not in(1) order by GROUP_ID with UR";
	
	//added by aman for change user role so that finance user doesnt comes in the user role dropdown
	public static final String SQL_GET_USER_LIST= "Select * from VR_GROUP_DETAILS where (GROUP_ID<?)  and GROUP_ID not in(1) order by GROUP_ID with UR";
	
	
	public static final String SQL_SELECT_ALL_ACC_DTH_CIRCLE = "GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID," +
			" CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS," +
			" DETAILS.ACCOUNT_LEVEL,COALESCE(details.DIST_CHANNEL_ID,0)as DIST_CHANNEL_ID ,	COALESCE(details.CHANNEL_CATEGORY_ID,0)as CHANNEL_CATEGORY_ID,COALESCE(DETAILS.OUTLET_TYPE,0) as" +
			" OUTLET_TYPE,parent.account_name as acc_parent from VR_ACCOUNT_DETAILS DETAILS , VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1,VR_GROUP_DETAILS group,VR_CIRCLE_MASTER circle,VR_ACCOUNT_DETAILS parent" +
			" where parent.account_id=details.parent_account and details.account_level = ?  and l1.login_id=details.parent_account AND DETAILS.account_id = VLM.login_id and VLM.group_id = group.group_id" +
			" and details.circle_id = circle.circle_id and VLM.STATUS = 'A' ";
	
	public static final String SQL_INSERT_ACC_CIRCLE_MAP="INSERT INTO DP_ACCOUNT_CIRCLE_MAP(ACCOUNT_ID, CIRCLE_ID, CREATED_BY, CREATED_ON) VALUES(?, ?, ?, current timestamp)";
	public static final String SQL_INSERT_ACC_DETAIL_IT_HELP = "INSERT INTO VR_ACCOUNT_DETAILS (ACCOUNT_ID,MOBILE_NUMBER,SIM_NUMBER,ACCOUNT_NAME,ACCOUNT_ADDRESS,EMAIL,CIRCLE_ID,PARENT_ACCOUNT,ROOT_LEVEL_ID,OPENING_DT,CREATED_DT,CREATED_BY,UPDATED_DT,UPDATED_BY,ACCOUNT_LEVEL,STATE_ID,ZONE_ID,CITY_ID,PIN_NUMBER,address_2,BILLABLE_ACCOUNT,BILLABLE_ACC_ID,LAPU_MOBILE_NO,LAPU_MOBILE_NO_2,FTA_MOBILE_NO,FTA_MOBILE_NO_2,DIST_CHANNEL_ID,CHANNEL_CATEGORY_ID,BEAT_CODE,OUTLET_TYPE,Contact_Name,ACCOUNT_CODE,RETAILER_TYPE,ALT_CHANNEL_TYPE,CHANNEL_TYPE,CATEGORY,OCTROI_CHARGE,TIN_NO,SERVICE_TAX_NO,PAN_NO,CST_NO,CST_DATE,TIN_DATE,DISTRIBUTOR_LOCATOR,IS_REPAIR,SR_NUMBER,APPROVAL_1,APPROVAL_2,TRANSACTION_TYPE, DIST_TYPE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	
	public static final String SQL_SELECT_SELECTED_CIRCLE_LIST="Select CIRCLE_ID from DP_ACCOUNT_CIRCLE_MAP where ACCOUNT_ID=? with ur";
	
	public static final String SQL_SELECT_SELECTED_TRANS_LIST="Select TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? with ur";
	
	public static final String SQL_INSERT_ACC_DETAIL_HIST_IT_HELP = " INSERT INTO VR_ACCOUNT_DETAILS_HIST(ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID, PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2, LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID, CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE, ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE, DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER, APPROVAL_1, APPROVAL_2, HIST_DATE,REMARKS,TRANSACTION_TYPE) " 
																	+" SELECT  ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID, PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2, LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID, CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE, ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE, DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER, APPROVAL_1, APPROVAL_2,?2,REMARKS,TRANSACTION_TYPE "
																	+" FROM DPDTH.VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?  with ur" ;
	//Neetika
	public static final String SQL_INSERT_ACC_DETAIL_HIST_IT_HELP_RET = " INSERT INTO VR_ACCOUNT_DETAILS_HIST(ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID, PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2, LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID, CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE, ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE, DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER, APPROVAL_1, APPROVAL_2, HIST_DATE,REMARKS,TRANSACTION_TYPE,RETAILER_LAPU) " 
		+" SELECT  ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID, PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2, LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID, CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE, ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE, DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER, APPROVAL_1, APPROVAL_2,?2,REMARKS,TRANSACTION_TYPE,RETAILER_LAPU "
		+" FROM VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?  with ur" ;

	public static final String SQL_DELETE_ACC_CIRCLE_MAP="DELETE FROM DP_ACCOUNT_CIRCLE_MAP where ACCOUNT_ID=?";
	
	public static final String SQL_INSERT_ACC_CIRCLE_MAP_HIST="INSERT INTO DP_ACCOUNT_CIRCLE_MAP_HIST(ACCOUNT_ID, CIRCLE_ID, CREATED_BY, CREATED_ON, HIST_DATE)" +
			" ( SELECT ACCOUNT_ID, CIRCLE_ID, CREATED_BY, CREATED_ON ,?2 FROM DP_ACCOUNT_CIRCLE_MAP where ACCOUNT_ID=? )";
	
	public static final String SQL_SELECT_STATUS = " SELECT  STATUS FROM VR_LOGIN_MASTER WHERE LOGIN_NAME=? with ur";

	public static final String SQL_INSERT_LOGIN_DETAIL_HIST="INSERT INTO VR_LOGIN_MASTER_HIST(LOGIN_ID, LOGIN_NAME, PASSWORD, M_PASSWORD, STATUS, LOGIN_ATTEMPTED, GROUP_ID, IPWD_CHANGED_DT, TYPE, LAST_LOGIN_TIME, SUSPENSION_DT, HIST_DATE)" +
			" ( SELECT LOGIN_ID, LOGIN_NAME, PASSWORD, M_PASSWORD, STATUS, LOGIN_ATTEMPTED, GROUP_ID, IPWD_CHANGED_DT, TYPE, LAST_LOGIN_TIME, SUSPENSION_DT ,?2 " +
			"  FROM VR_LOGIN_MASTER where LOGIN_ID=?)";
	
	//Added by Shilpa on 10/1/13 for the coming error while generating retailer due to not find out parent account
	
	public static final String SQL_SELECT_ALL_ACC_DIST =" GROUP.GROUP_NAME,VLM.LOGIN_NAME, L1.LOGIN_NAME as parent, DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID,CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER,DETAILS.ACCOUNT_ADDRESS,DETAILS.EMAIL,DETAILS.CATEGORY,VLM.STATUS,DETAILS.ACCOUNT_LEVEL,COALESCE(details.DIST_CHANNEL_ID,0)as DIST_CHANNEL_ID ,COALESCE(details.CHANNEL_CATEGORY_ID,0)as CHANNEL_CATEGORY_ID,COALESCE(DETAILS.OUTLET_TYPE,0) as " +
	" OUTLET_TYPE,parent.account_name as acc_parent from VR_ACCOUNT_DETAILS DETAILS , VR_LOGIN_MASTER VLM,VR_LOGIN_MASTER L1, VR_GROUP_DETAILS group,VR_CIRCLE_MASTER circle,VR_ACCOUNT_DETAILS parent where parent.account_id=details.parent_account and details.account_level = (select level_id from VR_ACCOUNT_LEVEL_MASTER where acc_level = (SELECT level2.ACC_LEVEL-1 FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE LEVEL_ID=?) AND HIERARCHY_ID =(SELECT HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER WHERE LEVEL_ID=?))  " +
	" and l1.login_id=details.parent_account AND DETAILS.account_id = VLM.login_id and VLM.group_id = group.group_id and details.circle_id = circle.circle_id ";
	
	//Added by Shilpa on 10/1/13 ENDS here 
	
	public static final String SQL_SELECT_CHILD_UNDER_CIRCLE ="Select distinct(acc.CIRCLE_ID),(Select CIRCLE_NAME from VR_CIRCLE_MASTER where CIRCLE_ID =acc.CIRCLE_ID ) as CIRCLE_NAME" +
			"	from VR_ACCOUNT_DETAILS acc where acc.PARENT_ACCOUNT = ? and acc.CIRCLE_ID  in (?2)";
	
	//Added by Shilpa for new Search Screen
	//public static final String SQL_SELECT_ALL_ACC_CHILD_DIST = "SELECT GROUPD.GROUP_NAME, LOGIN.LOGIN_NAME, L1.LOGIN_NAME as parent,(case L1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else L1.STATUS end) AS PARENT_STATUS , DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID, DETAILS.PARENT_ACCOUNT  , CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY,LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY , LOGIN2.LOGIN_NAME as CREATEDBYNAME FROM  VR_ACCOUNT_DETAILS DETAILS ,VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER LOGIN2,VR_LOGIN_MASTER L1 ,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD, VR_REGION_MASTER REGION WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID AND DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND CIRCLE.REGION_ID = REGION.REGION_ID AND LOGIN2.LOGIN_ID = DETAILS.CREATED_BY  ";

	public static final String SQL_SELECT_ALL_ACC_CHILD_DIST = "SELECT GROUPD.GROUP_NAME, LOGIN.LOGIN_NAME, L1.LOGIN_NAME as parent," +
			"(case L1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else L1.STATUS end) AS PARENT_STATUS , " +
			"DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID, DETAILS.PARENT_ACCOUNT  , CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DACM.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY,LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY , LOGIN2.LOGIN_NAME as CREATEDBYNAME FROM  VR_ACCOUNT_DETAILS DETAILS ,VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER LOGIN2,VR_LOGIN_MASTER L1 ,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD, VR_REGION_MASTER REGION, DP_ACCOUNT_CIRCLE_MAP DACM  WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID AND DETAILS.ACCOUNT_ID=DACM.ACCOUNT_ID  AND DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID AND  DACM.CIRCLE_ID = CIRCLE.CIRCLE_ID AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND CIRCLE.REGION_ID = REGION.REGION_ID AND LOGIN2.LOGIN_ID = DETAILS.CREATED_BY  ";
	public static final String SQL_SELECT_ALL_ACC_CHILD_DTH = "SELECT GROUPD.GROUP_NAME, LOGIN.LOGIN_NAME, L1.LOGIN_NAME as parent," +
	"(case L1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else L1.STATUS end) AS PARENT_STATUS , " +
	"DETAILS.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID, DETAILS.PARENT_ACCOUNT  , CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY,LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY ," +
	" LOGIN2.LOGIN_NAME as CREATEDBYNAME FROM  VR_ACCOUNT_DETAILS DETAILS ,VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER LOGIN2,VR_LOGIN_MASTER L1 ,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD, VR_REGION_MASTER REGION WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID  AND DETAILS.PARENT_ACCOUNT = L1.LOGIN_ID AND  DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND CIRCLE.REGION_ID = REGION.REGION_ID AND LOGIN2.LOGIN_ID = DETAILS.CREATED_BY  ";

	
//	public static final String SQL_SELECT_ALL_ACC_MULTI_CIRCLE = " select GD.GROUP_NAME, LOGIN.LOGIN_NAME, (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.PARENT_ACCOUNT) AS parent, DETAILS.PARENT_ACCOUNT , " +
//	" (SELECT STATUS from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.PARENT_ACCOUNT)  AS PARENT_STATUS  , "+
//	" DETAILS.PARENT_ACCOUNT as PCODE, DETAILS.ACCOUNT_ID, CM.CIRCLE_NAME, DETAILS.ACCOUNT_NAME, CM.CIRCLE_ID, DETAILS.MOBILE_NUMBER, DETAILS.SIM_NUMBER," +
//	" DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL, DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY, LOGIN.STATUS, DETAILS.CREATED_BY, " +
//	" (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.CREATED_BY) AS CREATEDBYNAME" +
//	" from DPDTH.VR_ACCOUNT_DETAILS DETAILS inner join DPDTH.VR_LOGIN_MASTER LOGIN on DETAILS.ACCOUNT_ID=LOGIN.LOGIN_ID" +
//	" inner join VR_GROUP_DETAILS GD on LOGIN.GROUP_ID=GD.GROUP_ID inner join DPDTH.DP_ACCOUNT_CIRCLE_MAP ACM on ACM.ACCOUNT_ID=DETAILS.ACCOUNT_ID " +
//	" inner join VR_CIRCLE_MASTER CM on CM.CIRCLE_ID=ACM.CIRCLE_ID ";

	public static final String GET_ALL_ACCOUNT_GENERIC = "select distinct ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS VAD ,DP_DISTRIBUTOR_MAPPING DDM where (IS_DISABLE='N' or IS_DISABLE is null) and VAD.ACCOUNT_ID=DDM.DP_DIST_ID ";


	public static final String SQL_SELECT_ALL_ACC_MULTI_CIRCLE = " select GD.GROUP_NAME, LOGIN.LOGIN_NAME, (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.PARENT_ACCOUNT) AS parent," +
			" (SELECT case STATUS when 'A' then 'Active' when 'I' then 'Suspended' else STATUS end from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.PARENT_ACCOUNT)  AS PARENT_STATUS," +
			" DETAILS.PARENT_ACCOUNT as PCODE, DETAILS.ACCOUNT_ID, DETAILS.PARENT_ACCOUNT,CM.CIRCLE_NAME, DETAILS.ACCOUNT_NAME, CM.CIRCLE_ID," +
			" DETAILS.MOBILE_NUMBER, DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL, DETAILS.CREATED_DT," +
			" COALESCE (DETAILS.CATEGORY,'X') as CATEGORY, LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY," +
			" (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.CREATED_BY) AS CREATEDBYNAME" +
			" from DPDTH.VR_ACCOUNT_DETAILS DETAILS inner join DPDTH.VR_LOGIN_MASTER LOGIN on " +
			" DETAILS.ACCOUNT_ID=LOGIN.LOGIN_ID inner join VR_GROUP_DETAILS GD on LOGIN.GROUP_ID=GD.GROUP_ID" +
			" inner join DPDTH.DP_ACCOUNT_CIRCLE_MAP ACM on ACM.ACCOUNT_ID=DETAILS.ACCOUNT_ID  inner join" +
			" VR_CIRCLE_MASTER CM on CM.CIRCLE_ID=ACM.CIRCLE_ID, VR_REGION_MASTER REGION where CM.REGION_ID = REGION.REGION_ID ";
	
	
	//ADDED BY SUGANDHA TO SEARCH DISTRIBUTOR for account update
	
	public static final String SQL_SELECT_DISTRIBUTOR_ACC = "select GD.GROUP_NAME, LOGIN.LOGIN_NAME, LOG1.LOGIN_NAME AS parent, case LOG1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else LOG1.STATUS end AS PARENT_STATUS, LOG1.LOGIN_ID as PCODE, DETAILS.ACCOUNT_ID," +
			" LOG1.LOGIN_ID, CM.CIRCLE_NAME, DETAILS.ACCOUNT_NAME, CM.CIRCLE_ID, DETAILS.MOBILE_NUMBER, DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL, DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY," +
			" LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY, (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.CREATED_BY) AS CREATEDBYNAME" +
			" from DPDTH.VR_ACCOUNT_DETAILS DETAILS inner join DPDTH.VR_LOGIN_MASTER LOGIN on DETAILS.ACCOUNT_ID=LOGIN.LOGIN_ID inner join VR_GROUP_DETAILS GD on LOGIN.GROUP_ID=GD.GROUP_ID inner join DPDTH.DP_DISTRIBUTOR_MAPPING DM on" +
			" DM.DP_DIST_ID=DETAILS.ACCOUNT_ID inner join VR_CIRCLE_MASTER CM on CM.CIRCLE_ID=DETAILS.CIRCLE_ID inner join VR_REGION_MASTER REGION on CM.REGION_ID = REGION.REGION_ID" +
			" , VR_LOGIN_MASTER LOG1 where DM.PARENT_ACCOUNT=LOG1.LOGIN_ID ";
	
//	Added to get circles for corresponding TSM for initiate stock transfer
	public static final String SQL_SELECT_CIRCLES_TSM =" SELECT a.CIRCLE_ID, a.CIRCLE_NAME FROM VR_CIRCLE_MASTER a inner join DP_ACCOUNT_CIRCLE_MAP b on a.CIRCLE_ID=b.CIRCLE_ID WHERE a.STATUS='A' and b.ACCOUNT_ID=? with ur";

	//Added by Shilpa for new Search Screen Ends here

	
	public static final String SQL_UDATE_WRONG_SHIP_DETAIL = "update DP_WRONG_SHIP_DETAIL set ASSIGNED_TO=? where TSM_DECISION is null and DISTRIBUTOR_ID =?";

	public static final String SQL_SELECT_TRANSACTION_LIST ="Select ID,VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID =23 with ur";
	public static final String SQL_INSERT_DISTRIBUTOR_MAPPING ="insert into DP_DISTRIBUTOR_MAPPING(DP_DIST_ID,EXT_DIST_ID,TRANSACTION_TYPE_ID,CREATED_DATE) values(?,?,?,current timestamp)";
	public static final String SQL_UPDATE_DISTRIBUTOR_MAPPING ="update DP_DISTRIBUTOR_MAPPING set UPDATED_DATE=current timestamp where DP_DIST_ID = ?";
	public static final String INSERT_PR_HEADER = "INSERT INTO DP_PR_HEADER(PR_NO, PR_DATE, PR_DIST_ID, EXT_DIST_ID, CIRCLE_ID, WEBSER_OP_FLAG, WEBSER_MSG, IS_ACTIVE, INACTIVE_DATE, CATEGORY_CODE)" +
			" VALUES(?, ?, ?, ?, ?, 'BT', 'PO Created by DP', 2, ?, ?)";
	public static final String INSERT_PR_DETAIILS = "INSERT INTO DP_PR_DETAILS(PR_NO, PRODUCT_ID, RAISED_QTY, CIRCLE_ID, CREATE_DATE, EXT_PRODUCT_ID, INHAND_QTY, DP_QTY, DP_OPEN_STOCK,ELIGIBLE_QUANTITY, MAX_PO_QUANTITY, FLAG, ELIGIBLE_AMOUNT, APPROVED_QTY)" +
			" VALUES(?, ?, ?, ?, ?, (select BT_PRODUCT_CODE from DP_PRODUCT_MASTER where PRODUCT_ID=?), (select char(count(1)) from DP_STOCK_INVENTORY where DISTRIBUTOR_ID=? and PRODUCT_ID=?)," +
			" (select char(count(1)) from DP_STOCK_INVENTORY where DISTRIBUTOR_ID=? and PRODUCT_ID=?), '0', 0, 0, 0, 0, ?)";
	public static final String INSERT_PO_HEADER = "INSERT INTO PO_HEADER(PR_NO, PO_NO, PO_DATE, PO_STATUS, STATUS_DATE, CREATE_DATE, REMARKS, IS_ACTIVE, INACTIVE_DATE, BT_ACK_DATE, CATEGORY_CODE)" +
			" VALUES(?, ?, ?, 31, ?, ?, 'DP PO', 2, ?, ?, ?)";
	public static final String INSERT_PO_DETAILS = "INSERT INTO PO_DETAILS(PO_NO, PO_QTY, CREATE_DATE, EXT_PRODUCT_ID, PRODUCT_ID) VALUES(?, ?, ?, (select BT_PRODUCT_CODE from DP_PRODUCT_MASTER where PRODUCT_ID=?), ?)";
	public static final String INSERT_INVOICE_HEADER = "INSERT INTO INVOICE_HEADER(PO_NO, INV_NO, INV_DATE, DC_NO, DC_DT, CREATE_DATE, STATUS, DIST_ACTION_DATE, ACCEPT_DATE, CATEGORY_CODE)" +
			" VALUES(?, ?, ?, ?, ?, ?, 'ACCEPT', ?, ?, ?)";
	public static final String INSERT_INVOICE_DETAIL = "INSERT INTO INVOICE_DETAILS(INV_NO, INV_QTY, CREATE_DATE, EXT_PRODUCT_ID, PRODUCT_ID, ACCEPTED_QTY)  VALUES(?, ?, ?, (select BT_PRODUCT_CODE from DP_PRODUCT_MASTER where PRODUCT_ID=?), ?, ?)";
	public static final String INSERT_PO_AUDIT_TRAIL = "INSERT INTO PO_STATUS_AUDIT_TRAIL(PO_NO, PO_STATUS, PO_STATUS_DATE, CREATED_ON, TAT) VALUES(?, 31, ?, ?, 0)";
	public static final String INSERT_STOCK_INVENTORY = "INSERT INTO DP_STOCK_INVENTORY(PRODUCT_ID, SERIAL_NO, MARK_DAMAGED, DISTRIBUTOR_ID, DISTRIBUTOR_PURCHASE_DATE, INV_NO, REMARKS, STATUS) " +
			" VALUES(?, ?, 'N', ?, ?, ?, 'DP PO', 5)";
	public static final String UPDATE_AV_MASTER = "update DP_AV_STOCK_MASTER set STATUS=1 where SERIAL_NO=? and CATEGORY_CODE=?";

	//public static final String GET_TRANSACTION_TYPE = "Select TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING where  DP_DIST_ID=? with ur";
	public static final String GET_TRANSACTION_TYPE = "Select TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING where  DP_DIST_ID=? and TRANSACTION_TYPE_ID not in (select DIST_TRANS_ID from DP_FNF_HEADER where DIST_ID=? and status in ('INITIATED','APPROVED','CONFIRMED') ) with ur";
	public static String SQL_DIST_FNF_DONE="select TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? and TRANSACTION_TYPE_ID not in (select DIST_TRANS_ID from DP_FNF_HEADER where DIST_ID=? and status in ('INITIATED','APPROVED','CONFIRMED') ) with ur";
	/* Commented By Parnika 
	public static final String GET_TSM_DIST_TRANSACTION = "select VAD.ACCOUNT_ID, VAD.account_name from VR_ACCOUNT_DETAILS VAD inner join VR_LOGIN_MASTER VLM on VAD.ACCOUNT_ID = VLM.LOGIN_ID inner join DP_DISTRIBUTOR_MAPPING DM on VAD.ACCOUNT_ID=DM.DP_DIST_ID where VAD.PARENT_ACCOUNT=? and VAD.CIRCLE_ID=? and DM.TRANSACTION_TYPE_ID=? with ur ";
	//Added by Sugandha to get only active distributor in ToDist for inter ssd stock transfer by DTH-Admin
	public static final String GET_TSM_TODIST_TRANSACTION="select VAD.ACCOUNT_ID, VAD.account_name from VR_ACCOUNT_DETAILS VAD inner join VR_LOGIN_MASTER VLM on VAD.ACCOUNT_ID = VLM.LOGIN_ID inner join DP_DISTRIBUTOR_MAPPING DM on VAD.ACCOUNT_ID=DM.DP_DIST_ID where VAD.PARENT_ACCOUNT=? and VAD.CIRCLE_ID=? and DM.TRANSACTION_TYPE_ID=? and VLM.STATUS='A' with ur";
	
	End of comments by Parnika */
	
	/* Added by Parnika  */

	public static final String SQL_SELECT_CATEGORY_CODE  ="select CATEGORY_CODE from INVOICE_HEADER where INV_NO= ? with ur";
	public static final String SQL_SELECT_PARENT_TSM_DEPOSIT  ="select PARENT_ACCOUNT from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID = ? and TRANSACTION_TYPE_ID=2 with ur";
	public static final String SQL_SELECT_PARENT__TSM_SALES  ="select PARENT_ACCOUNT from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID = ? and TRANSACTION_TYPE_ID=1 with ur";
	public static final String SQL_BUSINESS_CATEGORY_TSM_TYPE = "SELECT * FROM DP_BUSINESS_CATEGORY_MASTER bcm where TRANSACTION_TYPE = (select TRANSACTION_TYPE from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?)ORDER BY bcm.CATEGORY_CODE with ur";
	public static final String GET_TSM_SAME_TRANSACTION_TYPE_ALL = "select vad.account_id, vad.account_name " +
			"from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' " +
			"and vad.IS_DISABLE='N' and vad.ACCOUNT_LEVEL = ? " +
			"and vad.TRANSACTION_TYPE = (select TRANSACTION_TYPE from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?)" +
			"with ur";
	public static final String GET_TSM_SAME_TRANSACTION_TYPE_NOT_ALL  ="select a.account_id, a.account_name " +
			"from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm " +
			"where a.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and a.ACCOUNT_ID=b.ACCOUNT_ID " +
			"and a.IS_DISABLE='N' and a.ACCOUNT_LEVEL = ? and b.CIRCLE_ID = ? " +
			"and  a.TRANSACTION_TYPE = (select TRANSACTION_TYPE from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?)" +
			"  with ur";
	
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_FROM_DIST = "select VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME " +
			"from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, DP_DISTRIBUTOR_MAPPING DDM " +
			"where VAD.ACCOUNT_ID = VLM.LOGIN_ID and DDM.DP_DIST_ID = VLM.LOGIN_ID and DDM.PARENT_ACCOUNT = ? " +
			"and VAD.CIRCLE_ID= ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_REV_LOG_DIST = "select VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME " +
			"from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, DP_DISTRIBUTOR_MAPPING DDM " +
			"where VAD.ACCOUNT_ID = VLM.LOGIN_ID and DDM.DP_DIST_ID = VLM.LOGIN_ID  and VLM.STATUS='A' " +
			"and VAD.IS_DISABLE='N'and DDM.PARENT_ACCOUNT = ? and VAD.CIRCLE_ID= ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_DEPOSIT_FROM_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vad.ACCOUNT_LEVEL = ? and vad.TRANSACTION_TYPE = ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_DEPOSIT_FROM_TSM_NOT_ALL = "select a.account_id, a.account_name  from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm  where a.account_id = vlm.LOGIN_ID and a.ACCOUNT_ID=b.ACCOUNT_ID and a.ACCOUNT_LEVEL = ?  AND b.CIRCLE_ID = ? and a.TRANSACTION_TYPE = ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_DEPOSIT_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and vad.IS_DISABLE='N' and vad.ACCOUNT_LEVEL = ? and vad.TRANSACTION_TYPE = ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_DEPOSIT_TSM_NOT_ALL = "select a.account_id," +
			" a.account_name  from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm " +
			"where a.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and a.ACCOUNT_ID=b.ACCOUNT_ID " +
			"and a.IS_DISABLE='N' and a.ACCOUNT_LEVEL = ? AND b.CIRCLE_ID = ?  and a.TRANSACTION_TYPE = ? with ur";
	
	public static final String GET_ACCOUNT_DETAILS_CATEGORY_WISE_FROM_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vad.ACCOUNT_LEVEL = ? and vad.TRANSACTION_TYPE = (SELECT TRANSACTION_TYPE from DP_BUSINESS_CATEGORY_MASTER where CATEGORY_CODE = ? ) with ur";
	
	public static final String GET_ACCOUNT_DETAILS_CATEGORY_WISE_FROM_TSM_NOT_ALL = "select a.account_id, a.account_name  " 
		+" from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm  "
		+" where a.account_id = vlm.LOGIN_ID and a.ACCOUNT_ID=b.ACCOUNT_ID "
		+" and a.ACCOUNT_LEVEL = ? " 
		+" AND b.CIRCLE_ID = ? and a.TRANSACTION_TYPE = (SELECT TRANSACTION_TYPE from DP_BUSINESS_CATEGORY_MASTER where CATEGORY_CODE = ? ) with ur";
	
	public static final String GET_ACCOUNT_DETAILS_CATEGORY_WISE_TSM_ALL = "select vad.account_id, vad.account_name from vr_account_details vad,VR_LOGIN_MASTER vlm where vad.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and vad.IS_DISABLE='N' and vad.ACCOUNT_LEVEL = ? and vad.TRANSACTION_TYPE = (SELECT TRANSACTION_TYPE from DP_BUSINESS_CATEGORY_MASTER where CATEGORY_CODE = ? ) with ur";
	
	public static final String GET_ACCOUNT_DETAILS_CATEGORY_WISE_TSM_NOT_ALL = "select a.account_id, a.account_name  " 
		+" from vr_account_details a,DP_ACCOUNT_CIRCLE_MAP b, VR_LOGIN_MASTER vlm  "
		+" where a.account_id = vlm.LOGIN_ID and vlm.STATUS ='A' and a.ACCOUNT_ID=b.ACCOUNT_ID "
		+" and a.IS_DISABLE='N' and a.ACCOUNT_LEVEL = ? " 
		+" AND b.CIRCLE_ID = ?  and a.TRANSACTION_TYPE = (SELECT TRANSACTION_TYPE from DP_BUSINESS_CATEGORY_MASTER where CATEGORY_CODE = ? ) with ur";
	
	
	public static final String SQL_VIEW_ERROR_PO_INIT ="SELECT CIRCLE_NAME, DISTRIBUTOR_OLM_ID, DISTRIBUTOR_NAME," +
			" TSM_NAME,PO_NO, DC_NO,  DC_DATE from ( select distinct ED.PO_NO, ED.DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE " +
			", ED.DIST_ID, case when POH.CATEGORY_CODE =1 then 2 else 1 end TRANSACTION_TYPE " +
			"FROM DP_ERROR_PO_DETAIL ED inner join PO_HEADER POH on ED.PO_NO=poh.PO_NO group by ED.PO_NO , " +
			"ED.DC_NO, ED.DC_DATE, ED.DIST_ID, POH.CATEGORY_CODE order by DC_DATE DESC ) temp  " +
			"join DPDTH.DP_DIST_DETAILS DD on  DD.DISTRIBUTOR_ID = temp.DIST_ID and DD.TSM_TRANSACTION_TYPE=temp.TRANSACTION_TYPE " +
			"union SELECT CIRCLE_NAME, DISTRIBUTOR_OLM_ID, DISTRIBUTOR_NAME, TSM_NAME, PO_NO, DC_NO,  " +
			"DC_DATE from ( select distinct ED.PO_NO, ED.DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE , " +
			"ED.DIST_ID, case when POH.CATEGORY_CODE =1 then 2 else 1 end TRANSACTION_TYPE " +
			"FROM DP_ERROR_PO_DETAIL ED inner join PO_HEADER POH on ED.PO_NO=poh.PO_NO group by ED.PO_NO , " +
			"ED.DC_NO, ED.DC_DATE, ED.DIST_ID, POH.CATEGORY_CODE order by DC_DATE DESC ) temp  " +
			"join DPDTH.DP_DIST_DETAILS_SALES DD on  DD.DISTRIBUTOR_ID= temp.DIST_ID " +
			"and DD.TSM_TRANSACTION_TYPE=temp.TRANSACTION_TYPE with ur";
	
	public static final String GET_TSM_DIST_TRANSACTION = "select VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, DP_DISTRIBUTOR_MAPPING DDM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and DDM.DP_DIST_ID = VLM.LOGIN_ID and DDM.PARENT_ACCOUNT = ? and VAD.CIRCLE_ID= ? with ur";
	//Only active distributor in ToDist for inter ssd stock transfer by DTH-Admin
	public static final String GET_TSM_TODIST_TRANSACTION="select VAD.ACCOUNT_ID, VAD.ACCOUNT_NAME from VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM, DP_DISTRIBUTOR_MAPPING DDM where VAD.ACCOUNT_ID = VLM.LOGIN_ID and DDM.DP_DIST_ID = VLM.LOGIN_ID and DDM.PARENT_ACCOUNT = ? and VAD.CIRCLE_ID= ? and VLM.STATUS='A' with ur";
	public static final String DIST_PARENT_DETAILS = "SELECT  DETAILS.ACCOUNT_NAME, login.LOGIN_NAME, DETAILS.ACCOUNT_ID as PARENT_ACCOUNT FROM VR_LOGIN_MASTER LOGIN, VR_ACCOUNT_DETAILS DETAILS" +
	" WHERE LOGIN.LOGIN_ID=DETAILS.ACCOUNT_ID AND LOGIN.LOGIN_ID in (select PARENT_ACCOUNT from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=?) with ur";
	
	public static final String SQL_INSERT_DISTRIBUTOR_ACCOUNT_DETAILS= "INSERT INTO DP_DISTRIBUTOR_MAPPING(DP_DIST_ID, EXT_DIST_ID, TRANSACTION_TYPE_ID, CREATED_DATE, PARENT_ACCOUNT) VALUES(?, ?, ?, current timestamp, ?)";
	
	public static final String SQL_SELECT_ALL_ACC_CHILD_DISTRIBUTOR = "SELECT GROUPD.GROUP_NAME, LOGIN.LOGIN_NAME, " +
			"L1.LOGIN_NAME as PARENT,(case L1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else" +
			" L1.STATUS end) AS PARENT_STATUS , DM.PARENT_ACCOUNT PCODE,DETAILS.ACCOUNT_ID, DM.PARENT_ACCOUNT  ," +
			" CIRCLE.CIRCLE_NAME,DETAILS.ACCOUNT_NAME,DETAILS.CIRCLE_ID,DETAILS.MOBILE_NUMBER,DETAILS.SIM_NUMBER, " +
			"DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL,DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') " +
			"as CATEGORY,LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY , LOGIN2.LOGIN_NAME " +
			"as CREATEDBYNAME FROM  VR_ACCOUNT_DETAILS DETAILS ,VR_LOGIN_MASTER LOGIN, VR_LOGIN_MASTER LOGIN2, " +
			"VR_LOGIN_MASTER L1 ,VR_CIRCLE_MASTER CIRCLE,VR_GROUP_DETAILS GROUPD, VR_REGION_MASTER REGION, " +
			"DP_DISTRIBUTOR_MAPPING DM WHERE LOGIN.LOGIN_ID = DETAILS.ACCOUNT_ID " +
			"AND DM.PARENT_ACCOUNT = L1.LOGIN_ID AND DETAILS.CIRCLE_ID = CIRCLE.CIRCLE_ID " +
			"AND LOGIN.GROUP_ID=GROUPD.GROUP_ID AND CIRCLE.REGION_ID = REGION.REGION_ID " +
			"AND LOGIN2.LOGIN_ID = DETAILS.CREATED_BY AND  DM.DP_DIST_ID = LOGIN.LOGIN_ID";
	
	public static final String SQL_DISTRIBUTOR_PARENT_DETAILS= "SELECT TRANSACTION_TYPE_ID,PARENT_ACCOUNT FROM DP_DISTRIBUTOR_MAPPING DM WHERE DP_DIST_ID = ? WITH UR";
	
	public static final String SQL_SELECT_ACCOUNT_LEVEL_ID= "SELECT GROUP_ID FROM VR_LOGIN_MASTER where LOGIN_ID = ? WITH UR";
	
	//Commented by NAZIM HUSSAIN as its creating conversion issue (SR3715235)
	//	public static final String SQL_UPDATE_DP_DISTRIBUTOR_MAPPING ="update DP_DISTRIBUTOR_MAPPING set UPDATED_DATE=current date ,PARENT_ACCOUNT = ? where DP_DIST_ID = ? and TRANSACTION_TYPE_ID = ?  with ur";
	public static final String SQL_UPDATE_DP_DISTRIBUTOR_MAPPING ="update DP_DISTRIBUTOR_MAPPING set UPDATED_DATE=current_timestamp ,PARENT_ACCOUNT = ? where DP_DIST_ID = ? and TRANSACTION_TYPE_ID = ?  with ur";
	
	public static final String SQL_SELECT_DP_WRONG_SHIP_DETAIL = "select * from DP_WRONG_SHIP_DETAIL where TSM_DECISION is null and DISTRIBUTOR_ID = ? with ur";
	
	public static final String SQL_SELECT_WRONG_SHIP_TRANSACTION_TYPE = "select cm.TRANSACTION_TYPE,pm.PRODUCT_ID from DP_PRODUCT_MASTER pm, DP_BUSINESS_CATEGORY_MASTER cm where PRODUCT_ID = ? and pm.CATEGORY_CODE=cm.CATEGORY_CODE";
	
	public static final String SQL_UPDATE_WRONG_SHIP_ASSIGNMENT = "update DP_WRONG_SHIP_DETAIL set ASSIGNED_TO=? where TSM_DECISION is null and DISTRIBUTOR_ID =? and PRODUCT_ID = ?";
	
	public static final String SQL_SELECT_DIST_DETAILS_EDIT = "select SR_NUMBER, APPROVAL_1 from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ? with ur";
	
	public static final String SQL_GET_DISTRIBUTORS_TRANSACTION = "select a.TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING a inner join DP_DISTRIBUTOR_MAPPING b on a.TRANSACTION_TYPE_ID=b.TRANSACTION_TYPE_ID where a.DP_DIST_ID=? and b.DP_DIST_ID=? with ur";
	
	/* End of changes by Parnika */
	public static final String AV_RESTRICTION_STATUS = "select WEBSERVICE_STATUS from DP_LAST_WEBSERVICE_RUN where WEBSERVICE_ID=2 with ur";
	public static final String SQL_SELECT_AV_STATUS = "select STATUS, DISTRIBUTOR_ID from DP_STOCK_INVENTORY where SERIAL_NO=? with ur";
	public static final String SQL_SELECT_DISTRIBUTOR_ACC_PAR = "select GD.GROUP_NAME, LOGIN.LOGIN_NAME, LOG1.LOGIN_NAME AS parent, case LOG1.STATUS when 'A' then 'Active' when 'I' then 'Suspended' else LOG1.STATUS end AS PARENT_STATUS, LOG1.LOGIN_ID as PCODE, DETAILS.ACCOUNT_ID," +
			" LOG1.LOGIN_ID, CM.CIRCLE_NAME, DETAILS.ACCOUNT_NAME, CM.CIRCLE_ID, DETAILS.MOBILE_NUMBER, DETAILS.SIM_NUMBER, DETAILS.ACCOUNT_ADDRESS, DETAILS.EMAIL, DETAILS.CREATED_DT, COALESCE (DETAILS.CATEGORY,'X') as CATEGORY," +
			" LOGIN.STATUS, REGION.REGION_NAME , DETAILS.CREATED_BY, (SELECT LOGIN_NAME from DPDTH.VR_LOGIN_MASTER WHERE LOGIN_ID=DETAILS.CREATED_BY) AS CREATEDBYNAME" +
			" from DPDTH.VR_ACCOUNT_DETAILS DETAILS inner join DPDTH.VR_LOGIN_MASTER LOGIN on DETAILS.ACCOUNT_ID=LOGIN.LOGIN_ID inner join VR_GROUP_DETAILS GD on LOGIN.GROUP_ID=GD.GROUP_ID inner join DPDTH.DP_DISTRIBUTOR_MAPPING DM on" +
			" DM.DP_DIST_ID=DETAILS.ACCOUNT_ID inner join VR_CIRCLE_MASTER CM on CM.CIRCLE_ID=DETAILS.CIRCLE_ID inner join VR_REGION_MASTER REGION on CM.REGION_ID = REGION.REGION_ID," +
			" VR_LOGIN_MASTER LOG1 where DM.PARENT_ACCOUNT=LOG1.LOGIN_ID ";

	public static final String VALIDATE_DIST_OLMID = "select LOGIN_ID, STATUS from VR_LOGIN_MASTER where LOGIN_NAME=? and GROUP_ID=7 with ur";

	//Added by Sugandha 
	public static final String SQL_INSERT_DISTRIBUTOR_ACCOUNT_DETAILS_HIST ="INSERT INTO DPDTH.DP_DISTRIBUTOR_MAPPING_HIST(DP_DIST_ID, EXT_DIST_ID, TRANSACTION_TYPE_ID, CREATED_DATE, UPDATED_DATE, PARENT_ACCOUNT, HIST_DATE)"+ 
					" SELECT DP_DIST_ID, EXT_DIST_ID, TRANSACTION_TYPE_ID, CREATED_DATE, UPDATED_DATE, PARENT_ACCOUNT,current timestamp "+ 
					" FROM DPDTH.DP_DISTRIBUTOR_MAPPING  where DP_DIST_ID=?" ;
//	Added by sugandha for distributor list whose FnF has to be initiated starts here
	/*public static final String SQL_DISTRIBUTOR_LIST_INITIATE_LIST="select si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME, min((DAYS(CURRENT_DATE) - DAYS(si.ASSIGN_DATE))) as LAST_ACT_DAY,ad.TRANSACTION_TYPE  "
															+" from VR_ACCOUNT_DETAILS ad inner join DP_STOCK_INVENTORY_ASSIGNED si on ad.ACCOUNT_ID=si.DISTRIBUTOR_ID and si.STATUS=3 "
															+" inner join VR_LOGIN_MASTER lm on ad.ACCOUNT_ID=lm.LOGIN_ID and lm.STATUS='A'  "
															+" inner join DP_DISTRIBUTOR_MAPPING MAP on ad.ACCOUNT_ID=MAP.DP_DIST_ID and ad.TRANSACTION_TYPE=MAP.TRANSACTION_TYPE_ID "  
															+" and MAP.PARENT_ACCOUNT=? left outer join DP_FNF_HEADER fnf on map.DP_DIST_ID=fnf.DIST_ID and fnf.DIST_TRANS_ID=map.TRANSACTION_TYPE_ID"
															+" where fnf.DIST_ID is null "
															+" group by si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME,ad.TRANSACTION_TYPE " 
															+" having MAX(date(si.ASSIGN_DATE)) < (current_date - 30 days) with ur";

*/
	public static final String SQL_DISTRIBUTOR_LIST_INITIATE_LIST="select si.DISTRIBUTOR_ID,lm.LOGIN_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME, min((DAYS(CURRENT_DATE) - DAYS(si.ASSIGN_DATE))) as LAST_ACT_DAY,ad.TRANSACTION_TYPE  "
		+" from VR_ACCOUNT_DETAILS ad left outer join DP_STOCK_INVENTORY_ASSIGNED si on ad.ACCOUNT_ID=si.DISTRIBUTOR_ID and si.STATUS=3 "
		+" inner join VR_LOGIN_MASTER lm on ad.ACCOUNT_ID=lm.LOGIN_ID and lm.STATUS='A' and (date(ad.CREATED_DT) < (current_date - 30 days))  "
		+" inner join DP_DISTRIBUTOR_MAPPING MAP on ad.ACCOUNT_ID=MAP.DP_DIST_ID inner join VR_ACCOUNT_DETAILS tsmad on  tsmad.ACCOUNT_ID=MAP.PARENT_ACCOUNT "  
		+" and MAP.PARENT_ACCOUNT=? left outer join DP_FNF_HEADER fnf on map.DP_DIST_ID=fnf.DIST_ID and fnf.DIST_TRANS_ID=map.TRANSACTION_TYPE_ID"
		+" where fnf.DIST_ID is null "
		+" group by si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME,ad.TRANSACTION_TYPE,lm.LOGIN_ID " 
		+" having MAX(date(si.ASSIGN_DATE)) < (current_date - 30 days) or MAX(date(si.ASSIGN_DATE)) is null with ur";


	/*public static final String SQL_DISTRIBUTOR_SEARCH_LIST="select si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME, min((DAYS(CURRENT_DATE) - DAYS(si.ASSIGN_DATE))) as LAST_ACT_DAY,ad.TRANSACTION_TYPE  "
		+" from VR_ACCOUNT_DETAILS ad inner join DP_STOCK_INVENTORY_ASSIGNED si on ad.ACCOUNT_ID=si.DISTRIBUTOR_ID and si.STATUS=3 "
		+" inner join VR_LOGIN_MASTER lm on ad.ACCOUNT_ID=lm.LOGIN_ID and lm.STATUS='A'  "
		+" inner join DP_DISTRIBUTOR_MAPPING MAP on ad.ACCOUNT_ID=MAP.DP_DIST_ID and ad.TRANSACTION_TYPE=MAP.TRANSACTION_TYPE_ID "  
		+" and MAP.PARENT_ACCOUNT=? left outer join DP_FNF_HEADER fnf on map.DP_DIST_ID=fnf.DIST_ID and fnf.DIST_TRANS_ID=map.TRANSACTION_TYPE_ID"
		+" where fnf.DIST_ID is null and lm.LOGIN_NAME=? "
		+" group by si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME,ad.TRANSACTION_TYPE " 
		+" with ur";
	*/
	
	public static final String SQL_DISTRIBUTOR_SEARCH_LIST="select si.DISTRIBUTOR_ID,lm.LOGIN_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME, min((DAYS(CURRENT_DATE) - DAYS(si.ASSIGN_DATE))) as LAST_ACT_DAY,ad.TRANSACTION_TYPE  "
		+" from VR_ACCOUNT_DETAILS ad left outer join DP_STOCK_INVENTORY_ASSIGNED si on ad.ACCOUNT_ID=si.DISTRIBUTOR_ID and si.STATUS=3 "
		+" inner join VR_LOGIN_MASTER lm on ad.ACCOUNT_ID=lm.LOGIN_ID and lm.STATUS='A'  "
		+" inner join DP_DISTRIBUTOR_MAPPING MAP on ad.ACCOUNT_ID=MAP.DP_DIST_ID inner join VR_ACCOUNT_DETAILS tsmad on  tsmad.ACCOUNT_ID=MAP.PARENT_ACCOUNT "  
		+" and MAP.PARENT_ACCOUNT=? left outer join DP_FNF_HEADER fnf on map.DP_DIST_ID=fnf.DIST_ID and fnf.DIST_TRANS_ID=map.TRANSACTION_TYPE_ID"
		+" where fnf.DIST_ID is null and lm.LOGIN_NAME=? "
		+" group by si.DISTRIBUTOR_ID, lm.LOGIN_NAME, ad.ACCOUNT_NAME,ad.TRANSACTION_TYPE,lm.LOGIN_ID " 
		+" with ur";
	
	
	public static final String SQL_INSERT_INTO_DP_FNF_HEADER = "INSERT INTO DPDTH.DP_FNF_HEADER(DIST_ID, DIST_TRANS_ID, IS_DEBIT, CIRCLE, INITIATED_BY, INITIATION_DT, INIT_REMARKS,DAYS_SINCE_LAST_ACT) VALUES(?, ( select TRANSACTION_TYPE_ID from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? and PARENT_ACCOUNT=? ) ,?,(select CIRCLE_ID from VR_ACCOUNT_DETAILS where ACCOUNT_ID = ?),?,current_timestamp,?,?)";
	//Added by Sugandha to view stock of AV type for distributor whose FnF has to be done
	public static final String SQL_VIEW_AV_STOCK_FNF_DIST = "SELECT SER_STK_TEMP.PRODUCT_NAME, SER_STK_TEMP.SER_STK, 0 AS NSER_STK, PENDING_STK_TEMP.PENDING_STK, 0 AS REV_PEND_STK,0 AS REV_DC_STK, 0 AS CHURN_STK, 0 AS UPGRADE_STK "+
						" FROM (select COUNT(SI.SERIAL_NO) AS SER_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
						" LEFT OUTER JOIN DP_STOCK_INVENTORY SI on AD.ACCOUNT_ID=SI.DISTRIBUTOR_ID AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.MARK_DAMAGED='N' "+
						" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE IN (4) GROUP BY PM.PRODUCT_NAME ) AS SER_STK_TEMP INNER JOIN "+
						" (SELECT PENDING_STK1.PENDING_STK+PENDING_STK2.PENDING_STK AS PENDING_STK, PENDING_STK1.PRODUCT_NAME FROM "+
						" (SELECT sum(COALESCE(PD.APPROVED_QTY, 0)) AS PENDING_STK, PM.PRODUCT_NAME FROM DP_PRODUCT_MASTER PM "+
						" INNER JOIN VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID LEFT OUTER JOIN DP_PR_HEADER PH ON PH.PR_DIST_ID=AD.ACCOUNT_ID AND PH.WEBSER_OP_FLAG='BT' "+ 
						" LEFT OUTER JOIN DP_PR_DETAILS PD on PH.PR_NO=PD.PR_NO and PD.PRODUCT_ID=PM.PRODUCT_ID "+
						" LEFT OUTER JOIN PO_HEADER PO on PH.PR_NO=PO.PR_NO and PO.PO_STATUS in (1,2,3,4) "+
						" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE IN (4) GROUP BY PM.PRODUCT_NAME) AS PENDING_STK1 INNER JOIN (select COUNT(SI.SERIAL_NO) AS PENDING_STK, PM.PRODUCT_NAME "+
						" from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
						" LEFT OUTER JOIN DP_STOCK_INVENTORY SI on AD.ACCOUNT_ID=SI.DISTRIBUTOR_ID AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.MARK_DAMAGED='I'"+
						" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE IN (4)"+
						" GROUP BY PM.PRODUCT_NAME) AS PENDING_STK2 ON PENDING_STK1.PRODUCT_NAME=PENDING_STK2.PRODUCT_NAME) AS PENDING_STK_TEMP ON PENDING_STK_TEMP.PRODUCT_NAME=SER_STK_TEMP.PRODUCT_NAME WITH UR"; 
	
//	Added by Sugandha to view stock of CPE type for distributor whose FnF has to be done
	public static final String SQL_VIEW_CPE_STOCK_FNF_DIST = "SELECT FWD_STK_TEMP.PRODUCT_NAME, FWD_STK_TEMP.SER_STK, FWD_STK_TEMP.NSER_STK, PENDING_STK_TEMP.PENDING_STK, REV_STK_TEMP.REV_PEND_STK, "+
							" REV_DC_STK_TEMP.REV_DC_STK, CHURN_STK_TEMP.CHURN_STK, UPGRADE_STK_TEMP.UPGRADE_STK "+
							" FROM (select PM.PRODUCT_NAME, COUNT(SI.SERIAL_NO) AS SER_STK, COALESCE(CLOSING_STOCK, 0) AS NSER_STK "+
							" from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_STOCK_INVENTORY SI on AD.ACCOUNT_ID=SI.DISTRIBUTOR_ID AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.MARK_DAMAGED='N' "+
							" LEFT OUTER JOIN DP_OPEN_STOCK_DTL OS ON AD.ACCOUNT_ID=OS.DIST_ID AND PM.PRODUCT_ID=OS.PRODUCT_ID "+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 "+
							" GROUP BY PM.PRODUCT_NAME, CLOSING_STOCK ORDER BY PRODUCT_NAME) AS FWD_STK_TEMP INNER JOIN (SELECT PENDING_STK1.PENDING_STK+PENDING_STK2.PENDING_STK AS PENDING_STK, PENDING_STK1.PRODUCT_NAME FROM "+
							" (SELECT sum(COALESCE(PD.APPROVED_QTY, 0)) AS PENDING_STK, PM.PRODUCT_NAME FROM DP_PRODUCT_MASTER PM "+
							" INNER JOIN VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_PR_HEADER PH ON PH.PR_DIST_ID=AD.ACCOUNT_ID AND PH.WEBSER_OP_FLAG='BT' "+
							" LEFT OUTER JOIN DP_PR_DETAILS PD on PH.PR_NO=PD.PR_NO and PD.PRODUCT_ID=PM.PRODUCT_ID "+ 
							" LEFT OUTER JOIN PO_HEADER PO on PH.PR_NO=PO.PR_NO and PO.PO_STATUS in (1,2,3,4) "+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME) AS PENDING_STK1 INNER JOIN (select COUNT(SI.SERIAL_NO) AS PENDING_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_STOCK_INVENTORY SI on AD.ACCOUNT_ID=SI.DISTRIBUTOR_ID AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.MARK_DAMAGED='I' "+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME ) AS PENDING_STK2 ON PENDING_STK1.PRODUCT_NAME=PENDING_STK2.PRODUCT_NAME) AS PENDING_STK_TEMP ON PENDING_STK_TEMP.PRODUCT_NAME=FWD_STK_TEMP.PRODUCT_NAME INNER JOIN(SELECT REV_STK1.PRODUCT_NAME, REV_STK1.REV_STK + REV_STK2.REV_STK AS REV_PEND_STK FROM (select COUNT(SI.DEFECTIVE_SR_NO) AS REV_STK, PM.PRODUCT_NAME "+
							" from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_REV_INVENTORY_CHANGE SI on AD.ACCOUNT_ID=SI.NEW_DIST_D AND PM.PRODUCT_ID=SI.DEFECTIVE_PRODUCT_ID AND SI.STATUS='REC' "+
							" AND SI.COLLECTION_ID IN ('1','3','6')WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME) AS REV_STK1 INNER JOIN (select COUNT(SI.SERIAL_NO_COLLECT) AS REV_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_REV_STOCK_INVENTORY SI on AD.ACCOUNT_ID=SI.CREATED_BY AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.STATUS IN ('REC','COL','ERR')"+
							" AND SI.COLLECTION_ID IN (1,2,3,6)WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME )AS REV_STK2 ON REV_STK1.PRODUCT_NAME=REV_STK2.PRODUCT_NAME) AS REV_STK_TEMP ON PENDING_STK_TEMP.PRODUCT_NAME=REV_STK_TEMP.PRODUCT_NAME INNER JOIN "+
							" (SELECT REV_DC_STK1.PRODUCT_NAME, REV_DC_STK1.REV_DC_STK + REV_DC_STK2.REV_DC_STK AS REV_DC_STK FROM "+
							" (select COUNT(SI.SERIAL_NO) AS REV_DC_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_REV_DELIVERY_CHALAN_DETAIL SI on AD.ACCOUNT_ID=SI.DIST_ID AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.STATUS IN ('IDC','S2W') WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 "+
							" GROUP BY PM.PRODUCT_NAME ) AS REV_DC_STK1 INNER JOIN (select COUNT(SI.SERIAL_NUMBER) AS REV_DC_STK, PM.PRODUCT_NAME "+
							" from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID LEFT OUTER JOIN DP_REV_CHURN_INVENTORY SI on AD.ACCOUNT_ID=SI.CREATED_BY AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.STATUS IN ('IDC','S2W')"+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME ) AS REV_DC_STK2 ON REV_DC_STK1.PRODUCT_NAME=REV_DC_STK2.PRODUCT_NAME) AS REV_DC_STK_TEMP ON REV_DC_STK_TEMP.PRODUCT_NAME=REV_STK_TEMP.PRODUCT_NAME INNER JOIN(select COUNT(SI.SERIAL_NUMBER) AS CHURN_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_REV_CHURN_INVENTORY SI on AD.ACCOUNT_ID=SI.CREATED_BY AND PM.PRODUCT_ID=SI.PRODUCT_ID AND SI.STATUS IN ('COL','REC')"+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME ) AS CHURN_STK_TEMP ON REV_DC_STK_TEMP.PRODUCT_NAME=CHURN_STK_TEMP.PRODUCT_NAME INNER JOIN "+
							" (select COUNT(SI.DEFECTIVE_SR_NO) AS UPGRADE_STK, PM.PRODUCT_NAME from DP_PRODUCT_MASTER PM inner join VR_ACCOUNT_DETAILS AD on PM.CIRCLE_ID=AD.CIRCLE_ID "+
							" LEFT OUTER JOIN DP_REV_INVENTORY_CHANGE SI on AD.ACCOUNT_ID=SI.NEW_DIST_D AND PM.PRODUCT_ID=SI.DEFECTIVE_PRODUCT_ID AND SI.STATUS='REC' AND SI.COLLECTION_ID='5' "+
							" WHERE AD.ACCOUNT_ID=? AND AD.ACCOUNT_LEVEL=6 AND PM.CATEGORY_CODE=1 GROUP BY PM.PRODUCT_NAME ) AS UPGRADE_STK_TEMP ON UPGRADE_STK_TEMP.PRODUCT_NAME=CHURN_STK_TEMP.PRODUCT_NAME ORDER BY PRODUCT_NAME WITH UR";
	//Added by Sugandha for list of distributor fnf to be appeared for ZSM approval  
	public static final String SQL_DISTRIBUTOR_LIST_APPROVE_FNF ="select FH.REQ_ID,FH.INITIATED_BY as TSM_ID,(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID) AS DIST_ID,(select LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID) AS DIST_OLM_ID, "+
							"	(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FH.DIST_ID) AS DIST_NAME, "+
							"	DAYS_SINCE_LAST_ACT, LM.LOGIN_NAME as TSM_OLM_ID, AD.ACCOUNT_NAME as TSM_NAME, FH.INIT_REMARKS,CASE WHEN IS_DEBIT='Y' then 'YES' else 'NO' end as DEBIT_REQ "+
							"	from DP_FNF_HEADER FH inner join VR_LOGIN_MASTER LM on FH.INITIATED_BY=LM.LOGIN_ID inner join VR_ACCOUNT_DETAILS AD on LM.LOGIN_ID=AD.ACCOUNT_ID  "+
							"	where FH.INITIATED_BY in (select ACCOUNT_ID from VR_ACCOUNT_DETAILS where PARENT_ACCOUNT=?) and FH.STATUS='INITIATED' with ur" ;
	//Added by Sugandha to insert approver details for FnF 
	public static final String SQL_INSERT__DP_FNF_HEADER_APPROVAL = "update DP_FNF_HEADER set APPROVED_BY=?, APPROVED_DT=current_timestamp, APPR_REMARKS=?, STATUS='APPROVED' where REQ_ID=? ";
	//Added by Suagndha for list of distributor fnf to be appeared for finance user confirmation
	public static final String SQL_CONFIRMATION_DIST_LIST_FNF = "select FH.REQ_ID,FH.INITIATED_BY as TSM_ID,(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID) AS DIST_ID,(select LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID)"+
							" AS DIST_OLM_ID,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FH.APPROVED_BY) AS ZSM_NAME,FH.APPR_REMARKS AS ZSM_REMARK, "+
							" (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FH.DIST_ID) AS DIST_NAME, DAYS_SINCE_LAST_ACT, LM.LOGIN_NAME as TSM_OLM_ID, AD.ACCOUNT_NAME as TSM_NAME, FH.INIT_REMARKS,CASE WHEN IS_DEBIT='Y' then 'YES' else 'NO' end as DEBIT_REQ "+
							" from DP_FNF_HEADER FH inner join VR_LOGIN_MASTER LM on FH.INITIATED_BY=LM.LOGIN_ID inner join VR_ACCOUNT_DETAILS AD on LM.LOGIN_ID=AD.ACCOUNT_ID  "+
							" where FH.CIRCLE in (select CIRCLE_ID from DP_ACCOUNT_CIRCLE_MAP where ACCOUNT_ID=?) and FH.STATUS='APPROVED' with ur "; // Condition changed by Neetika for multi circle issue on 12 Aug for confirm FNF
	//Added by Neetika
	public static final String SQL_CONFIRMATION_DIST_LIST_FNF_PAN = "select FH.REQ_ID,FH.INITIATED_BY as TSM_ID,(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID) AS DIST_ID,(select LOGIN_NAME from VR_LOGIN_MASTER where LOGIN_ID=FH.DIST_ID)"+
	" AS DIST_OLM_ID,(select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FH.APPROVED_BY) AS ZSM_NAME,FH.APPR_REMARKS AS ZSM_REMARK, "+
	" (select ACCOUNT_NAME from VR_ACCOUNT_DETAILS where ACCOUNT_ID=FH.DIST_ID) AS DIST_NAME, DAYS_SINCE_LAST_ACT, LM.LOGIN_NAME as TSM_OLM_ID, AD.ACCOUNT_NAME as TSM_NAME, FH.INIT_REMARKS,CASE WHEN IS_DEBIT='Y' then 'YES' else 'NO' end as DEBIT_REQ "+
	" from DP_FNF_HEADER FH inner join VR_LOGIN_MASTER LM on FH.INITIATED_BY=LM.LOGIN_ID inner join VR_ACCOUNT_DETAILS AD on LM.LOGIN_ID=AD.ACCOUNT_ID  "+
	" where  FH.STATUS='APPROVED' with ur "; // Condition changed by Neetika for multi circle issue on 12 Aug for confirm FNF

	public static final String SQL_UPDATE_CONFIMATION_DP_FNF_HEADER = "update DP_FNF_HEADER set CONFIRMED_BY=?, CONFIRMED_DT=current_timestamp, CONF_REMARKS=?, STATUS='CONFIRMED' where REQ_ID=?";
	//Added by sugandha to download data of distributor pincode data
	public static final String SQL_SELECT_ALL_DIST_PINCODE_MAP = "select DIST_OLM_ID,PINCODE from DP_DIST_PINCODE_MAP with ur";
	//Added by sugandha to validate that unique combination of distributor pincode mapping for DP-DTH_Phase-3
	public static final String SQL_SELECT_VALIDATE_UNIQUE_DISTPINMAP = "select count(*) from DP_DIST_PINCODE_MAP where DIST_OLM_ID = ? and PINCODE= ? with ur"; 
	public static final String SQL_CHK_PINCODE ="select count(*) from DP_DIST_PINCODE_MAP where PINCODE= ? with ur";
	public static final String SQL_UPDATE_DP_DIST_PINCODE = "UPDATE DPDTH.DP_DIST_PINCODE_MAP SET DIST_OLM_ID=? WHERE PINCODE=? ";
	public static final String SQL_INSERT_DP_DIST_MAP = "INSERT INTO DP_DIST_PINCODE_MAP(DIST_OLM_ID, PINCODE) VALUES(?, ?)";
	public static final String SQL_SELECT_DIST_CHK_EXISTS = "SELECT * FROM VR_LOGIN_MASTER WHERE GROUP_ID=7 AND LOGIN_NAME =? WITH UR";
	public static final String SQL_SELECT_TERMINATION = "SELECT ID, VALUE FROM DP_CONFIGURATION_DETAILS WHERE CONFIG_ID=26 WITH UR";
	
//	 Added by Sugandha ends here 
	//Added by Neetika for BFR 10 of DPDTH Release 3 on 2 Aug 2013
	public static final String SQL_SELECT_TERMINATION_DISTRIBUTOR = "select a.ID, a.VALUE from DP_CONFIGURATION_DETAILS a inner join DP_DISTRIBUTOR_MAPPING b on a.ID=b.TRANSACTION_TYPE_ID where CONFIG_ID=26 and DP_DIST_ID=? and b.STATUS='F' with ur";
	public static final String SQL_SELECT_TERMINATION_BOTH="select ID, VALUE from DP_CONFIGURATION_DETAILS where CONFIG_ID=26 and ID>2 with ur";
	//public static final String SQL_DELETE_DISTRIBUTOR_MAP="insert into DP_DISTRIBUTOR_MAPPING_HIST(DP_DIST_ID,EXT_DIST_ID,TRANSACTION_TYPE_ID,CREATED_DATE,UPDATED_DATE,PARENT_ACCOUNT,HIST_DATE) select DP_DIST_ID,EXT_DIST_ID,TRANSACTION_TYPE_ID,CREATED_DATE,UPDATED_DATE,PARENT_ACCOUNT,current timestamp from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? and TRANSACTION_TYPE_ID=?";
	public static final String SQL_DELETE_DISTRIBUTOR_MAP="update DP_DISTRIBUTOR_MAPPING set status='T' ,UPDATED_DATE=current_timestamp where DP_DIST_ID=? and TRANSACTION_TYPE_ID in ";
	//public static final String SQL_DELETE_DISTRIBUTOR_MAP_MAIN="delete from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? and TRANSACTION_TYPE_ID=?";
	public static final String SQL_SELECT_DISTRIBUTOR_MAIN_MAP="Select count(*) from DP_DISTRIBUTOR_MAPPING where DP_DIST_ID=? and STATUS in ('A','I','F') with ur";
	//public static final String SQL_INSERT_DISTRIBUTOR_LOGIN="insert into VR_LOGIN_MASTER_HIST (LOGIN_ID,LOGIN_NAME,PASSWORD,M_PASSWORD,STATUS,LOGIN_ATTEMPTED,GROUP_ID,IPWD_CHANGED_DT,TYPE,LAST_LOGIN_TIME,SUSPENSION_DT,HIST_DATE) select LOGIN_ID,LOGIN_NAME,PASSWORD,M_PASSWORD,STATUS,LOGIN_ATTEMPTED,GROUP_ID,IPWD_CHANGED_DT,TYPE,LAST_LOGIN_TIME,SUSPENSION_DT,current timestamp from VR_LOGIN_MASTER where LOGIN_ID=?";
	//public static final String SQL_DELETE_DISTRIBUTOR_LOGIN="delete from VR_LOGIN_MASTER where LOGIN_ID=?";
	public static final String SQL_DELETE_DISTRIBUTOR_LOGIN="update VR_LOGIN_MASTER set STATUS='T' where LOGIN_ID=?";
	//public static final String SQL_INSERT_DISTRIBUTOR_ACCOUNT="insert into VR_ACCOUNT_DETAILS_HIST select ACCOUNT_ID,MOBILE_NUMBER,SIM_NUMBER,ACCOUNT_ADDRESS,EMAIL,CATEGORY,ACCOUNT_LEVEL,CIRCLE_ID,PARENT_ACCOUNT,STATE_ID,CITY_ID,PIN_NUMBER,BILLABLE_ACC_ID,ROOT_LEVEL_ID,BILLABLE_ACCOUNT,OPENING_DT,CREATED_DT,CREATED_BY,UPDATED_DT,UPDATED_BY,ADDRESS_2,LAPU_MOBILE_NO,ZONE_ID,CONTACT_NAME,LAPU_MOBILE_NO_2,FTA_MOBILE_NO,FTA_MOBILE_NO_2,ZBM_ID,ZSM_ID,DIST_CHANNEL_ID,CHANNEL_CATEGORY_ID,BEAT_CODE,FINANCE_ID,COMMERCIAL_ID,SALES_ID,ACCOUNT_CODE,RETAILER_TYPE,OUTLET_TYPE,CHANNEL_TYPE,ALT_CHANNEL_TYPE,OCTROI_CHARGE,TIN_NO,PAN_NO,SERVICE_TAX_NO,CST_NO,REPORTING_EMAIL,ACCOUNT_NAME,CST_DATE,TIN_DATE,DISTRIBUTOR_LOCATOR,IS_REPAIR,IS_DISABLE,DISABLE_REMARK,SWAP_MANAGER_EMAIL_ID,SWAP_MANAGER_MOBILE_NUMBER,ALERT_TYPE,SR_NUMBER,APPROVAL_1,APPROVAL_2,current timestamp,REMARKS,TRANSACTION_TYPE,RET_DEMO_IDS from VR_ACCOUNT_DETAILS where ACCOUNT_ID=?";
	//public static final String SQL_DELETE_DISTRIBUTOR_ACCOUNT="delete from VR_ACCOUNT_DETAILS where ACCOUNT_ID=?";
	//end Neetika
	public static final String SQL_INSERT_RECO_DIST_HDR_AUDIT_TRAIL = "INSERT INTO DPDTH.DP_RECO_DIST_HEADER_AUDIT_TRAIL(ID, RECO_ID, "+
	" DIST_ID, SUBMISSION_DATE, REMARKS, HIST_DATE) SELECT ID, RECO_ID, DIST_ID, SUBMISSION_DATE, "+
	" REMARKS , current timestamp as HIST_DATE	FROM DPDTH.DP_RECO_DIST_HEADER where RECO_ID = ? "+
	" and DIST_ID = ?";
	public static final String SQL_UPDATE_RECO_DIST_HDR = " UPDATE DPDTH.DP_RECO_DIST_HEADER SET  SUBMISSION_DATE=(current timestamp + ? DAYS), REMARKS=REMARKS  WHERE RECO_ID =? and DIST_ID= ?";
	
	public static final String SQL_INSERT_RECO_DIST_DETILS_AUDIT_TRAIL=" INSERT INTO DPDTH.DP_RECO_DIST_DETAILS_AUDIT_TRAIL(RECO_ID, DIST_ID, PRODUCT_ID, PRODUCT_TYPE, CREATED_BY, CREATED_ON, SER_OPEN_STOCK, NSER_OPEN_STOCK, DEFECTIVE_OPEN_STOCK, UPGRADE_OPEN_STOCK, CHURN_OPEN_STOCK, PENDING_PO_OPENING, PENDING_DC_OPENING, RECEIVED_WH, RECEIVED_INTER_SSD_OK, RECEIVED_INTER_SSD_DEF,"
			+" RECEIVED_HIERARCHY_TRANS, INVENTORY_CHANGE, RECEIVED_UPGRADE, RECEIVED_CHURN, RETURNED_FRESH, RETURNED_INTER_SSD_OK, RETURNED_INTER_SSD_DEF, RETURNED_HIERARCHY_TRANS, RETURNED_DOA_BI, RETURNED_DOA_AI, RETURNED_SWAP, RETURNED_C2S, RETURNED_CHURN, FLUSH_OUT_OK, FLUSH_OUT_DEFECTIVE, SER_ACTIVATION, NSER_ACTIVATION,"+
			" RECO_QTY, SER_CLOSING_STOCK, NSER_CLOSING_STOCK, DEF_CLOSING_STOCK, UPGRADE_CLOSING_STOCK, CHURN_CLOSING_STOCK, PENDING_PO_CLOSING, PENDING_DC_CLOSING, UPDATED_ON,"+
			" CIRCLE_ID, RECO_STATUS, HEADER_ID, HIST_DATE)"+ 
			" SELECT RECO_ID, DIST_ID, PRODUCT_ID, PRODUCT_TYPE, CREATED_BY, CREATED_ON, SER_OPEN_STOCK, NSER_OPEN_STOCK, "+
			" DEFECTIVE_OPEN_STOCK, UPGRADE_OPEN_STOCK, CHURN_OPEN_STOCK, PENDING_PO_OPENING, PENDING_DC_OPENING, RECEIVED_WH, RECEIVED_INTER_SSD_OK, RECEIVED_INTER_SSD_DEF, "+
			" RECEIVED_HIERARCHY_TRANS, INVENTORY_CHANGE, RECEIVED_UPGRADE, RECEIVED_CHURN, RETURNED_FRESH, RETURNED_INTER_SSD_OK, RETURNED_INTER_SSD_DEF, RETURNED_HIERARCHY_TRANS, RETURNED_DOA_BI, RETURNED_DOA_AI, RETURNED_SWAP, RETURNED_C2S, RETURNED_CHURN,"+
			" FLUSH_OUT_OK, FLUSH_OUT_DEFECTIVE, SER_ACTIVATION, NSER_ACTIVATION, RECO_QTY, SER_CLOSING_STOCK, "+
			" NSER_CLOSING_STOCK, DEF_CLOSING_STOCK, UPGRADE_CLOSING_STOCK, CHURN_CLOSING_STOCK, PENDING_PO_CLOSING, PENDING_DC_CLOSING, UPDATED_ON, CIRCLE_ID,"+"" +
			" RECO_STATUS, HEADER_ID,current timestamp FROM DPDTH.DP_RECO_DIST_DETAILS where RECO_ID = ? and DIST_ID = ? ";
	public static final String SQL_UPDATE_RECO_DIST_DETILS=" UPDATE DPDTH.DP_RECO_DIST_DETAILS SET  RECO_STATUS='INITIATE' WHERE RECO_ID = ? and DIST_ID = ?";	
	public static final String SQL_INSERT_RECO_CERTIFICATE_DETAIL_AUDIT_TRAIL = "INSERT INTO DPDTH.DP_RECO_CERTIFICATE_DETAIL_AUDIT_TRAIL(CERTIFICATE_ID, PRODUCT_ID, QUANTITY, RECO_HEADER_ID, HIST_DATE)" 
				+" SELECT CERTIFICATE_ID, PRODUCT_ID, QUANTITY, RECO_HEADER_ID, current timestamp FROM "
				+" DPDTH.DP_RECO_CERTIFICATE_DETAIL where CERTIFICATE_ID in (select CERTIFICATE_ID from DP_RECO_CERTIFICATE_HDR where RECO_ID= ? and DIST_ID= ?)";
	public static final String SQL_INSERT_RECO_CERTIFICATE_HDR_AUDIT_TRAIL="INSERT INTO DPDTH.DP_RECO_CERTIFICATE_HDR_AUDIT_TRAIL(CERTIFICATE_ID, REF_NO, DIST_ID, CIRCLE_ID, CREATED_ON,"+
			" RECO_ID, RECO_HEADER_ID, HIST_DATE) SELECT CERTIFICATE_ID, REF_NO, DIST_ID, CIRCLE_ID,"
			+" CREATED_ON, RECO_ID, RECO_HEADER_ID,current timestamp FROM DPDTH.DP_RECO_CERTIFICATE_HDR where RECO_ID=? and DIST_ID=?";
	public static final String SQL_DELETE_RECO_CERTIFICATE_DETAIL_AUDIT_TRAIL="DELETE FROM DPDTH.DP_RECO_CERTIFICATE_DETAIL where CERTIFICATE_ID in (select CERTIFICATE_ID from DP_RECO_CERTIFICATE_HDR where RECO_ID=? and DIST_ID= ?) ";
	public static final String SQL_DELETE_RECO_CERTIFICATE_HDR_AUDIT="DELETE FROM DPDTH.DP_RECO_CERTIFICATE_HDR where RECO_ID=? and DIST_ID=?";
	public static final String VALIDATE_USER_OLM_ID = "SELECT LOGIN_NAME, GROUP_ID FROM VR_LOGIN_MASTER WHERE LOGIN_NAME =? with ur";
	public static final String GET_CHILD_USER_DETAILS = "select AD.ACCOUNT_ID, LM.LOGIN_NAME as OLM_ID, AD.ACCOUNT_NAME, GD.GROUP_NAME, CASE LM.STATUS when 'A' then 'ACTIVE' else 'INACTIVE' end as STATUS "
	+"from VR_ACCOUNT_DETAILS AD inner join VR_LOGIN_MASTER LM on AD.ACCOUNT_ID=LM.LOGIN_ID inner join VR_GROUP_DETAILS GD on LM.GROUP_ID=GD.GROUP_ID where PARENT_ACCOUNT=(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_NAME=?) and ad.account_id!=ad.parent_account and LM.STATUS in ('A','I') with ur";
	public static final String USER_CIRCLE_DETAIL = "select CM.CIRCLE_NAME,ac.CIRCLE_ID from DP_ACCOUNT_CIRCLE_MAP AC inner join VR_CIRCLE_MASTER CM on AC.CIRCLE_ID=CM.CIRCLE_ID where AC.ACCOUNT_ID=? with ur";
	public static final String GET_PARENT_DETAILS = "SELECT AD.ACCOUNT_NAME,LM.LOGIN_NAME,LM.LOGIN_ID FROM VR_LOGIN_MASTER LM inner join VR_ACCOUNT_DETAILS AD ON LM.LOGIN_ID=AD.ACCOUNT_ID WHERE LM.GROUP_ID=? and LM.LOGIN_NAME!=? WITH UR";
	public static final String GET_PARENT_DETAILS_TSM = "SELECT AD.ACCOUNT_NAME,LM.LOGIN_NAME,LM.LOGIN_ID FROM VR_LOGIN_MASTER LM inner join VR_ACCOUNT_DETAILS AD ON LM.LOGIN_ID=AD.ACCOUNT_ID WHERE LM.GROUP_ID=? and LM.LOGIN_NAME!=? and AD.TRANSACTION_TYPE=? WITH UR";
	public static final String GET_GROUP_ID = "SELECT GROUP_ID, LOGIN_ID, TRANSACTION_TYPE FROM VR_LOGIN_MASTER LM inner join VR_ACCOUNT_DETAILS AD on LM.LOGIN_ID=AD.ACCOUNT_ID WHERE LOGIN_NAME =? with ur";
	public static final String GET_CIRCLE_ID="SELECT CM.CIRCLE_NAME,ac.CIRCLE_ID from DP_ACCOUNT_CIRCLE_MAP AC inner join VR_CIRCLE_MASTER CM on AC.CIRCLE_ID=CM.CIRCLE_ID where AC.ACCOUNT_ID =(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_NAME=?) with ur";
	public static final String SQL_INSERT_ACCOUNT_DETAILS = "INSERT INTO DPDTH.VR_ACCOUNT_DETAILS_HIST(ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID," 
	+"PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2," 
	+"LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID," 
	+"CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE," 
	+"ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE," 
	+"DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER," 
	+"APPROVAL_1, APPROVAL_2, HIST_DATE, REMARKS, TRANSACTION_TYPE, RET_DEMO_IDS) SELECT ACCOUNT_ID, MOBILE_NUMBER, SIM_NUMBER, ACCOUNT_ADDRESS, EMAIL, CATEGORY, ACCOUNT_LEVEL, CIRCLE_ID, PARENT_ACCOUNT, STATE_ID, CITY_ID," 
	+"PIN_NUMBER, BILLABLE_ACC_ID, ROOT_LEVEL_ID, BILLABLE_ACCOUNT, OPENING_DT, CREATED_DT, CREATED_BY, UPDATED_DT, UPDATED_BY, ADDRESS_2," 
	+"LAPU_MOBILE_NO, ZONE_ID, CONTACT_NAME, LAPU_MOBILE_NO_2, FTA_MOBILE_NO, FTA_MOBILE_NO_2, ZBM_ID, ZSM_ID, DIST_CHANNEL_ID," 
	+"CHANNEL_CATEGORY_ID, BEAT_CODE, FINANCE_ID, COMMERCIAL_ID, SALES_ID, ACCOUNT_CODE, RETAILER_TYPE, OUTLET_TYPE, CHANNEL_TYPE," 
	+"ALT_CHANNEL_TYPE, OCTROI_CHARGE, TIN_NO, PAN_NO, SERVICE_TAX_NO, CST_NO, REPORTING_EMAIL, ACCOUNT_NAME, CST_DATE, TIN_DATE," 
	+"DISTRIBUTOR_LOCATOR, IS_REPAIR, IS_DISABLE, DISABLE_REMARK, SWAP_MANAGER_EMAIL_ID, SWAP_MANAGER_MOBILE_NUMBER, ALERT_TYPE, SR_NUMBER," 
	+"APPROVAL_1, APPROVAL_2, CURRENT_TIMESTAMP, 'User Hierarchy Transferred', TRANSACTION_TYPE, RET_DEMO_IDS" 
	+" FROM DPDTH.VR_ACCOUNT_DETAILS where ACCOUNT_ID=?";
	public static final String SQL_UPDATE_ACCOUNT_DETAILS = "UPDATE VR_ACCOUNT_DETAILS SET PARENT_ACCOUNT=? WHERE ACCOUNT_ID=?";
	public static final String SQL_INSERT_INLOGINDETAILS = "INSERT INTO DPDTH.VR_LOGIN_MASTER_HIST(LOGIN_ID, LOGIN_NAME, PASSWORD, M_PASSWORD, STATUS, LOGIN_ATTEMPTED, GROUP_ID, IPWD_CHANGED_DT, TYPE," 
	+"LAST_LOGIN_TIME, SUSPENSION_DT, HIST_DATE)SELECT LOGIN_ID, LOGIN_NAME, PASSWORD, M_PASSWORD, STATUS, LOGIN_ATTEMPTED, GROUP_ID, IPWD_CHANGED_DT, TYPE," 
	+"LAST_LOGIN_TIME, SUSPENSION_DT, CURRENT_TIMESTAMP FROM DPDTH.VR_LOGIN_MASTER where LOGIN_ID=?";
	public static final String SQLINSERT_INACCOUNTCIRCLE = "INSERT INTO DPDTH.DP_ACCOUNT_CIRCLE_MAP_HIST(ACCOUNT_ID, CIRCLE_ID, CREATED_BY, CREATED_ON, HIST_DATE)" 
	+"SELECT ACCOUNT_ID, CIRCLE_ID, CREATED_BY, CREATED_ON, CURRENT_TIMESTAMP FROM DPDTH.DP_ACCOUNT_CIRCLE_MAP where ACCOUNT_ID=?";
	public static final String SQL_GETPARENTID = "SELECT LOGIN_ID FROM VR_LOGIN_MASTER WHERE LOGIN_NAME=? with ur";
	public static final String GET_CHILD_USER_DETAILS_TSM = "select AD.ACCOUNT_ID, LM.LOGIN_NAME as OLM_ID, AD.ACCOUNT_NAME, GD.GROUP_NAME, CASE LM.STATUS when 'A' then 'ACTIVE' else 'INACTIVE' end as STATUS, CM.CIRCLE_NAME, CM.CIRCLE_ID" +
	" from VR_ACCOUNT_DETAILS AD inner join VR_LOGIN_MASTER LM on AD.ACCOUNT_ID=LM.LOGIN_ID inner join VR_GROUP_DETAILS GD on LM.GROUP_ID=GD.GROUP_ID" +
	" inner join VR_CIRCLE_MASTER CM on AD.CIRCLE_ID=CM.CIRCLE_ID inner join DP_DISTRIBUTOR_MAPPING DM on AD.ACCOUNT_ID=DM.DP_DIST_ID " +
	" where DM.PARENT_ACCOUNT=(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_NAME=?) and LM.STATUS in ('A','I') with ur";
	public static final String GET_TSM_TRANSACTION_TYPE = "select TRANSACTION_TYPE from VR_ACCOUNT_DETAILS where ACCOUNT_ID=(select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_NAME=?) with ur";
	public static final String WRONG_SHIP_TSM_UPDATE = "update DP_WRONG_SHIP_DETAIL set ASSIGNED_TO=? where ASSIGNED_TO=? and TSM_DECISION is null";
	public static final String SQL_UPDATE_DP_DIST_MAP = "update DP_DISTRIBUTOR_MAPPING set PARENT_ACCOUNT=? where DP_DIST_ID=? and TRANSACTION_TYPE_ID=?";
	public static final String SQL_GET_HISTORY = "SELECT SR_NUMBER,HIST_DATE as hDate,APPROVAL_1,APPROVAL_2,REMARKS FROM VR_ACCOUNT_DETAILS_HIST WHERE ACCOUNT_ID=?";

	public static final String SQL_RECO_PERIOD_LIST_ADMIN = " Select ID,FROM_DATE,TO_DATE from DP_RECO_PERIOD where (current date) > TO_DATE and IS_RECO_START =1  and IS_RECO_CLOSED !=1  order by ID with ur";
	
	public static final String SQL_PRODUCT_NAME="SELECT PRODUCT_NAME FROM DP_PRODUCT_MASTER WHERE PRODUCT_ID=? with ur";
	public static final String SQL_GET_TRANSACTION_TYPE="select CATEGORY_CODE from DP_PR_HEADER where PR_NO=(select PR_NO from PO_HEADER where PO_NO=? ) with ur";
	public static final String SQL_VIEW_ERROR_PO_INIT_FOR_TSM="SELECT CIRCLE_NAME, DISTRIBUTOR_OLM_ID, DISTRIBUTOR_NAME, TSM_NAME,PO_NO, DC_NO,  DC_DATE "+ 
						" from (select distinct ED.PO_NO, ED.DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE, ED.DIST_ID,case when POH.CATEGORY_CODE =1 then 2 else 1 end TRANSACTION_TYPE "+ 
						" FROM DP_ERROR_PO_DETAIL ED inner join PO_HEADER POH on ED.PO_NO=poh.PO_NO and POH.CATEGORY_CODE= "+
						" (select case TRANSACTION_TYPE when 1 then 2 else 1 end from VR_ACCOUNT_DETAILS where ACCOUNT_ID=?) "+
						" group by ED.PO_NO , ED.DC_NO, ED.DC_DATE, ED.DIST_ID, POH.CATEGORY_CODE order by DC_DATE DESC) temp "+  
						" join DPDTH.DP_DIST_DETAILS DD on  DD.DISTRIBUTOR_ID = temp.DIST_ID and DD.TSM_TRANSACTION_TYPE=temp.TRANSACTION_TYPE "+ 
						" and DD.TSM_ID = ? "+
						" union "+ 
						" SELECT CIRCLE_NAME, DISTRIBUTOR_OLM_ID, DISTRIBUTOR_NAME, TSM_NAME, PO_NO, DC_NO, "+
						" DC_DATE from ( "+ 
						" select distinct ED.PO_NO, ED.DC_NO, to_char(DC_DATE,'dd/MM/yyyy') as DC_DATE ,"+ 
						" ED.DIST_ID, case when POH.CATEGORY_CODE =1 then 2 else 1 end TRANSACTION_TYPE "+ 
						" FROM DP_ERROR_PO_DETAIL ED inner join PO_HEADER POH on ED.PO_NO=poh.PO_NO and POH.CATEGORY_CODE= "+
						" (select case TRANSACTION_TYPE when 1 then 2 else 1 end from VR_ACCOUNT_DETAILS where ACCOUNT_ID=?) "+
						" group by ED.PO_NO , ED.DC_NO, ED.DC_DATE, ED.DIST_ID, POH.CATEGORY_CODE order by DC_DATE DESC "+ 
						" ) temp "+  
						" join DPDTH.DP_DIST_DETAILS_SALES DD on  DD.DISTRIBUTOR_ID= temp.DIST_ID "+ 
						" and DD.TSM_TRANSACTION_TYPE=temp.TRANSACTION_TYPE "+ 
						" and DD.TSM_ID = ? with ur";
	// added by pratap
	public static final String SQL_SELECT_ACCOUNT_LEVEL_DIST = " SELECT LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER level1 "
		+ "  WHERE level1.ACC_LEVEL>(SELECT ACC_LEVEL "
		+ "  FROM VR_ACCOUNT_LEVEL_MASTER level2 WHERE  level2.level_id=(SELECT ACCOUNT_LEVEL FROM VR_ACCOUNT_DETAILS "
		+ "  WHERE ACCOUNT_ID=?  ) ) AND level1.ACC_LEVEL < 14 AND level1.HIERARCHY_ID in (SELECT HIERARCHY_ID FROM   VR_ACCOUNT_LEVEL_MASTER  WHERE "
		+ "	LEVEL_ID=(SELECT ACCOUNT_LEVEL  FROM VR_ACCOUNT_DETAILS  WHERE ACCOUNT_ID=?)) "
		+ "	union SELECT LEVEL_ID,LEVEL_NAME,ACC_LEVEL,HIERARCHY_ID FROM VR_ACCOUNT_LEVEL_MASTER level1 "
		+ "	where level1.HIERARCHY_ID = 2 "
		+ "	and  1= (SELECT ACCOUNT_LEVEL  FROM VR_ACCOUNT_DETAILS  WHERE ACCOUNT_ID=?) and level1.level_id<31 with ur";
	// adding end by pratap	
	
	public static final String  SQL_GET_PROD_CAT_CIRCLE="select product_id from dp_product_master where circle_id=? and product_type=? and product_category=? with ur";
	
	
	public static final String SQL_SELECT_CHILD_UNDER_CIRCLE_TSM ="Select distinct(map.CIRCLE_ID),(Select CIRCLE_NAME from VR_CIRCLE_MASTER where CIRCLE_ID =map.CIRCLE_ID ) as CIRCLE_NAME" +
			" from dp_account_circle_map map, DP_DISTRIBUTOR_MAPPING distmap , vr_account_details accd " +
			" where distmap.PARENT_ACCOUNT = ?  and map.CIRCLE_ID  in (?2)  and map.circle_id=accd.circle_id and accd.account_id=distmap.dp_dist_id with ur";
	public static final String SQL_SELECT_CHILD_UNDER_CIRCLE_ZSM ="Select distinct(map.CIRCLE_ID),(Select CIRCLE_NAME from VR_CIRCLE_MASTER where CIRCLE_ID =map.CIRCLE_ID ) as CIRCLE_NAME " +
			" from VR_ACCOUNT_DETAILS acc,dp_account_circle_map map,dp_account_circle_map child  where acc.PARENT_ACCOUNT = ? " +
			"	and map.CIRCLE_ID  in (?2)  and acc.ACCOUNT_ID != acc.PARENT_ACCOUNT and  map.circle_id=child.circle_id and child.account_id=acc.account_id with ur";
	//Neetika for Prod issue of restriction of AV users for reverse flow
	public static final String GET_TRANSACTION_TYPE_REVERSE = "Select count(*) from DP_DISTRIBUTOR_MAPPING where  DP_DIST_ID=? and TRANSACTION_TYPE_ID =2 with ur";
	
	//added by beeru on 16 Apr 2014
	public static final String SQL_SELECT_FROM_TEMP = "SELECT SERIAL_NO,STOCK_TYPE,DIST_FLAG,DIST_REMARKS, OTHER_REMARKS FROM RECO_CLOSINGSTOCK_TEMP WHERE DIST_ID= ? and RECO_PERIOD_ID=? AND PRODUCT_ID=? WITH UR";
	public static final String SQL_UPDATE_SERIALIZED_STOCK = "UPDATE RECO_SERIALIZED_STOCK  SET DIST_FLAG = ?  , DIST_REMARKS= ? , OTHER_REMARKS = ? , UPDATED_ON = current timestamp WHERE RECO_ID =? AND DISTRIBUTOR_ID =? AND PRODUCT_ID =?  ";
	public static final String SQL_UPDATE_DEFECTIVE_STOCK = "UPDATE RECO_DEFECTIVE_STOCK  SET DIST_FLAG = ? , DIST_REMARKS= ? ,OTHER_REMARKS = ?, UPDATED_ON = current timestamp   WHERE RECO_ID =?  AND FROM_DIST_ID =? AND DEFECTIVE_PRODUCT_ID =? ";
	public static final String SQL_UPDATE_UPGRADE_STOCK = "UPDATE RECO_UPGRADE_STOCK  SET DIST_FLAG = ? ,DIST_REMARKS= ? ,OTHER_REMARKS = ?,UPDATED_ON = current timestamp WHERE  RECO_ID =?  AND FROM_DIST_ID =? AND DEFECTIVE_PRODUCT_ID =? ";
	public static final String SQL_UPDATE_CHURN_STOCK = "UPDATE RECO_CHURN_STOCK  SET DIST_FLAG = ?  , DIST_REMARKS= ?  ,OTHER_REMARKS = ?,UPDATED_ON = current timestamp WHERE  RECO_ID =?  AND FROM_DIST_ID =? AND DEFECTIVE_PRODUCT_ID =? ";
	public static final String GET_ALL_ACCOUNTS_UNDER_SINGLE_ACCOUNT_DIST = "select ACCOUNT_ID, ACCOUNT_NAME from VR_ACCOUNT_DETAILS where account_id in (select DP_DIST_ID from  dp_distributor_mapping where PARENT_ACCOUNT=?) and (IS_DISABLE='N' or IS_DISABLE is null) ORDER BY ACCOUNT_NAME with ur";
	//Neetika for inter ssd issue
	public static final String CHECK_NUMBER_OF_REQUESTS_PEDING = "select count(*) from DP_DIST_STOCK_TRANSFER where FROM_DIST_ID=? and TO_DIST_ID=? and PRODUCT_ID=? and dc_no is null with ur";
	//Neetika for BFR 2 on 25-07-2014
	public static final String GET_FLAG_ELIGIBILITY = "select DD_VALUE from dp_configuration_details where config_id=30 with ur";
	//Neetika for BFR 3 on 31 July 2014
	public static final String GET_ALL_ZONES = "select region_id,region_name from vr_region_master  where region_id!=0 with ur "; 
	public static final String GET_ALL_CIRCLES_ZONE = "select c.circle_name,c.circle_id from vr_circle_master c,vr_region_master r where c.region_id=r.region_id and r.region_id!=0 and r.region_id in (?) with ur ";
	//Neetika added query to check region and distributor mapoing
	public static final String SQL_SELECT_OLMID_ZONE =  "SELECT count(1) FROM VR_LOGIN_MASTER LM,VR_ACCOUNT_DETAILS AD,VR_CIRCLE_MASTER CM,VR_REGION_MASTER RM "+
	 "WHERE LM.LOGIN_NAME= ? and LM.LOGIN_ID = AD.ACCOUNT_ID and AD.CIRCLE_ID = CM.CIRCLE_ID and RM.REGION_ID = CM.REGION_ID and CM.REGION_ID=?  with ur";

	public static final String SQL_RETAILER_LAPU_DATA_LIST="SELECT LOGIN_NAME as LOGIN_NAME, ACCOUNT_NAME, RETAILER_LAPU, LAPU_MOBILE_NO as Mobile1, LAPU_MOBILE_NO_2 as Mobile2, FTA_MOBILE_NO as Mobile3, FTA_MOBILE_NO_2 as Mobile4" 
			+" FROM VR_ACCOUNT_DETAILS VAD, VR_LOGIN_MASTER VLM"
			+" WHERE VAD.ACCOUNT_ID = VLM.LOGIN_ID and account_level=8 with ur";
	
	public static final String SQL_UPDATE_LAPU_NUMBERS = "UPDATE VR_ACCOUNT_DETAILS " +
    "SET LAPU_MOBILE_NO=?, LAPU_MOBILE_NO_2=?, FTA_MOBILE_NO=?, FTA_MOBILE_NO_2=?, RETAILER_LAPU=? " +
    "WHERE ACCOUNT_ID=?";
	
	public static final String SQL_UPDATE_LAPU_NUMBERS_STATUS="UPDATE VR_LOGIN_MASTER set STATUS=? where LOGIN_ID=? and STATUS!='I'";
	
	// Sanjay... Query for Pending and InterSSD Stock Transfer bulk upload
	public static final String SQL_UPDATE_PENDING_LIST_BULK_INV_CHANGE = "UPDATE DP_REV_INVENTORY_CHANGE set DEFECTIVE_PRODUCT_ID = ?,NEW_DIST_D = ?, INV_CHANGE_DATE = CURRENT TIMESTAMP, UPDATED_ON = CURRENT TIMESTAMP where DEFECTIVE_SR_NO = ?" +
			" and days(current date)- days(inv_change_date) > 210";
	
	public static final String SQL_UPDATE_PENDING_LIST_BULK_INV = "UPDATE DP_REV_STOCK_INVENTORY SET COLLECTION_DATE = CURRENT DATE, CREATED_ON = CURRENT TIMESTAMP, CREATED_BY = ?, UPDATED_ON = CURRENT TIMESTAMP, UPDATED_BY = ?, INV_CHANGE_DT = CURRENT TIMESTAMP, CIRCLE_ID = ? WHERE SERIAL_NO_COLLECT =? and days(current date)- days(inv_change_dt) > 210";
	
	public static final String SQL_INSERT_UPLOAD_TRAIL_STOCK_TRANSFER = "INSERT INTO DP_UPLOAD_TRAIL_STOCK_TRANSFER(TRAIL_ID, FROM_DIST_ID, TO_DIST_ID, DEF_PRODUCT_ID, DEF_SERIAL_NO, CHANGE_PRODUCT_ID, CHANGE_SERIAL_NO, UPLOADED_ON, UPLOADED_BY, UPLOADED_STATUS) " +
		" VALUES(NEXTVAL FOR TRAIL_ID_SEQ, ?, ?, ?, ?, ?, ?, current timestamp, ?, ?)";
	
	public static final String SQL_SELECT_UPLOAD_TRAIL_STOCK_TRANSFER = "select count(*) from DP_UPLOAD_TRAIL_STOCK_TRANSFER where FROM_DIST_ID = ? and DEF_PRODUCT_ID = ?  and DEF_SERIAL_NO = ? with ur"; 
	
	public static final String SQL_UPDATE_UPLOAD_TRAIL_STOCK_TRANSFER = "UPDATE DP_UPLOAD_TRAIL_STOCK_TRANSFER set CHANGE_SERIAL_NO = ?, CHANGE_PRODUCT_ID = ?, TO_DIST_ID = ? where FROM_DIST_ID = ? and DEF_PRODUCT_ID = ?  and DEF_SERIAL_NO = ?";
	
	
	public static final String SQL_UPDATE_INTER_SSD_STOCK_TRANSFER = "UPDATE DP_STOCK_INVENTORY set DISTRIBUTOR_ID =?, DISTRIBUTOR_PURCHASE_DATE = CURRENT TIMESTAMP where SERIAL_NO=? and PRODUCT_ID = ?  with ur";
	
	public static final String SQL_INSERT_UPLOAD_INTER_SSD_TRAIL_TRANSFER = "INSERT INTO DP_UPLOAD_TRAIL_STOCK_TRANSFER(TRAIL_ID, FROM_DIST_ID, TO_DIST_ID, CHANGE_PRODUCT_ID, CHANGE_SERIAL_NO, UPLOADED_ON, UPLOADED_BY, UPLOADED_STATUS) " +
	" VALUES(NEXTVAL FOR TRAIL_ID_SEQ, ?, ?, ?, ?, current timestamp, ?, ?)";

	public static final String SQL_SELECT_UPLOAD_INTER_SSD_TRAIL_TRANSFER = "select count(*) from DP_UPLOAD_TRAIL_STOCK_TRANSFER where FROM_DIST_ID = ?  and CHANGE_SERIAL_NO = ? with ur"; 

	public static final String SQL_UPDATE_UPLOAD_INTER_SSD_TRAIL_TRANSFER = "UPDATE DP_UPLOAD_TRAIL_STOCK_TRANSFER set  TO_DIST_ID = ? where CHANGE_SERIAL_NO = ?";
	
	public static final String SQL_SELECT_OLMID_INTER_SSD_BULK =  "select LOGIN_ID from VR_LOGIN_MASTER where LOGIN_NAME = ? and STATUS = 'A' with ur";
	
	//public static final String SQL_SELECT_OLD_TO_DIST_ID = "select distributor_id from DP_STOCK_INVENTORY where serial_no = ? with ur";
	
	public static final String SQL_SELECT_DP_DDST_SERIAL_NO = "select REQ_ID from DP_DDST_SERIAL_NO where serial_no = ? order by req_id desc fetch first row only with ur";
	
	public static final String SQL_UPDATE_DIST_STOCK_TRANSFER = "update DP_DIST_STOCK_TRANSFER set TO_DIST_ID = ?, UPDATED_BY = ?, UPDATED_DATE = CURRENT TIMESTAMP where REQ_ID = ?";
	
	public static final String SQL_SELECT_SERIAL_NO = "select count(*) from DP_STOCK_INVENTORY where serial_no = ? with ur";
	
	public static final String SQL_SELECT_REV_INV_SERIAL_NO = "select count(*) from DP_REV_INVENTORY_CHANGE where DEFECTIVE_SR_NO = ? with ur";
	
	public static final String SQL_SELECT_REV_INV_NEW_SERIAL_NO = "select count(*) from DP_REV_INVENTORY_CHANGE where NEW_SR_NO = ? with ur";
	
	public static final String SQL_SELECT_CHURN_SERIAL_NO = "select count(*) from DP_REV_CHURN_INVENTORY where SERIAL_NUMBER = ? with ur";
	
	public static final String SQL_GET_COLLECTION_ID = "select COLLECTION_ID from DP_REV_INVENTORY_CHANGE where DEFECTIVE_SR_NO = ? with ur";
	
	public static final String SQL_UPDATE_CHURN_BULK_INV = "UPDATE DP_REV_CHURN_INVENTORY set CIRCLE_ID =?, CREATED_ON = CURRENT TIMESTAMP, CREATED_BY=?,PURCHASE_DT=CURRENT TIMESTAMP where SERIAL_NUMBER=?  and days(current date)- days(PURCHASE_DT) > 210  with ur";
	
	public static final String SQL_SELECT_CIRCLE_ID = "select AD.CIRCLE_ID from VR_LOGIN_MASTER LM, VR_ACCOUNT_DETAILS AD"+ 
													  " left outer join DP_PRODUCT_MASTER PM on PRODUCT_ID = ? and PM.CIRCLE_ID = AD.CIRCLE_ID AND CM_STATUS='A'"+
													  " where LM.LOGIN_ID=AD.ACCOUNT_ID and LM.LOGIN_ID = ? with ur";
	public static final String SQL_UPDATE_DOA_BI = "UPDATE DP_STOCK_INVENTORY_ASSIGNED set DISTRIBUTOR_ID =?, DISTRIBUTOR_PURCHASE_DATE = CURRENT TIMESTAMP, UPDATED_ON = CURRENT TIMESTAMP WHERE SERIAL_NO = ? and days(current date)- days(DISTRIBUTOR_PURCHASE_DATE) > 210  with ur";
	 
	public static final String SQL_SELECT_DP_DIST = "select count(*) from DP_DIST_STOCK_TRANSFER where REQ_ID = ? with ur";
	
	public static final String SQL_UPDATE_DP_DIST_UPDATE = "update DP_DIST_STOCK_TRANSFER set  FROM_DIST_ID = ?, TO_DIST_ID = ? where req_id = ?";
	
	public static final String SQL_SELECT_DP_DDST = "select count(*) from DP_DDST_SERIAL_NO where REQ_ID = ? with ur";

	public static final String SQL_UPDATE_DP_DDST = "update DP_DDST_SERIAL_NO set DC_NO = ?, SERIAL_NO = ? where REQ_ID = ?";


			                
	
	
	//end
}

